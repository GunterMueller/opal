# top-level command genmake'GenMake
TOPSTRUCT = GenMake
TOPCOM = genmake
SYS_LDFLAGS = $(VAR_LDFLAGS) 
SYS_LDLIBS =  -lopal_base $(VAR_LDLIBS)
SYS_LDLIBPATH =  -L@@OPAL_BASE@@ $(VAR_LDLIBPATH)
SYS_LDLIBDEPS =  $(VAR_LDLIBDEPS)
SYS_OC1FLAGS = $(VAR_OC1FLAGS)  -v2
SYS_OC2FLAGS = $(VAR_OC2FLAGS)  -v2
SYS_CCFLAGS = $(VAR_CCFLAGS)  $(VERB_CC)
GENSTRUCTS =  OptionScan GenMake
SIGNS =  OptionScan.sign GenMake.sign
IMPLS =  OptionScan.impl GenMake.impl
EXPS =  OCS/OptionScan.sign.inter OCS/GenMake.sign.inter
ANAS =  OCS/OptionScan.impl.inter OCS/GenMake.impl.inter
OPTS =  OCS/OptionScan.opt OCS/GenMake.opt
CS =  OCS/OptionScan.oc.c OCS/GenMake.oc.c
OS =  OCS/OptionScan.o OCS/GenMake.o
ESYSTEMS = 
FSYSTEMS =  @@OPAL_BASE@@
SIGNDEPS =  OCS/OptionScan.sign.deps OCS/GenMake.sign.deps
IMPLDEPS =  OCS/OptionScan.impl.deps OCS/GenMake.impl.deps
OCS/OptionScan.sign.inter: OptionScan.sign
	@$(ECHO) "Checking Signature of OptionScan ..." && $(OC1) $(OC1FLAGS) $(SYS_OC1FLAGS) -s  -h. OptionScan  -e@@OPAL_BASE@@ -r  Com Pair Map Seq Seq Seq BTUnion Denotation String Nat $(OCSYSPARAM)
	@if [ -n "$(DOSFOPROOT)" ] ; then $(ECHO) "Marking OptionScan for documentation ..." &&  $(ECHO) OptionScan >> $(DOSFOPROOT)/only ; fi
OCS/OptionScan.impl.inter : OptionScan.impl OCS/OptionScan.sign.inter
	@$(ECHO) "Checking Implementation of OptionScan ..." && $(OC1) $(OC1FLAGS) $(SYS_OC1FLAGS) -i  -h. OptionScan  -e@@OPAL_BASE@@ -r  RealConv BoolConv IntConv NatConv StringConv SeqConv MapConv ComCompose Env Com Map SeqReduce SeqMap Seq Option Pair StringConv StringFilter StringScan StringFormat BTUnion Compose String Denotation Char Nat $(OCSYSPARAM)
	@if [ $(DOSFOPROOT) ] ; then $(ECHO) "Marking OptionScan for documentation ..." &&  $(ECHO) OptionScan >> $(DOSFOPROOT)/only ; fi
OCS/OptionScan.oc.c OCS/OptionScan.opt: OCS/OptionScan.impl.inter
	@if [ "$@" = "OCS/OptionScan.oc.c" ] ; then $(ECHO) "Generating C Code for OptionScan ..." && $(OC2) $(OC2FLAGS) $(SYS_OC2FLAGS)   -h. OptionScan  -e@@OPAL_BASE@@ -r  RealConv BoolConv IntConv NatConv StringConv SeqConv MapConv ComCompose Env Com Map SeqReduce SeqMap Seq Option Pair StringConv StringFilter StringScan StringFormat BTUnion Compose String Denotation Char Nat $(OCSYSPARAM); fi
OCS/OptionScan.o: OCS/OptionScan.oc.c 
	@$(ECHO) "Generating $(ARCH) object code for OptionScan ..." && $(CC) $(CCFLAGS) $(SYS_CCFLAGS) -c OCS/OptionScan.oc.c -o OCS/OptionScan.o
OCS/GenMake.sign.inter: GenMake.sign
	@$(ECHO) "Checking Signature of GenMake ..." && $(OC1) $(OC1FLAGS) $(SYS_OC1FLAGS) -s  -h. GenMake  -e@@OPAL_BASE@@ -r  Void Com $(OCSYSPARAM)
	@if [ -n "$(DOSFOPROOT)" ] ; then $(ECHO) "Marking GenMake for documentation ..." &&  $(ECHO) GenMake >> $(DOSFOPROOT)/only ; fi
OCS/GenMake.impl.inter : GenMake.impl OCS/GenMake.sign.inter OCS/OptionScan.sign.inter
	@$(ECHO) "Checking Implementation of GenMake ..." && $(OC1) $(OC1FLAGS) $(SYS_OC1FLAGS) -i  -h. GenMake  -h. -r  OptionScan -e@@OPAL_BASE@@ -r  DEBUG Time FileSystem File Process ProcessArgs ComCheck ComSeqReduce ComCompose Com Void MapReduce MapConv Map SetConv Set BitsetConv Bitset Pair Option StringConv StringFormat BTUnion StringFilter StringMap StringReduce String Denotation PrintableChar Char SeqConv SeqSort SeqFilter SeqReduce SeqMap Seq Nat Compose $(OCSYSPARAM)
	@if [ $(DOSFOPROOT) ] ; then $(ECHO) "Marking GenMake for documentation ..." &&  $(ECHO) GenMake >> $(DOSFOPROOT)/only ; fi
OCS/GenMake.oc.c OCS/GenMake.opt: OCS/GenMake.impl.inter
	@if [ "$@" = "OCS/GenMake.oc.c" ] ; then $(ECHO) "Generating C Code for GenMake ..." && $(OC2) $(OC2FLAGS) $(SYS_OC2FLAGS) -zgForeignInterface  -h. GenMake  -h. -r  OptionScan -e@@OPAL_BASE@@ -r  DEBUG Time FileSystem File Process ProcessArgs ComCheck ComSeqReduce ComCompose Com Void MapReduce MapConv Map SetConv Set BitsetConv Bitset Pair Option StringConv StringFormat BTUnion StringFilter StringMap StringReduce String Denotation PrintableChar Char SeqConv SeqSort SeqFilter SeqReduce SeqMap Seq Nat Compose $(OCSYSPARAM); fi
OCS/GenMake.o: OCS/GenMake.oc.c 
	@$(ECHO) "Generating $(ARCH) object code for GenMake ..." && $(CC) $(CCFLAGS) $(SYS_CCFLAGS) -c OCS/GenMake.oc.c -o OCS/GenMake.o
