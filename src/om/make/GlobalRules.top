# Generic make rules for OCS top-level systems 
# $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/om/make/GlobalRules.top,v 1.1.1.1 1998-06-16 15:59:50 wg Exp $

OM_RULES_INCLUDED	:= yes

# Jump to the default target
_default: all


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Derived Definitions

# Local definitions & rules generated by genmake
LOCALDEFS 	:= $(OCSDIR)/OcsDefs-$(SYSDEFS)
include 	$(LOCALDEFS)

# System description variables derived for this kind of system
OBJECTS 	:= $(EXPS) $(ANAS) $(OPTS) $(CS) $(OS) \
	  	  $(OCSDIR)/_$(TOPSTRUCT)_$(TOPCOM).o   
VERSIONFILE 	:= $(TOPSTRUCT).impl
BOOTOBJECTS	:= $(CS) $(OCSDIR)/$(TOPSTRUCT).h

SOINTERNAME := $(OCSDIR)/lib$(TOPSTRUCT).so
SOTABLENAME := $(OCSDIR)/lib$(TOPSTRUCT).tso
SONAME := $(SOINTERNAME).1.0


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Targets

# The action on this node associated with all

_all: $(TOPCOM)

ifeq ($(strip $(shared)),yes)
_all: $(SONAME) 
endif

ifeq ($(strip $(dldrpath)),yes)
RLDLIBPATH = $(patsubst -L%, $(LDRPATH)%, $(SYS_LDLIBPATH) $(LDLIBPATH))
endif

ifeq ($(strip $(ldstatic)),yes)
ACT_SYS_LDLIBS=$(LDSTATIC) $(SYS_LDLIBS) $(LDDYNAMIC)
else
ACT_SYS_LDLIBS=$(SYS_LDLIBS)
endif

$(TOPCOM):  $(OS) $(OCSDIR)/_$(TOPSTRUCT)_$(TOPCOM).o \
	    $(SYS_LDLIBDEPS) $(LDLIBDEPS)
	@$(ECHO) "Linking $(TOPCOM) ..." ; \
	$(LD) $(LDFLAGS) $(SYS_LDFLAGS) -o $(TOPCOM) \
	$(OCSDIR)/_$(TOPSTRUCT)_$(TOPCOM).o $(OS) \
	$(SYS_LDLIBPATH) $(LDLIBPATH) $(RLDLIBPATH) \
	$(ACT_SYS_LDLIBS) $(LDLIBS)

# Compiling startup code

$(OCSDIR)/_$(TOPSTRUCT)_$(TOPCOM).o: $(OCSDIR)/$(TOPSTRUCT).o 
	@$(ECHO) "Generating startup code for $(TOPCOM) ..."; \
	$(CC) $(CCFLAGS) $(SYS_CCFLAGS) \
	-Dcommand=__A$(TOPSTRUCT)_A$(TOPCOM) -Dinit=init_A$(TOPSTRUCT) \
	-Dinclude='"$(TOPSTRUCT).h"' \
	-o $(OCSDIR)/_$(TOPSTRUCT)_$(TOPCOM).o -c $(OSTART)


# Linking shared object

ifeq ($(strip $(DLD)),"")
$(SONAME):
	@$(ECHO) "Shared objects not supported on this platform"
else
$(SONAME): $(OS) $(SYS_LDLIBDEPS) $(LDLIBDEPS)
	@$(ECHO) "Linking shared object $(TOPSTRUCT) ..." ; \
	$(DLD) $(LDFLAGS) $(SYS_LDFLAGS) -o $(SONAME) \
	    $(OS) \
	    $(SYS_LDLIBPATH) $(LDLIBPATH) $(DLDLDLIBPATH) $(RLDLIBPATH) \
	    $(SYS_LDLIBS) $(LDLIBS) $(DLDLDLIBS) && \
	(cd $(OCSDIR); ln -s `$(BASENAME) $(SONAME)` \
			   `$(BASENAME) $(SOINTERNAME)` 2>/dev/null || true); \
	$(RM) -f $(SOTABLENAME); \
	for _struct in $(GENSTRUCTS); \
	do $(ECHO) $$_struct >> $(SOTABLENAME); done
endif


# The action to generate $(LOCALDEFS)


$(LOCALDEFS): $(SYSDEFS) $(SIGNDEPS) $(IMPLDEPS) $(EXTPDEPS) $(INTPDEPS)
	@$(ECHO) "Generating rules for $(TOPCOM)'$(TOPSTRUCT) ..."; \
	if [ ! -d $(OCSDIR) ]; \
	then $(MKDIR) $(OCSDIR); fi; \
	$(GENMAKE) -OM -gen $(LOCALDEFS) -depfiles \
		-deps "$(OPALIMPORTS) < %s" \
		$(GENOPTIONS) $(VAR_GENOPTIONS) $(REL_GENOPTIONS) \
			$(GENSUBSYS) $(TOPSTRUCT) $(TOPCOM)


OCS/%.deps: %
	@$(ECHO) "Checking dependencies of $?"; \
	$(RM) -f $@; $(OPALIMPORTS) < $? > $@


#%.extp: 
#	@if [ ! -f "$@" ]; \
#	then $(ECHO) "EXTERNAL PROPERTIES $* -- empty" > $@; fi

#%.intp: 
#	@if [ ! -f "$@" ]; \
#	then $(ECHO) "INTERNAL PROPERTIES $* -- empty" > $@; fi


.PRECIOUS: $(EXTPS) $(INTPS)


# The check action

_check: $(INTPINTERS)


# The clean action 

_clean:
	@$(ECHO) "Cleaning up ..."; \
	rm -rf $(TOPCOM) $(OCSDIR)/*


# The install action 

_install: _installtopcom _installmanuals 

_installtopcom: $(TOPCOM)
	@-if [ -z "$(INSTALLBINPATH)" ] ; \
	then $(ECHO) "You must define the variable INSTALLBINPATH."; \
	else $(ECHO) "Installing $(TOPCOM) in $(INSTALLBINPATH) ..."; \
	     $(OCSOM)/etc/xinstall $(INSTALLBINFLAGS) \
		$(TOPCOM) $(INSTALLBINPATH) ; \
	fi



# The action to derive the release objects

_releaseobjects: $(RELEASEOBJECTS)


# The action to derive the boot objects

_bootobjects: $(CS) 



# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Include rules generic for all OCS systems

include $(OMLIBPATH)/GlobalRules
