# Generic rules for OCS handcoded subsystems  -*- makefile -*-
# $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/om/make/GlobalRules.subhc,v 1.4 1999-10-10 19:57:34 kd Exp $

OM_RULES_INCLUDED	:= yes

# Jump to the default target
_default: all


INCLUDELOCALDEFS := yes
ifeq ($(MAKECMDGOALS),clean)
INCLUDELOCALDEFS := no
endif
ifeq ($(MAKECMDGOALS),_clean)
INCLUDELOCALDEFS := no
endif
ifeq ($(strip $(findstring clean,$(MAKECMDGOALS))), clean)
INCLUDELOCALDEFS := no
endif
ifeq ($(MAKECMDGOALS),cleanobj)
INCLUDELOCALDEFS := no
endif
ifeq ($(MAKECMDGOALS),_cleanobj)
INCLUDELOCALDEFS := no
endif
ifeq ($(strip $(findstring cleanobj,$(MAKECMDGOALS))), cleanobj)
INCLUDELOCALDEFS := no
endif

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Derived Definitions

# Local definitions & rules generated by genmake
LOCALDEFS 	= $(OCSDIR)/OcsDefs-$(SYSDEFS) 
ifeq ($(INCLUDELOCALDEFS),yes)
-include 	$(LOCALDEFS)
endif

# System description variables derived for this kind of system
FOREIGNCS := $(patsubst %,%.hc.c,$(FOREIGNSTRUCTS))
FOREIGNHS := $(patsubst %,%.hc.h,$(FOREIGNSTRUCTS))
NORMHS := $(patsubst %,$(OCSDIR)/%.h,$(NORMSTRUCTS))
FOREIGNCTMPLS := $(patsubst %,%.hc.c.tmpl,$(FOREIGNSTRUCTS))
FOREIGNHTMPLS := $(patsubst %,%.hc.h.tmpl,$(FOREIGNSTRUCTS))
FOREIGNINTER := $(patsubst %,$(OCSDIR)/%.h,$(FOREIGNSTRUCTS) $(NORMSTRUCTS))
NORMSPECS := $(patsubst %,-cinter:%,$(NORMSTRUCTS))
FOREIGNSPECS := $(patsubst %,-ctmpl:%,$(FOREIGNSTRUCTS))
OBJECTS := $(EXPS) $(OPTS) $(FOREIGNINTER) $(FOREIGNHS)
INTERS := $(SIGNINTERS) # $(IMPLINTERS) $(EXTPINTERS) $(INTPINTERS)

GENOPTIONS += $(NORMSPECS) $(FOREIGNSPECS) -keep

VERSIONFILE 	:= 
RELEASEOBJECTS	:= 
BOOTOBJECTS	:= $(CS) 

ARNAME := $(OCSDIR)/lib$(NODENAME).a
SOINTERNAME := $(OCSDIR)/lib$(NODENAME).so
SOTABLENAME := $(OCSDIR)/lib$(NODENAME).tso
SONAME := $(SOINTERNAME).1.0

SUBSYSTEMNAMES = $(foreach SYS, $(ESYSTEMS) $(FSYSTEMS), $(notdir $(SYS)))

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Targets

# The action on this node associated with all

ifneq ($(strip $(archive)),no)
_all: $(ARNAME)
endif

ifeq ($(strip $(shared)),yes)
_all: $(SONAME)
endif

.NOBPOOL: $(ARNAME) $(SONAME)

$(ARNAME): $(EXPS) $(OS)
	@$(ECHO) "Archiving $(NODENAME) ..." ; \
	$(RM) -f $(ARNAME) ; \
	$(AR) q $(ARNAME) $(OS) && \
	$(RANLIB) $(ARNAME)

ifeq ($(strip $(dldrpath)),yes)
RLDLIBPATH= \
	$(patsubst -L%, $(LDRPATH)%, $(SYS_LDLIBPATH) $(LDLIBPPATH) $(DLDLDLIBPATH))
endif

ifeq ($(strip $(DLD)),"")
$(SONAME):
	@$(ECHO) "Shared objects not supported on this platform"
else
$(SONAME): $(EXPS) $(OS) 
	@$(ECHO) "Linking shared object $(NODENAME) ..." ; \
	$(DLD) $(LDFLAGS) $(SYS_LDFLAGS) -o $(SONAME) \
	  $(OS) \
	  $(SYS_LDLIBPATH) $(LDLIBPATH) $(DLDLDLIBPATH) $(RLDLIBPATH) \
          $(SYS_LDLIBS) $(LDLIBS) $(DLDLDLIBS) && \
	(cd $(OCSDIR); ln -s `$(BASENAME) $(SONAME)` \
			   `$(BASENAME) $(SOINTERNAME)` 2>/dev/null || true);\
	$(RM) -f $(SOTABLENAME); \
	for _struct in $(GENSTRUCTS); \
	do $(ECHO) $$_struct >> $(SOTABLENAME); done
endif


# The action to generate $(LOCALDEFS)

$(LOCALDEFS): $(SYSDEFS) $(SIGNDEPS) $(IMPLDEPS) $(EXTPDEPS) $(INTPDEPS)
	@$(ECHO) "Generating rules for subsystem $(NODENAME) ..."; \
	if [ ! -d $(OCSDIR) ]; \
	then $(MKDIR) $(OCSDIR); fi; \
	if [ -n "$(PROJECTROOT)" -a ! -d $(PROJECTROOT)/DOSFOP ]; \
	then $(MKDIR) $(PROJECTROOT)/DOSFOP; fi; \
	$(GENMAKE) -OM -gen $(LOCALDEFS) -depfiles \
		-deps "$(OPALIMPORTS) < %s" \
		$(GENOPTIONS) $(VAR_GENOPTIONS) $(REL_GENOPTIONS) \
		  $(GENSUBSYS) -S $(NODENAME) $(NORMSTRUCTS) $(FOREIGNSTRUCTS)

OCS/%.deps: %
	@$(ECHO) "Checking dependencies of $?"; \
	$(RM) -f $@; $(OPALIMPORTS) < $? > $@


#%.extp: 
#	@if [ ! -f "$@" ]; \
#	then $(ECHO) "EXTERNAL PROPERTIES $* -- empty" > $@; fi

#%.intp: 
#	@if [ ! -f "$@" ]; \
#	then $(ECHO) "INTERNAL PROPERTIES $* -- empty" > $@; fi

.PRECIOUS: $(EXTPS) $(INTPS)

# The check action

_check: $(INTPINTERS) 




# The clean action 

_clean:
	@$(ECHO) "Cleaning up ..."; \
	if [ -h $(OCSDIR)/AtFS ] ; then \
	    $(ECHO) "You are using a shared cache,"; \
	    $(ECHO) "The cache will not be cleaned."; \
	    $(MV) $(OCSDIR)/AtFS AtFS$$$$; \
	    $(RM) -rf $(TOPCOM) $(OCSDIR)/* $(FOREIGNCTMPLS) $(FOREIGNHTMPLS); \
	    $(MV) AtFS$$$$ $(OCSDIR)/AtFS; \
        else \
	    $(RM) -rf $(TOPCOM) $(OCSDIR)/* $(FOREIGNCTMPLS) $(FOREIGNHTMPLS); \
	fi


# The cleanobj action 

_cleanobj:
	@$(ECHO) "Cleaning up machine-dependent files ..."; \
	if [ -h $(OCSDIR)/AtFS ] ; then \
	    $(ECHO) "You are using a shared cache,"; \
	    $(ECHO) "The cache will not be cleaned."; \
	    $(MV) $(OCSDIR)/AtFS AtFS$$$$; \
	    $(RM) -rf $(TOPCOM) $(OCSDIR)/*.o $(OCSDIR)/*.a; \
	    $(MV) AtFS$$$$ $(OCSDIR)/AtFS; \
        else \
	    $(RM) -rf $(TOPCOM) $(OCSDIR)/*.o $(OCSDIR)/*.a; \
	fi

# The install action 

# _install: _installlib _installmanuals 
_install: _installmanuals


_installlib: _all
	@if [ -z "$(INSTALLINTERFACEPATH)" ] || [ -z "$(INSTALLOBJECTPATH)" ] || [ -z "$(OBJECTNODEPATH)" ]; \
	then $(ECHO) "You must define the variables INSTALLINTERFACEPATH, INSTALLOBJECTPATH and OBJECTNODEPATH ."; \
	else\
	  $(ECHO) "Installing interfaces in $(INSTALLINTERFACEPATH)/$(INTERFACENODEPATH)"; \
	  $(OCSOM)/etc/xinstall $(INSTALLINTERFACEFLAGS) \
	    $(INTERFACES) $(INSTALLINTERFACEPATH)/$(INTERFACENODEPATH) || exit 1; \
	  _olib="lib$(ARCHIVE)-$(lib).a"; \
	  _opath="$(INSTALLOBJECTPATH)/$(OBJECTNODEPATH)-$(lib)"; \
	  $(ECHO) "Installing objects in $$_opath"; \
	  $(OCSOM)/etc/xinstall $(INSTALLOBJECTFLAGS) \
		$(INTERS) $(OBJECTS) $$_opath || exit 1; \
	  $(ECHO) "Updating object code in archive $$_opath/$$_olib"; \
	  $(CHMOD) ug+w $$_opath/$$_olib 2>/dev/null; \
	  $(AR) r $$_opath/$$_olib $(OS) || exit 1; \
	  $(RANLIB) $$_opath/$$_olib; \
	  $(CHMOD) ug-w $$_opath/$$_olib 2>/dev/null; \
	fi

# The action to derive the release objects

_releaseobjects: $(RELEASEOBJECTS)

# The action to derive the boot objects

_bootobjects: $(CS) 


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Include rules generic for all OCS systems

include $(OMLIBPATH)/GlobalRules









