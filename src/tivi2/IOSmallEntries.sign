SIGNATURE IOSmallEntries

IMPORT -- AEntry[part, parseP, printP] ONLY aEntry:SORT option[part]:SORT
       -- AEntry[origin, parseO, printO] ONLY aEntry:SORT option[origin]:SORT
       InterOpal ONLY part:SORT origin:SORT inst:SORT ident:SORT pos: SORT expr:SORT var:SORT eqn:SORT comp pattern:SORT fct:SORT pragmaItem:SORT pragma:SORT
name:SORT kind:SORT impl:SORT struct:SORT object:SORT property:SORT
variant:SORT formula:SORT guard:SORT
       Option[part] ONLY option
     Option[origin] ONLY option
    Option[inst] ONLY option
    Option[ident] ONLY option
    Option[pos] ONLY option
    Option[name] ONLY option
--       Com[aEntry[part, parseP, printP]] ONLY com
--       Com[aEntry[origin, parseO, printO]] ONLY com
       Seq[pos] ONLY seq
       Seq[ident] ONLY seq
       Option[seq[pos]] ONLY option
       Seq[name] ONLY seq
       Option[seq[ident]] ONLY option
       Seq[variant] ONLY seq[variant]
       Seq[var] ONLY seq
       Option[comp] ONLY option
       Option[pattern] ONLY option
       Option[denotation] ONLY option

-- %$Denotation$
/* %Denotations are not part of InterOpal, but we include specialized functions nevertheless here. These functions adopt the convention of putting denotations in double quotes. */

FUN preparseD: denotation -> option[denotation] ** denotation
FUN printD: denotation -> denotation
FUN dummyD: denotation

-- %$Part$

-- FUN partEntry: com[aEntry[part, parseP, printP]]

FUN parseP: denotation -> option[part]
FUN preparseP: denotation -> option[part] ** denotation
FUN printP : part -> denotation

-- %$Origin$

-- FUN originEntry: com[aEntry[origin, parseO, printO]]

FUN parseO: denotation -> option[origin]
FUN preparseO: denotation -> option[origin] ** denotation
FUN printO : origin -> denotation

-- %$Inst$

FUN parseI: denotation -> option[inst]
FUN printI: inst -> denotation

-- %$Ident$

FUN parseId: denotation -> option[ident]
FUN preparseId: denotation -> option[ident] ** denotation
FUN preparseSeqId: denotation -> option[seq[ident]] ** denotation
FUN printId: ident -> denotation
FUN printSeqId: seq[ident] -> denotation

-- %$Pos$

FUN parsePos: denotation -> option[pos]
FUN preparsePos: denotation -> option[pos] ** denotation
FUN preparseSeqPos: denotation -> option[seq[pos]] ** denotation
FUN printPos: pos -> denotation
FUN printSeqPos: seq[pos] -> denotation


-- %$Name: not supported by cvs2svn $

FUN parseN: denotation -> option[name]
FUN preparseN: denotation -> option[name] ** denotation
FUN printN: name -> denotation
FUN printSeqN: seq[name] -> denotation
FUN dummyN: name

-- %$Kind$

FUN printK: kind -> denotation
FUN shortK: kind -> denotation
FUN dummyK : kind

-- %$Impl$

FUN printIm: impl -> denotation
FUN shortIm:impl -> denotation 

-- %$Struct$

FUN shortStr: struct -> denotation

-- %$Object$

FUN shortObj: object -> denotation

-- %$Property$

FUN shortProp: property -> denotation

-- %$Variant$

FUN printVar shortVar: variant -> denotation
FUN printSeqVar: seq[variant] -> denotation


-- %$Formula$

FUN printForm: formula -> denotation
FUN dummyForm: formula

-- %$Expr$

FUN printExpr: expr -> denotation
FUN dummyExpr: expr

-- %$Var$

FUN printV: var -> denotation
FUN printSeqV: seq[var] -> denotation

-- FUN preparseV: denotation -> option[var] -> denotation
FUN dummyV: var

-- %$Eqn$

FUN shortEqn: eqn -> denotation

-- %$Comp$

FUN preparseComp: denotation -> option[comp] ** denotation
FUN printComp: comp -> denotation

-- %$Pattern$

FUN printPat: pattern -> denotation
-- FUN preparsePat: denotation -> option[pattern] ** denotation
FUN dummyPat: pattern

-- %$Fct$

FUN printFct: fct -> denotation

FUN dummyFct: fct

-- %$Guard$

FUN printG: guard -> denotation

-- %$Pragmas$

FUN printPragma: pragma -> denotation
FUN printPragmaItem: pragmaItem -> denotation