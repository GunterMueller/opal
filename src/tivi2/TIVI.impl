IMPLEMENTATION TIVI

IMPORT T2AEntry COMPLETELY
       Com ONLY com exit break succeed EXEC okay? ans
       ComAgent ONLY agent
       ComCheckWin ONLY check notify
       ComCompose ONLY & ;
       Env ONLY arg argCount
       Identity ONLY id
       InterOpalEntry COMPLETELY
       InterOpalIO ONLY readInterOpal
       Nat ONLY nat 0 100 20 - 1 > pred 64 128 2
       OWmisc ONLY label 
       Option COMPLETELY
       ProcessCtrl ONLY getCWD
       Void COMPLETELY
       WinButton COMPLETELY
       WinConfig COMPLETELY
       WinEmitter COMPLETELY
       WinEvent COMPLETELY
       WinRegulator COMPLETELY
       WinView COMPLETELY
       WinWindow COMPLETELY
       Denotation ONLY ++ empty empty? slice #
       MONITOR ONLY genMonitor
       WinImage ONLY image photo file iconfig
       Seq ONLY .. seq
       SeqFold ONLY /
       ComTimeout ONLY timeout
       ComAction ONLY done
       FileName ONLY dirName
       FileSystem ONLY stat filestat
       ABORT ONLY ABORT
       ComCheck ONLY check

DEF tivi2 ==
check'ComCheck(\\x.x, 
    genMonitor(false) & (\\ _ .
    aEntryLong[denotation, mypreparse, myprint](64) & (\\fname.
    emitter[void] & (\\quit.
    emitter[void] & (\\trg.
    arg(0) & (\\prgname.
    baseDir(prgname) & (\\bD. 
    photo(file(bD ++ "tivi.gif")) & (\\ p.
    regulator(fname) set bind(key("Return"), \\ _ . trg emit nil) ++ 
                         bind(key("KP_Enter"), \\ _ . trg emit nil) & (\\ _ .
    argCount & (\\ ac.
    (
    IF ac > 1 THEN 
        (& / (1 .. pred(ac))(\\ i. arg(i) & (\\fn. showIO(fn))))
        & (arg(1) & (\\fn. agent(fname set fn) & succeed(state(iconic))))
    ELSE
      agent(getCWD & (\\ cwd. fname set cwd)) & succeed(state(normal))
    FI) & ( \\ initState .
    LET title == "TIVI -- The InterOpal Viewer and Editor (InterOpal2)"
        v == (label with text(title)) ^-^
             (label with image(p))
        load == button("Load and View", trg emit nil)
        quitb == button("Quit", quit emit nil)
    IN
    agent(ctrl(trg, fname)) & (\\ _ .
    window(initState ++ 
           titleName(title) ++ 
           iconName("TIVI/E") ++ 
           icon(file(bD ++ "tivi.xbm")), 
           v ^-^ label("Filename:", view(fname)) ^-^ bild(bD) ^-^ 
        (  load <|< quitb)) & (\\w.
    focus(w) & (\\ _ .
    await(quit) & (\\ _ .
    delete(w) & (\\ _ .
    exit(0)
    )))))
    ))))))))
    ))
)

FUN 80:nat
DEF 80 == 100 - 20

FUN ctrl: emitter[void] ** aEntry[denotation, mypreparse, myprint] -> com[void]
DEF ctrl(trg, fname) ==
    await(trg) & (\\ _ .
    agent(ctrl(trg, fname)) & (\\ _ .
    get(fname) & (\\fn.
    showIO(fn)
    )))

FUN showIO: denotation -> com[void]
DEF showIO(fn) ==
    notify(
    readInterOpal(false, fn) & (\\inop.
    (IF inop nil? THEN break("Could not read InterOpal file")
     ELSE interOpalWindow(fn, cont(inop))
     FI
    )))
    

FUN mypreparse: denotation -> option[denotation] ** denotation
DEF mypreparse(d) == (avail(d), empty)

FUN myprint: denotation -> denotation
DEF myprint == id

FUN bild: denotation -> view
DEF bild(bD) == EXEC(
                     photo(file(bD ++ "tivi.gif")) & (\\ p.
                     succeed(frame with image(p)))
                    )

-- % return directory, where @file{tivi.gif} can be found.
FUN baseDir: denotation -> com[denotation]
DEF baseDir(prgname) ==
  LET n1 == dirName(prgname)
      n2 == dirName(front(dirName(prgname))) ++ "lib/images/"
      n3 == "./"
  IN
  stat(n1 ++ "tivi.gif"); (\\ a1.
  IF a1 okay? THEN succeed(n1)
  ELSE stat(n2 ++ "tivi.gif"); (\\ a2.
    IF a2 okay? THEN succeed(n2)
    ELSE stat(n3 ++ "tivi.gif"); (\\ a3.
      IF a3 okay? THEN succeed(n3)
      ELSE break("tivi2-ERROR: tivi.gif and tivi.xbm not found in " ++
                 n1 ++", " ++ n2 ++ ", " ++ n3)
      FI)
    FI)
  FI)
  

FUN front: denotation -> denotation
DEF front(d) == 
  IF empty?(d) THEN ABORT("front'TIVI: empty denotation")
  IF empty?(tl(d)) THEN ""
  ELSE slice(d, 0, #(d) - 2)
  FI