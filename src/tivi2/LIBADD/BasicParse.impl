IMPLEMENTATION BasicParse

IMPORT StringScan COMPLETELY
       String ONLY string !
       StringConv ONLY `
       Option ONLY option avail
       AnonPair ONLY 1st
       Denotation ONLY empty

-- $Preparsers for Basic Types$
DEF preparse(d) == LET (res:option[bool], rest) == scan(d!) IN (res, rest`)
DEF preparse(d) == LET (res:option[nat], rest) == scan(d!) IN (res, rest`)
DEF preparse(d) == LET (res:option[int], rest) == scan(d!) IN (res, rest`)
DEF preparse(d) == LET (res:option[char], rest) == scan(d!) IN (res, rest`)
DEF preparse(d) == LET (res:option[real], rest) == scan(d!) IN (res, rest`)
DEF preparse(d) == (avail(d), empty)
DEF preparse(d) == (avail(d!), empty)

-- $Parsers for Basic Types$
DEF parse: denotation -> option[bool](d) == 1st(scan(d!))
DEF parse: denotation -> option[nat](d) == 1st(scan(d!))
DEF parse: denotation -> option[int](d) == 1st(scan(d!))
DEF parse: denotation -> option[char](d) == 1st(scan(d!))
DEF parse: denotation -> option[real](d) == 1st(scan(d!))
DEF parse: denotation -> option[denotation](d) == avail(d)
DEF parse: denotation -> option[string](d) == avail(d!)
