/* %Provides a function to define a binding for a mapEntry. 
@table @b
@item master
The sort of which the map is a part.
@item dom, <, codom
The parameters of the map.
@item printDom, printCodom
Additional parameters for the mapEntry.
@item codomEntry
The entry to display the @code{codom} data.
@end table
*/
SIGNATURE BindSeq[master, slave, printSlave, slaveEntry]

SORT master slave slaveEntry
FUN printSlave: slave -> denotation

IMPORT ControlAOW[master] ONLY ctrl:SORT
       SeqEntryNE[slave, printSlave] ONLY seqEntry:SORT
       WinEvent ONLY eventInfo
       Com[void] ONLY void
       Void ONLY void
       Com[slave] ONLY com
       Com[slaveEntry] ONLY com
       ControlAOW[slave] ONLY ctrl:SORT
       Com[void] ONLY com
       Seq[slave] ONLY seq

/* %@code{bindSeq(mC)(seqEntry, getSE, seqWindow)(getSeq, setSeq, defdSeq?)} @*
@table @b
@item mC
Controller for @code{master} data.
@item seqEntry
Entry to display seq @code{slave} data.
@item getSE
Command to get current seq q@code{slave} data from @code{seqEntry}
@item seqWindow
Command to build window to display selected seq @code{slave} data.
@item getSeq
Function to extract sequence data from master.
@item mergeSlave
Function to merge sequence data into master.
@item defdSlave?
Test whether sequence can be extracted from master.
@end table

This function should be used in bindings to a seqEntry. It will react to a
click in this seqEntry (button1) and use the functions @code{seqEntry} and
@code{seqWindow} to create a window displaying the selected codomain.
*/
FUN bindSeq: ctrl[master] ->
             (slave -> com[slaveEntry]) ** 
             (slaveEntry -> com[slave]) **
             (ctrl[slave] ** slaveEntry -> denotation ** slave -> com[void]) ->
             (master -> seq[slave]) **
             (master ** seq[slave] -> master) **
             (master -> bool)
             ->
             seqEntry[slave, printSlave] **
             eventInfo -> com[void]


