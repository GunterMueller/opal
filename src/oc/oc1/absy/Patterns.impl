-- %- LAST EDIT: Tue Aug  3 22:16:29 1993 by Andreas Fett (paris!fetti) 

IMPLEMENTATION Patterns[obj]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

-- %- Autor:       af
-- %- Projekt:     OPAL1-Compiler (Frontend) + property language

SORT obj

IMPORT  Denotation   COMPLETELY
        Seq          COMPLETELY
        SeqReduce    COMPLETELY
        SeqMap       COMPLETELY

DATA pattDescr == target(fun:obj, args:seq[seq[pattDescr]])
                  patt(constr:obj, subPatts:seq[pattDescr])
                  irrel

-- %- ------------------------------------------------------------------------
-- %$Textkonversionen$

FUN ` : (obj -> denotation) -> pattDescr -> denotation

DEF `(``)(target(fun,args)) == 
  ``(fun) ++ `(``)(args) 

DEF `(``)(patt(constr,subPatts)) ==
  ``(constr) ++ `(``)(subPatts) 

DEF `(_)(_ : pattDescr) == "_"

-- %- ........................................................................

FUN ` : (obj -> denotation) -> seq[pattDescr] -> denotation

DEF `(_)(<>[pattDescr]) == empty

DEF `(``)(pDs AS _ ::[pattDescr] _) ==
  "(" ++ ((+/+(","), empty) / `(``) * pDs) ++ ")"

-- %- ........................................................................

FUN ` : (obj -> denotation) -> seq[seq[pattDescr]] -> denotation

DEF `(_)(<>[seq[pattDescr]]) == empty

DEF `(``)(<> ::[seq[pattDescr]] rt) == "()" ++ `(``)(rt)

DEF `(``)(ft ::[seq[pattDescr]] rt) == `(``)(ft) ++ `(``)(rt)
