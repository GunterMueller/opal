SIGNATURE InterOpalModifier
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 2000-04-14 21:20:57 $ ($Revision: 1.3 $)

IMPORT  Fct[name'Name]  ONLY fct:SORT
        Impl[name'Name] ONLY sortImpl:SORT
        InterOpal       ONLY interOpal:SORT object:SORT origin:SORT pos:SORT
                                struct:SORT name:SORT fct:SORT kind:SORT
                                inst:SORT variant:SORT property:SORT
        Name            ONLY name:SORT
        Nat             ONLY nat
        NatMap[seq[inst'InterOpal]] ONLY natMap
        Objects         ONLY inst:SORT
        Option[fct'Fct] ONLY option
        Pair[inst'InterOpal,seq[name'InterOpal]]        ONLY pair

        Rep             ONLY repTab
        Seq[denotation] ONLY seq
        Seq[inst'InterOpal]     ONLY seq
        Seq[name'InterOpal]     ONLY seq
        Seq[object]     ONLY seq
        Seq[pair[inst'InterOpal,seq[name'InterOpal]]]   ONLY seq
        Seq[struct]     ONLY seq
    Seq[property] ONLY seq
       OcPos ONLY pos

FUN params : struct'InterOpal -> seq[object]
FUN params : interOpal -> seq[object]   -- main

FUN insts : struct'InterOpal -> seq[pair[inst'InterOpal,seq[name'InterOpal]]]
FUN reverseOnlys : struct'InterOpal -> natMap[seq[inst'InterOpal]]

FUN symbols : interOpal -> seq[denotation]
FUN symbols : struct'InterOpal -> seq[denotation]

-- Conversions

FUN asFct : (name'InterOpal -> name'Name) ** fct'InterOpal -> fct'Fct
FUN asKind : (name'InterOpal -> name'Name) ** kind'InterOpal -> option[fct'Fct]

FUN asInst : inst'InterOpal -> inst'Objects
                        -- maps main-Names to intNames
                        -- formal and none are mapped to 0 instances
                        -- make sure other inst-numbers are > 0

FUN asImpl : interOpal ** (name'InterOpal -> name'Name) ** property -> 
        sortImpl[name'Name]

FUN asPos : pos'InterOpal -> pos'OcPos
