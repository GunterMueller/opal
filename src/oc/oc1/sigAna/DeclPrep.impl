/* %-
-- ============================================================================
-- Author:      mija
-- Project:     OPAL1-Compiler (signature analysis)
-- Purpose:     pre-insert declarations into global signature
-- ============================================================================
-- ============================================================================
*/
IMPLEMENTATION DeclPrep
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT  Objects         ONLY sortPN:SORT noSortPN
        Decl4SigAna     COMPLETELY
        PartName        COMPLETELY
        Name            ONLY name sortPartName
        -- token
        Rep             ONLY rep
        Fct             ONLY fct
        OcPos             ONLY pos
        -- lib
        AbsyFun2        COMPLETELY
        Pair            ONLY pair &
        Option          ONLY option nil cont avail? nil?

-- %- ------------------------------------------------------------------------

-- FUN prepStaticDeclInfo : globSig ** pair[partName, option[rep]] ->
--                           globSig ** pair[partName,decl]

DEF prepStaticDeclInfo(gS, pN & r) ==
        LET (finGS, decl) ==
                IF kind(pN) sort? THEN addDecl(gS, ide(pN), pos(pN))
                ELSE addDecl(gS, ide(pN), pos(pN), *(h1)(fct(kind(pN))),r) FI
        IN (finGS, &(pN, decl))

        FUN h1 : partName -> name
        DEF h1(pN) == sortPartName(noSortPN)

