-- LAST EDIT: Wed Sep 13 14:03:26 1995 by Christian Maeder (troilos!maeder) 
-- ============================================================================
-- Author:      mija
-- Project:     OPAL1-Compiler (signature analysis)
-- Purpose:     evaluation of instances
-- ============================================================================
/*
*/
-- ============================================================================

SIGNATURE GlobSigEvalInst
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

IMPORT  Objects         ONLY inst:SORT struct:SORT instPN:SORT
        ImpExpEntry     ONLY instE:SORT instAppl:SORT
        PartNameEntry   ONLY flatPnEle:SORT
        GlobSig         ONLY globSig
        Name            ONLY name
        Table[instE]    ONLY table
        Com[pair[globSig,bool]]                 ONLY com
        Com[pair[pair[globSig,bool],seq[name]]] ONLY com
        -- lib
        Seq[instAppl]   ONLY seq
        Seq[name]       ONLY seq
        OcOptions         ONLY options
        Pair[globSig,bool]      ONLY pair
        Pair[pair[globSig,bool],seq[name]]      ONLY pair
        Nat             ONLY nat

-- ---------------------------------------------------------------------------

FUN checkDoubleInst : struct'Objects ** inst -> inst ** globSig -> globSig
  -- Finden von doppelten Instanzen

-- ---------------------------------------------------------------------------

FUN checkInstAppls : table[instE] ** seq[instAppl] 
                        -> table[instE] ** seq[instAppl]

-- ---------------------------------------------------------------------------

FUN evalInstFin : options -> globSig ** struct'Objects ** inst -> com[pair[globSig,bool]]

FUN evalInst : options -> globSig ** struct'Objects ** inst -> com[pair[globSig,bool]]
  -- Auswerten der Nudelergebnisse fuer explizite Instanzen (Importe)
  -- Es koennen zusaetlich neue Instanzen erzeugt werden.
  -- Es werden keine Doppeldeklarationen eleminiert (nur erkannt).
  -- Es werden keine Doppelinstanzen eleminiert (nur erkannt).

FUN evalInstPN : options ** globSig **  instPN
                 -> com[pair[pair[globSig,bool],seq[name]]]

FUN eqFlatPN : globSig -> flatPnEle ** flatPnEle -> bool
  -- Test, ob zwei partielle Applikationen identisch sind.
  -- PRE: die Sorten sind alle echt unterschiedlich
  --      die pN sind flach.

-- ---------------------------------------------------------------------------

FUN eqRealName : globSig -> name ** name -> bool
  -- PRE: beide Namen sind entweder sortPartName oder interne/externe
  -- Es wird auf Doppeldeklarationen Ruecksicht genommen.
