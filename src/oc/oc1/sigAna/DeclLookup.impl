-- ============================================================================
-- Author:      mija
-- Project:     OPAL1-Compiler (signature analysis)
-- Purpose:     look up for candidates on static tables
-- ============================================================================
-- ============================================================================

IMPLEMENTATION DeclLookup
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT  Objects         ONLY sortPN:SORT
        Decl4SigAna     COMPLETELY
        PartName        COMPLETELY
        Name            ONLY name sortPartName
        PartNamePrep    ONLY convMatchSortPartName
        -- token
        Rep             ONLY rep
        Fct             ONLY fct
        OcPos           ONLY pos
        -- lib
        AbsyFun3        COMPLETELY
        AbsyFun2        COMPLETELY
        Pair            ONLY pair 1st 2nd

-- ---------------------------------------------------------------------------

--FUN declsStaticLookup : pair[partName,decl] ** globSig -> globSig
        -- Berechnen der initialen Kanditatenmengen anhand der statischen Info

DEF declsStaticLookup(pNdeclP, gS) ==
        LET Kind == kind(1st(pNdeclP)) IN
        IF Kind sort? THEN gS
        ELSE    -- Operation, die fct muss eingetragen werden.
          updDecl(gS1, 2nd(pNdeclP), *(sortPartName)(finFct))
          WHERE (gS1, finFct) == (convMatchSortPartName \* gS)(fct(Kind))
        FI

