/* % Zweck:     Untertabellen der globalen Signatur und Umcodiertabellen
                zu Aufbauzwecken
*/
/* %-
-- LAST EDIT: Tue Aug 29 21:12:33 1995 by Christian Maeder (troilos!maeder) 
-- ============================================================================
-- Author:      mija
-- Project:     OPAL1-Compiler (context analysis)
-- Purpose:     tables to be used in globale signature
-- ============================================================================
/*
*/
-- ============================================================================
*/
SIGNATURE Maps4SigAna
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

IMPORT  Objects                 ONLY impDecl:SORT inst:SORT struct:SORT
        GlobSig                 ONLY globSig
        GlobSigImpl             ONLY impl:SORT
        ImpExpEntry             ONLY instAppl:SORT impDeclE:SORT instE:SORT
        PartNameEntry           ONLY pN:SORT onlyPNE:SORT 
        Name                    ONLY name
        -- absy/token
        Fct[name]               ONLY fct
        Impl[name]              ONLY sortImpl:SORT
        Rep                     ONLY rep
        OcPos                     ONLY pos
        -- lib
        Nat                             ONLY nat
        Seq[instAppl]                   ONLY seq
        Seq[impDecl]                    ONLY seq
        Seq[inst]                       ONLY seq
        Seq[name]                       ONLY seq
        Seq[pair[inst,seq[instAppl]]]   ONLY seq
        Pair[inst,seq[instAppl]]        ONLY pair
        Pair[inst,seq[name]]            ONLY pair
        Pair[inst,seq[inst]]            ONLY pair
        Pair[struct,instDecTab]         ONLY pair
        Option[sortImpl]                ONLY option
        Table[impDeclE]                 ONLY table
        Table[instE]                    ONLY table
        Table[onlyPNE]                  ONLY table
        Table[inst]                     ONLY table
        Table[instE]                    ONLY table
        Table[pair[struct,instDecTab]]  ONLY table
    Option[rep] ONLY option


-- ---------------------------------------------------------------------------
-- Untertabelle (importierte Namen eines Imports)

SORT impDeclMap 
FUN mtImpDeclMap : nat -> impDeclMap    
  -- leere impDeclMap (mit Endgroesse)
FUN defImpDeclSort : globSig ** struct ** impDeclMap ** impDecl ** rep ** 
                     seq[instAppl] ** impl -> globSig ** impDeclMap
FUN defImpDeclOp : globSig ** struct ** impDeclMap ** impDecl ** rep ** 
                   seq[instAppl] ** fct[name] ** option[rep]
                -> globSig ** impDeclMap
FUN defImpDeclOpCons : globSig ** struct ** impDeclMap ** impDecl ** rep ** 
                        seq[instAppl] ** fct[name] ** impDecl ** 
                        seq[impDecl] -> globSig ** impDeclMap
  -- importierte Sorte, Operation, Konstruktoroperation
  -- die globSig wird zum Aufbau der Verwaltungsinfo benoetigt.

FUN mergeImpDecls:impDeclE ** impDeclE-> impDeclE

FUN defSignImpSort : globSig   ** struct ** impDeclMap ** impDecl ** rep **
                     option[sortImpl] ** seq[inst] 
                        -> globSig ** impDeclMap
FUN defSignImpOp : globSig   ** struct ** impDeclMap ** impDecl ** rep ** 
                        fct[name] ** seq[inst] ** option[rep]
                   -> globSig ** impDeclMap
FUN defSignImpOpCons : globSig  ** struct  ** impDeclMap ** impDecl ** rep ** 
                        fct[name] ** seq[inst] ** impDecl ** 
                        seq[impDecl] 
                        -> globSig ** impDeclMap
  -- importierte Sorte, Operation, Konstruktor aus dem eigenen Signaturteil

FUN addTransInstS : impDeclMap ** struct ** seq[instAppl]
                ** seq[pair[inst,seq[instAppl]]] ** seq[impDecl]
                -> impDeclMap
  -- Hinzufuegen zusaetlicher Instanzen eines transitiven Imports bei allen
  -- importierten Objekten

-- ---------------------------------------------------------------------------
-- Untertabelle (Instanzen)

SORT instMap
FUN mtInstMap : instMap
FUN addPreInst : instMap -> instMap ** instAppl
  -- Voreintrag einer Instanz (Platz schaffen mit onlyC=0)
FUN defGenTransInst : instMap ** inst ** struct ** inst ** seq[name] 
        -> instMap
FUN defGenericTransitives : instMap ** inst ** seq[inst] 
                ** seq[name] -> instMap
FUN defTransInst : instMap ** inst ** seq[name] -> instMap
  -- definieren eines transitiven Imports (mit moeglicher Indirektion)
FUN defSignIdentInst : pair[inst,seq[name]] ** instMap -> instMap
FUN defSignGenTransInst : pair[inst,seq[inst]] ** seq[name] **
                instMap -> instMap
  -- definieren einer Instanz aus dem eigenen Signaturteil
FUN isGenTransInsts : instMap ** inst -> bool

-- ---------------------------------------------------------------------------
-- Untertabelle (Only-Applikationen)

SORT onlyMap
FUN mtOnlyMap : onlyMap
FUN addOnly : onlyMap ** rep ** pos ** pN -> onlyMap

-- ---------------------------------------------------------------------------
-- ---------------------------------------------------------------------------
-- Umcodiertabellen fuer das Eintragen der Importe

SORT strDecTab                  -- Strukturumcodierungstabelle
FUN mtStrDecTab : strDecTab
FUN def : strDecTab ** struct ** struct ** instDecTab -> strDecTab
FUN ! : strDecTab ** struct -> struct ** instDecTab
FUN turbo : strDecTab -> strDecTab
FUN ` : strDecTab -> denotation



SORT instDecTab                 -- Instanzumcodierungstabelle
FUN mtInstDecTab : instDecTab
FUN def: instDecTab ** inst ** inst -> instDecTab
FUN ! : instDecTab ** inst -> inst


-- ---------------------------------------------------------------------------
-- Hidden

FUN tabOf : impDeclMap -> table[impDeclE]
FUN tabOf : instMap -> table[instE]
FUN tabOf : onlyMap -> table[onlyPNE]
FUN tabOf : instDecTab -> table[inst]
FUN tabOf : strDecTab -> table[pair[struct,instDecTab]]
FUN instMap : table[instE] -> instMap
FUN impDeclMap : table[impDeclE] -> impDeclMap

