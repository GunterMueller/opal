/* % Einträge für interne und importierte Deklarationen. Alle 
              Objekte aus parametrisierten Strukturen werden nur einmal
              aufgeführt, erhalten aber in der Liste der Instanzen einen
              Eintrag pro unterschiedlicher Instantiierung.
*/
/* %-
-- LAST EDIT: Wed Sep  9 17:11:30 1992 by Michael Jatzeck (trabi!michel) 
-- ============================================================================
-- Autor:       mija
-- Projekt:     OPAL1-Compiler (Kontextanalyse)
-- ============================================================================
*/
SIGNATURE DeclEntry
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:42 $ ($Revision: 1.1.1.1 $)

IMPORT  Name            ONLY name
        Objects         ONLY decl:SORT
        Attributes      ONLY attr:SORT
        GlobSigImpl     ONLY impl:SORT
        -- absy
        Fct[name]       ONLY fct        -- Varianten (2,3,4)->(1,2,3) von name
        -- token
        Rep             ONLY rep
        -- err
        Pos             ONLY pos
        -- lib
        Nat             ONLY nat
        Seq[decl]       ONLY seq
        Option[rep]     ONLY option


TYPE declE ==                   -- deklarierte Namen des Programms
        sort(                   -- Sorten
                ide : rep,              -- Bezeichner
                pos : pos,              -- Position der Deklaration
                attr : attr,            -- binaere Attribute
                impl : impl,            -- Implementierung
                type : impl)            -- Free Type
        op(                     -- Operationen
                ide : rep,              -- Bezeichner
                pos : pos,              -- Position der Deklaration
                attr : attr,            -- binaere Attribute
                impl : impl,            -- Implementierung
                fct : fct,              -- Typ des dekl. Namens
                spc : option[rep])      -- optional assoziertes Spez.-Law
        opCons(                 -- freie Konstruktoren
                ide : rep,              -- Bezeichner
                pos : pos,              -- Position der Deklaration
                attr : attr,            -- binaere Attribute
                impl : impl,            -- Implementierung
                fct : fct,              -- Typ des dekl. Namens
                test : decl,            -- Testoperation
                selS : seq[decl])       -- Selektoren
        double(                 -- (ehemalige) Doppeldeklaration
                no : nat,               -- Zeiger auf identischen declEntry
                same : declE )          -- identischer declEntry

FUN updFct : declE ** fct -> declE
FUN updFct : fct -> declE -> declE
FUN updCons : declE ** decl ** seq[decl] -> declE
FUN updAttr : declE ** attr -> declE
FUN ` : declE -> denotation
