/* %Zugriffsfunktionen fuer die globale Signatur, die von den 
              Massnahmen zur Effizienzsteigerung abstrahieren.
*/
/* %- 
-- ============================================================================
-- Author:      mija
-- Project:     OPAL1-Compiler (context analysis)
-- Purpose:     
-- Zweck:       Zugriffsfunktionen fuer die globale Signatur, die von den 
--              Massnahmen zur Effizienzsteigerung abstrahieren.
-- ============================================================================
-- ============================================================================
*/

SIGNATURE Decl4SigAna
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:42 $ ($Revision: 1.1.1.1 $)

IMPORT  Objects         ONLY decl:SORT  impDecl:SORT
        GlobSig         ONLY globSig
        Name            ONLY name
        Attributes      ONLY attr
        -- token/absy
        Rep             ONLY rep
        Pos             ONLY pos
        Fct[name]       ONLY fct
        Impl[name]      ONLY sortImpl:SORT
        -- lib
        Seq[impDecl]    ONLY seq
        Option[sortImpl]        ONLY option
        GlobSigImpl     ONLY impl:SORT
       Option[rep] ONLY option

-- %- ------------------------------------------------------------------------
-- %$Deklarationen$

FUN addDecl : globSig ** rep ** pos -> globSig ** decl
FUN addDecl : globSig ** rep ** pos ** fct[name] -> globSig ** decl
FUN addDecl : globSig ** rep ** pos ** fct[name] ** option[rep] ->
               globSig ** decl
  /* % Eintragen einer Deklaration: Sorten gleichen Namens werden direkt zu
       Doppeldeklarationen gemacht und beim Suchen (match...) nicht gefunden. 
       */

FUN addSignSort : globSig ** impDecl ** rep ** attr ** option[sortImpl] 
                  -> globSig
FUN addSignOper : globSig ** impDecl ** rep ** attr ** fct[name] -> globSig
FUN addSignOper : globSig ** impDecl ** rep ** attr **
                   fct[name] ** option[rep]-> globSig
FUN addSignOperCons : globSig ** impDecl ** rep ** attr ** fct[name]
                      ** impDecl ** seq[impDecl] -> globSig
  -- % Eintragen von Deklarationen aus dem SIGNATURE-Part

FUN setFormParam : decl ** globSig -> globSig
FUN formParam? : globSig ** decl -> bool
  -- % Festlegung einer Deklaration als Parameter

FUN updDecl : globSig ** decl ** fct[name] -> globSig
FUN fct : globSig ** decl -> fct[name]
  -- % Bearbeiten der Funktionalitaet einer Operation

FUN setDoubleDecl : decl -> decl ** globSig -> globSig
  -- % Umwandeln einer Deklaration zur Doppeldeklaration

FUN updAttr : globSig ** name ** (attr -> attr) -> globSig
