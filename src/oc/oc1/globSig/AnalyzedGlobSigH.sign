SIGNATURE AnalyzedGlobSigH
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 2000-04-14 21:20:55 $ ($Revision: 1.3 $)

IMPORT  GlobSig         ONLY globSig
        Name            ONLY name
        Objects         ONLY decl inst struct sortPN:SORT instPN:SORT impDecl
        ImpExpEntry     ONLY instE:SORT impDeclE:SORT structE:SORT
        DeclEntry       ONLY declE:SORT
        Attributes      ONLY attr
        -- lib
        Nat             ONLY nat
        OcError         ONLY err:SORT
        Rep             ONLY rep
        Fct[name]       ONLY fct
        Option[fct]     ONLY option
        Option[rep]     ONLY option
        Seq[name]       ONLY seq
        Seq[seq[name]]  ONLY seq

-- ----------------------------------------------------------------------------


FUN        fct:       globSig**name -> fct[name]
FUN     origInstH : globSig ** name -> seq[name]
FUN actStructParamsH: globSig -> seq[name]

FUN instance : globSig ** name ** seq[name] -> name -> name

FUN eqInstName : globSig -> name ** name -> bool

FUN checkNameSet : globSig -> nat ** name -> nat ** name
  -- Umwandeln von Namen mit generischen Instanzen
        
FUN checkInst : globSig ** seq[name] 
                -> seq[name] ** seq[seq[name]] -> seq[seq[name]]

FUN = : globSig -> name ** name -> bool

FUN ` : globSig ** nat -> name -> denotation

FUN `` : globSig ** seq[name] -> () -> denotation

FUN ``` : denotation ** rep ** option[rep] ** seq[name] ** option[fct[name]] 
        -> () ->denotation


        FUN EN : struct ** inst -> impDecl -> name
        FUN NS : struct ** seq[name] -> impDecl -> name


FUN setAttr : (attr -> attr) ** (attr->bool) -> name ** globSig -> globSig

