-- ============================================================================
-- Author:      af
-- Project:     OPAL1-Compiler (context analysis)
-- Purpose:     matching partial names and functionalities
-- Changes:     af, May 14 1993 matchingInternalOp does not yield parameters 
--                              any more (fixes bug oc1.12)
--                              nothing has to be done for sorts and canonical
--                              operations, because their identification is
--                              unique, so that a post-check for parameter
--                              implementation is sufficient.
--              af, Jun 15 1993 knowledge about type of locals is used
--              af, Jun 18 1993: added typing for avoiding bug oc1.34
--              af, Jun 21 1993: removed unnecessary typing
--              af, Jun 24 1993: no hints for unused generated identifiers
-- ============================================================================
-- ============================================================================

SIGNATURE NameAnalysis
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT  Nat             ONLY nat
        Seq[idName]     ONLY seq
        Seq[idFct]      ONLY seq
        Seq[fct[name]]  ONLY seq
        Seq[name]       ONLY seq

        OcError           ONLY err:SORT
        OcPos             ONLY pos

        PartName        ONLY partName:SORT
        Fct[partName]   ONLY fct
        Fct[name]       ONLY fct

        AnalyzedGlobSig ONLY globSig locSig name

        RepSet          ONLY repSet
        Knowledge       ONLY knowl
        Candidates      ONLY idName:SORT idFct:SORT


FUN parameter: partName**globSig**nat -> seq[name]**err**nat
-- yields all possible global names for partName

FUN matchingOp: partName**globSig**knowl**nat -> seq[idName]**err**nat
-- liefert alle passenden lokalen und globalen Namen (je nach knowl)
--  oder aufgetretene Fehler

FUN matchingInternalOp: partName**globSig**nat -> seq[idName]**err**nat
-- liefert alle passenden internen Namen (nicht Parameter)
--  oder aufgetretene Fehler

FUN matchingPatternOp: partName**globSig**knowl**nat**bool ->
                                                        seq[idName]**err**nat
-- liefert alle passenden lokalen und Konstruktor Namen (je nach knowl)
--  oder aufgetretene Fehler
-- das boolsche Argument gibt an, ob die Konstruktorfunktionalitaet eine
--  Sorte sein muss

FUN matchingFcts: fct[partName]**globSig**nat -> seq[idFct]**err**nat
-- liefert moegliche Funktionalitaeten
--  oder aufgetretene Fehler

FUN localNameDef: partName**globSig**knowl**nat**nat ->
                                        seq[idName]**knowl**err**nat**nat
-- liefert einen neuen lokalen Namen und erweitertes "Wissen"
--   oder aufgetretene Fehler

FUN selectName: seq[idName]**globSig**nat**pos -> name**globSig**err
-- liefert aus einer Menge von idNames einen Namen und
--   vermerkt ihn in der Signatur als benutzt
--   liefert Fehler, falls mehr als ein Name bezeichnet wird.

FUN selectDeclaredName: seq[idName]**globSig**nat**pos ->
                                                name**globSig**locSig**err
-- liefert aus einer Menge von idNames einen Namen und
--   traegt ihn in die lokale Signatur ein
--   liefert Fehler, falls mehr als ein Name bezeichnet wird.

FUN selectDefinitionTarget: seq[idName]**globSig**pos -> name**err
-- liefert aus einer Menge von idNames einen Namen,
-- liefert Fehler, falls mehr als ein Name bezeichnet wird.

FUN selectPatternOp: seq[idName]**globSig**nat**repSet**pos ->
                                                name**globSig**locSig**err
-- liefert aus einer Menge von idNames einen Namen,
--   vermerkt ihn in der Signatur als benutzt in Pattern
--     bzw. traegt ihn in die lokale Signatur ein
--   liefert Fehler, falls mehr als ein Name bezeichnet wird sowie
--     Hinweis auf unbenutzte Pattern-Variable

FUN inducedSort: partName**globSig -> name**err

FUN inducedSelector: partName**name**fct[name]**globSig -> name**err

FUN inducedConstr: partName**name**seq[fct[name]]**globSig -> name**err

FUN inducedDiscr: partName**name**globSig -> name

-- liefert den (induzierten) deklarierten Namen sowie
--   einen Fehler, falls der partielle Name diesem nicht entspricht

FUN matchingFct: fct[partName]**globSig -> fct[name]**globSig
-- liefert die (eindeutig vorhandene) Funktionalitaet
--   vermerkt in der Signatur die enthaltenen Sorten als benutzt
