-- ============================================================================
-- Author:      mija
-- Project:     OPAL1-Compiler (context analysis)
-- Purpose:     higher order functions for Fct and Impl
-- ============================================================================
-- ============================================================================

SIGNATURE AbsyFun2[from,to]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:41 $ ($Revision: 1.1.1.1 $)
-- should be splitted into structures FctMap, FctReduce, FctCompare, ImplMap
-- remains a structure for combine?
-- there is no need for com here (convert a denotation to com later on)

SORT from to

IMPORT	Fct[from]	ONLY fct
	Fct[to]		ONLY fct
	Fct[seq[from]]	ONLY fct
	Impl[from]	ONLY sortImpl:SORT
	Impl[to]	ONLY sortImpl:SORT
	-- lib
	Com[to]		ONLY com
	Seq[from]	ONLY seq
	Seq[fct[to]]	ONLY seq

-- ---------------------------------------------------------------------------
-- Fct

FUN * : (from -> to) -> fct[from] -> fct[to]
	-- Mapping der Fct

FUN / : (from ** to -> to) ** to -> fct[from] -> to
    / : (to ** from -> com[to]) ** to -> fct[from] -> com[to]

FUN = : (from ** to -> bool) -> fct[from] ** fct[to] -> bool
	-- Vergleich zweier Funktionalitaeten

FUN combine : (from -> to) ** fct[seq[from]] -> seq[fct[to]]
  -- Bilden der Sequenz aller Kombinationen von Fct mit 1-elementigen Blaettern

-- ---------------------------------------------------------------------------
-- sortImpl

FUN * : (from -> to) -> sortImpl[from] -> sortImpl[to]

