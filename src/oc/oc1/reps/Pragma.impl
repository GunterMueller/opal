-- LAST EDIT: Tue Feb  1 09:34:36 1994 by Christian Maeder (troilos!maeder) 

IMPLEMENTATION Pragma
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:38 $ ($Revision: 1.1.1.1 $)

-- AutorInnen:	mija + cg
-- Projekt:	OPAL1-Compiler (Scanner, Parser)
-- Zweck:	Pragmas fuer das Frontend (Annotationen)

IMPORT	-- lib
	Seq[denotation]	ONLY <> ++ <>? seq
	Denotation	ONLY ++ 
	SeqReduce[denotation,denotation]	ONLY /
IMPORT  -- token
	Lexem 		ONLY pragmaStart pragmaEnd ` lexem:SORT 
-- ---------------------------------------------------------------------------

DATA pragma == asPragma( asDeno : seq[denotation])

FUN  noPragma 	: pragma
DEF  noPragma == asPragma(<>)

FUN  + : pragma ** pragma -> pragma	
DEF p1 + p2 == asPragma( asDeno(p1) ++ asDeno(p2) )

FUN  noPragma? : pragma -> bool	
DEF p noPragma? == asDeno(p) <>?

FUN  ` : pragma -> denotation
DEF `(p) == IF noPragma?(p) THEN "" ELSE
    `(pragmaStart) ++" "++ ((++ /"")(asDeno(p))) ++" "++ `(pragmaEnd) FI


