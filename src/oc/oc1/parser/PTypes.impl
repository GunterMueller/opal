--  LAST EDIT: Thu Jun  3 19:25:07 1993 by Carola Gerke (kassandra!carola) 

IMPLEMENTATION PTypes
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 2000-04-14 21:20:56 $ ($Revision: 1.3 $)

-- author: cg
-- purpose: parsing Opal1 and property language

IMPORT	  -- pars
	  Token			COMPLETELY
IMPORT	  -- absy
	  Absy			COMPLETELY
IMPORT	  -- admin
	  OcError			ONLY err errKind ok + ok? string
IMPORT	  -- lib
	  Denotation		COMPLETELY
	  Seq[token]		COMPLETELY

-- -------------------------------------------------------------------------
-- Argument and Result Types for Parsers
-- -------------------------------------------------------------------------
FUN initRes optRes : pRes
DEF initRes == pRes(ok,noAbsy,<>)
DEF optRes  == initRes

DATA pRes    == pRes (err:err,absy:absy,tokS:seq[token])
		pFail(err:err,absy:absy,tokS:seq[token])

-- -------------------------------------------------------------------------
-- Conversion to Denotation
-- -------------------------------------------------------------------------

FUN ` : pRes -> denotation
DEF ` (pFail(E,A,RTS))  == "Res is Fail " ++ printTS(RTS)
DEF ` (pRes(E,A,RTS)) == 
    IF E ok? THEN " --> Res is Ok " ++ "\n" ++ `(A) ++ "\n" ++ printTS(RTS)
    ELSE "Err of Res is not Ok " ++ `(A) ++ printTS(RTS)
    FI
