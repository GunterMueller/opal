-- ============================================================================
-- Autor:	af
-- Projekt:	OPAL1-Compiler
-- Changes:	af, Jun 23 1993: adapted to new absy
--		af, Jun 24 1993: code runtime-error for missing pattern
-- ============================================================================

IMPLEMENTATION PragmaTranslation
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT	Nat			COMPLETELY
	Seq			COMPLETELY
	SeqMap			COMPLETELY
	SeqFilter		ONLY |
	SeqIndex		ONLY pos
	Option			COMPLETELY

	Ide			ONLY ide = : ide ** ide -> bool
	PragmaAn		COMPLETELY
	TypeAn			COMPLETELY
	SourceAn		ONLY pos:SORT noPos


	InterOpal		COMPLETELY
	InterOpalAccess		COMPLETELY
	ParameterTranslation	ONLY info:SORT opParamIdes sortParamIdes
	NameTranslation		COMPLETELY -- COMPLETELYONLY ide 
	FctTranslation		COMPLETELY 
	ImportTranslation	ONLY importedParameterInfo

-- ----------------------------------------------------------------------------


FUN pragma : interOpal ** info ** pragma'InterOpal -> pragma'PragmaAn
DEF pragma(IO,Info,pragma(Items)) == pragma(pragmaItem(IO,Info)*Items)

FUN pragmaItem : interOpal**info -> pragmaItem'InterOpal -> pragmaItem'PragmaAn
DEF pragmaItem(IO,Info)(objects(Names)) == 
    names(noPos,pragmaName(IO,Info,noPos)*Names)
DEF pragmaItem(_, _)(token(Pos,text)) ==
    lexem(Pos`,text)

FUN pragmaName: interOpal**info**pos'SourceAn -> name'InterOpal -> pragmaName
DEF pragmaName(IO,Info,Pos)(Name) ==
  LET ActInfo == IF origin(Name) origin? THEN 
		     importedParameterInfo(IO, struct(IO, Name))
		 ELSE Info FI
  IN
  IF fct?(IO,Name) THEN
    LET Ident == ide(IO)(Name)
	Type  == optGen(sortParamIdes(ActInfo),type(IO,ActInfo)(fct(IO,Name)))
    IN 
    IF origin(Name) main? ANDIF param?(IO, Name) THEN
        param(Pos, Type, cont(pos(_ = Ident, opParamIdes(Info))))
    ELSE
        LET Insts == pragmaName(IO,Info,Pos) * 
				(fct?(IO,_) | origInst(IO,Name))
        IN
        val(Pos,Type,Ident,Insts)
    FI
  ELSE
    type(Pos,optGen(sortParamIdes(ActInfo),type(IO,ActInfo)(Name)))
  FI
