SIGNATURE EqnSys
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

-- subject: equation systems for flattening and cse detection
-- project: acc
-- author:  wg


IMPORT	Nat		ONLY nat
        Ide		ONLY ide:SORT
	IdeSet		ONLY ideSet
	Ac 		ONLY exp:SORT
	An		ONLY an:SORT
	Format		ONLY format:SORT


SORT eqnSys

-- construction

FUN newSys : eqnSys
    /* Initial equation system.
    */
    
FUN newVar : eqnSys ** an -> eqnSys ** ide
    /* Create free local ide.
    */

FUN newEqn : eqnSys ** exp ** an -> eqnSys ** ide
    /* Create equation for flat expression and return lhs
       of it.  Subsequent insertion of the same flat
       expression returns the same equations lhs.
    */

FUN useEqn : eqnSys ** ide -> eqnSys
    /* Account usage of equated ide.
    */

FUN mergeAn : eqnSys ** ide ** an -> eqnSys
    /* Merge annotation to free or equated ide.
    */

FUN setDeps : eqnSys ** ide ** ideSet -> eqnSys
    /* Notify that first equated ide strictly depends on second ide.
       This is used to model semantically strict dependencies
       (as they are introduced by LETs) which are not
       syntactically present.
    */

-- traversal

FUN equated? : eqnSys ** ide -> bool
    /* Ide equated in system?
    */

FUN rhs : eqnSys ** ide -> exp
    /* Return rhs of equated ide.
    */

FUN an : eqnSys ** ide -> an
    /* Return annotation of free or equated ide.
    */

FUN deps : eqnSys ** ide -> ideSet
    /* Return dependencies of equated ide.
    */



-- dumping

FUN format : (ide->format)**(an->format)->eqnSys->format

