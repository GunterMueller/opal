
IMPLEMENTATION AcAnaScheme
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-10-14 13:19:06 $ ($Revision: 1.1 $)

-- subject: scheme for depth-first analysis of flat Ac
-- project: acc
-- author:  wg

IMPORT 	Seq	COMPLETELY
	Nat	ONLY nat succ 0
	Ac	COMPLETELY


DEF anaScheme(I,T,E,S) == LET (_,T1,S1) == df(I,0,T,E,S) IN (T1,S1)

FUN df : inh ** nat ** thr ** exp ** syn -> nat ** thr ** syn

DEF df(I0,C0,T0,block(An,Binds,Scope),S0) ==
    LET (I1,T1) == enterBlock(I0,T0,C0,An)
	(C1,T2,S1) == df(I1,succ(C0),T1,An,Binds,Scope,S0)
    IN
    (C1,exitBlock(I1,T2,C0,An,S1))

  FUN df : inh ** nat ** thr ** an ** seq[dec] ** exp ** syn 
				-> nat ** thr ** syn
  DEF df(I0,C0,T0,An,binding(BindAn,Lhs,_,Rhs)::Binds,Scope,S0) ==
    LET (I1,T1) == enterBind(I0,T0,C0,BindAn,Lhs)
        (C1,T2,S1) == df(I0,succ(C0),T1,An,Binds,Scope,S0)
	(C2,T3,S2) == df(I1,C1,T2,Rhs,S1)
    IN
    (C2,exitBind(I1,T3,C0,BindAn,Lhs,S2))
  DEF df(I0,C0,T0,An,<>,Scope,S0) ==
    LET (C1,T1,S1) == df(I0,C0,T0,Scope,S0)
    IN
    (C1,returBlock(I0,T1,An),S1)

DEF df(I0,C0,T0,case(An,Discr,Matches,Default),S0) ==
    LET (I1,T1) == enterCase(I0,T0,C0,An,Discr)
	(C1,T2,SMs,SD) == df(I1,succ(C0),T1,An,Discr,Matches,Default,S0)
    IN
    (C1,exitCase(I1,T2,C0,An,Discr,SMs,SD))

  FUN df : inh ** nat ** thr ** an ** exp ** seq[match] ** exp ** syn -> 
		nat ** thr ** seq[syn] ** syn
  DEF df(I0,C0,T0,An,Discr,match(Cons,Vars,Scope)::Matches,Default,S0) ==
    LET	(I1,T1) == enterMatch(I0,T0,C0,Discr,Cons,Vars)
	(C1,T2,SMs,SD) == df(I0,succ(C0),T1,An,Discr,Matches,Default,S0)
	(C2,T3,S1) == df(I1,C1,T2,Scope,S0)
	(T4,S2) == exitMatch(I1,T3,C0,Discr,Cons,Vars,S1)
    IN
    (C2,T4,S2::SMs,SD)
  DEF df(I0,C0,T0,An,Discr,<>,Default,S0) ==
    LET (I1,T1) == enterDefault(I0,T0,C0,Discr)
        (C1,T2,S1) == df(I1,succ(C0),T1,Default,S0)
	(T3,S2) == exitDefault(I1,T2,C0,Discr,S1)
    IN
    (C1,returCase(I0,T3,An,Discr),<>,S2)

DEF df(I0,C0,T0,Exp,S0) ==
    (succ(C0),leaf(I0,T0,C0,Exp,S0))
