
IMPLEMENTATION Store
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-10-14 13:20:01 $ ($Revision: 1.1 $)

IMPORT 	Seq ONLY seq <>? ::?
	SeqCompare ONLY eq?
	Nat ONLY =
	

DATA store ==
  	some

	somePrim
	prim		(tag: nat)
	onePrim		(tag: nat)

	someProd
	prod		(tag: nat, comps: seq[store])
	oneProd		(tag: nat, comps: seq[store])

	someClos
	clos		(ins: seq[store], outs: seq[store])

	sum		(members: seq[store])

	tup		(comps: seq[store])


DEF some = some == true
DEF somePrim = somePrim == true
DEF prim(Tag1) = prim(Tag2) == Tag1 = Tag2
DEF onePrim(Tag1) = onePrim(Tag2) == Tag1 = Tag2
DEF someProd = someProd == true
DEF prod(Tag1,Comps1) = prod(Tag2,Comps2) == Tag1 = Tag2 and 
						eq?(=)(Comps1,Comps2)
DEF oneProd(Tag1,Comps1) = oneProd(Tag2,Comps2) == Tag1 = Tag2 and 
						eq?(=)(Comps1,Comps2)
DEF someClos = someClos == true
DEF clos(Ins1,Outs1) = clos(Ins2,Outs2) ==
	eq?(=)(Ins1,Ins2) and eq?(=)(Outs1,Outs2)
DEF sum(Mems1) = sum(Mems2) == eq?(=)(Mems1,Mems2)
DEF tup(Comps1) = tup(Comps2) == eq?(=)(Comps1,Comps2)
DEF _ = _ == false

DEF isPrim?(s) == 
    IF prim?(s) or (onePrim?(s) or somePrim?(s)) THEN true
    IF tup?(s) THEN comps(s)<>? ELSE false FI

DEF isProd?(s) == 
    IF prod?(s) or (oneProd?(s) or someProd?(s)) THEN true
    IF tup?(s) THEN comps(s)::? ELSE false FI

DEF isClos?(s) == clos?(s) or someClos?(s)
