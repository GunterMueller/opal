
IMPLEMENTATION OptimAnFun
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)


IMPORT	Nat	COMPLETELY
	NatConv	ONLY `
	Seq	ONLY seq <> %
	Ide	COMPLETELY
	An	COMPLETELY
	Ac	COMPLETELY
	IdeMap	ONLY ideMap explode !?
	NatMap	ONLY natMap !
	Option  COMPLETELY
	Pair	COMPLETELY

IMPORT	Format	COMPLETELY
	FormatFun1 COMPLETELY

IMPORT	OptimAn	COMPLETELY

DEF format(a:optimAn) ==
    IF hiddenAn?(a) THEN
	blk(0,%(str("hiddenAn:rank="),str(`(rank(a)))))
    IF bindingAn?(a) THEN
	blk(0,%(str("bindingAn:complexity="),str(`(complexity(a))),
	 	str(",rank="),str(`(rank(a))),
		str(",maxIdeNo="),str(`(maxIdeNo(a)))))
    IF unitAn?(a) THEN
	list(str("props{"), str(","), str("}"), format)(explode(props(a)))
    ELSE
	str("")
    FI

FUN format : pair[ide,seq[prop]] -> format
DEF format(Ide & Props) ==
    blk(0,%(format(Ide), str(": "), 
	    list(str("{"),str(","),str("}"),format)(Props)))

FUN format : prop -> format
DEF format(inverse(Fun)) ==
    blk(0,%(str("inverse("), format(Fun), str(")")))
DEF format(unfold) ==
    str("unfold")
DEF format(primary) ==
    str("primary")
DEF format(experimental(Value)) ==
    blk(0,%(str("experimental("), str(Value), str(")")))


-- ---------------------------------------------------------------------------


DEF props(U,i) ==
    LET a == IF origin(i) = target THEN optim(an(U))
                                   ELSE optim(an(uses(U) ! #(origin(i)))) FI
    IN
    IF unitAn?(a) THEN
	LET Props? == props(a) !? i
	IN
	IF avail?(Props?) THEN cont(Props?) ELSE <> FI
    ELSE
	<>
    FI

