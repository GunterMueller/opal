SIGNATURE Format 
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

-- subject: prettyprinting
-- project: acc
-- author:  ws+wg 2-92

-- adapted from Oppen 1980: Pretteyprinting TOPLAS 1980, 465-483
--       c.f. Paulson 1990: ML for the Working Programmer, Cambridge U. P.

IMPORT  Nat         ONLY nat
        String      ONLY string:SORT
        Seq[format] ONLY seq
        Com[void]   ONLY com
        Stream      ONLY output
        Void        ONLY void
        Fmt         ONLY fmt

TYPE format == asFormat(asFmt : fmt)

FUN blk         : nat ** seq[format] -> format
FUN str         : string -> format
FUN str         : denotation -> format
FUN brk         : nat -> format
FUN nl          : format

FUN pretty      : format ** nat -> denotation
FUN pretty      : format ** nat -> string
FUN write       : output ** format ** nat -> com[void]
        
/*
blk(i,[s1,...,sn]): creates a block containing the given formats, 
                  and specifies that the current indention be increased by i. 
                  This indention will be used if the block is brocken
str(s)          : creates a format containing the string s
brk(l)          : creates a break of length l; if no line break is required 
                  then l spaces will be printed instead
nl              : creates always a line break
*/
