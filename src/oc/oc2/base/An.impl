
IMPLEMENTATION An
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-10-14 13:19:14 $ ($Revision: 1.1 $)


IMPORT	TypeAn	  ONLY none:typeAn none?
      	SourceAn  ONLY none:sourceAn none?
      	OptimAn   ONLY none:optimAn none?
      	TransAn   ONLY none:transAn none?
      	PragmaAn  ONLY none:pragmaAn none?


DATA an == none
	   all(typeOf:typeAn,sourceOf:sourceAn,optimOf:optimAn,
	       transOf:transAn,pragmaOf:pragmaAn)

DEF type(none) == none
DEF type(all(ty,_,_,_,_)) == ty
DEF set(none,ty) == all(ty,none,none,none,none)
DEF set(all(_,so,op,tr,pr),ty) == all(ty,so,op,tr,pr)

DEF source(none) == none
DEF source(all(_,so,_,_,_)) == so
DEF set(none,so) == all(none,so,none,none,none)
DEF set(all(ty,_,op,tr,pr),so) == all(ty,so,op,tr,pr)

DEF optim(none) == none
DEF optim(all(_,_,op,_,_)) == op
DEF set(none,op) == all(none,none,op,none,none)
DEF set(all(ty,so,_,tr,pr),op) == all(ty,so,op,tr,pr)

DEF trans(none) == none
DEF trans(all(_,_,_,tr,_)) == tr
DEF set(none,tr) == all(none,none,none,tr,none)
DEF set(all(ty,so,op,_,pr),tr) == all(ty,so,op,tr,pr)

DEF pragma(none) == none
DEF pragma(all(_,_,_,_,pr)) == pr
DEF set(none,pr) == all(none,none,none,none,pr)
DEF set(all(ty,so,op,tr,_),pr) == all(ty,so,op,tr,pr)

DEF a <+ b ==
    LET a1 == IF none?(type(b))   THEN a  ELSE set(a,type(b)) FI
	a2 == IF none?(source(b)) THEN a1 ELSE set(a1,source(b)) FI
	a3 == IF none?(trans(b))  THEN a2 ELSE set(a2,trans(b)) FI
	a4 == IF none?(optim(b))  THEN a3 ELSE set(a3,optim(b)) FI
	a5 == IF none?(pragma(b)) THEN a4 ELSE set(a4,pragma(b)) FI
    IN
    a5
