
IMPLEMENTATION IdeBag 
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

-- implementation prototype 


IMPORT  Nat    	ONLY nat
	Seq	COMPLETELY
	Bag	COMPLETELY
	BagConv	ONLY asSeqPair asBag
	BagFilter ONLY |
	Pair	COMPLETELY

IMPORT	Ide	ONLY ide < : ide**ide->bool

DATA ideBag == @(! : bag[ide,<])

DEF {} 		== @({} :bag)
DEF {}?(s)	== {}?(s!)
DEF incl(e,s)	== @(incl(e,s!))
DEF excl(e,s)	== @(excl(e,s!))
DEF exclAll(e,s) == @(exclAll(e,s!))
DEF %(e)	== @(%'Bag(e))
DEF in(e,s)	== e in (s!)
DEF ct(e,s)	== e ct (s!)
DEF s1+s2	== @((s1!)+(s2!))
DEF s1-s2	== @((s1!)-(s2!))
DEF s1*s2	== @((s1!)*(s2!))
DEF s1 U s2	== @((s1!)U(s2!))
DEF arb(s)	== arb(s!)
DEF #(s)	== #(s!)
DEF s1=s2	== (s1!)=(s2!)
DEF s1<=s2	== (s1!)<=(s2!)
DEF s1<s2	== (s1!)<(s2!)
DEF p|s		== @(p|(s!))
DEF exist?(p,s) == exist?(p,s!)
DEF forall?(p,s) == forall?(p,s!)
DEF explodeCt(s)  == asSeqPair(s!)
DEF implodeCt(ps) == @(asBag(ps))

