SIGNATURE ImplementReflections

IMPORT InterOpal ONLY interOpal : SORT inst : SORT expr : SORT
                      origin : SORT < : origin ** origin -> bool
                      name : SORT < : name ** name -> bool
		      struct : SORT
       TransformInsts ONLY interReflection : SORT
       Map[origin, <, struct] ONLY map
       Map[name, <, interReflection] ONLY map
       Nat ONLY nat
       Pair[map[origin, <, struct], nat] ONLY pair
       Seq[expr] ONLY seq
       Com[pair[map[origin, <, struct], nat]] ONLY com


SORT itable

TYPE itools == itools(coreReflectionName : name,
		      coreTypeName : name,
		      sortName : name,
		      valueName : name,
		      basicName : name,
		      functionName : name,
		      asInstances : seq[expr] -> expr,
		      asCoreType : seq[expr] -> expr)


FUN itable : map[origin, <, struct] ** map[name, <, interReflection] **
	      itools -> itable

FUN itable : map[origin, <, struct] ** map[name, <, interReflection] ->
	      itable

FUN implementReflections : itable ->
	       com[pair[map[origin, <, struct], nat]]
