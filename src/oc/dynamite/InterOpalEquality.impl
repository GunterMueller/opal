IMPLEMENTATION InterOpalEquality

IMPORT InterOpal COMPLETELY
       Nat       ONLY nat =
       Seq       ONLY seq =


DEF name(ident1, origin1, inst1) = name(ident2, origin2, inst2) ==
  IF ident1 = ident2 ANDIF origin1 = origin2 ANDIF inst1 = inst2 THEN true
  ELSE false
  FI

DEF ident(n1) = ident(n2) == n1 = n2

DEF main = main == true
DEF local = local == true
DEF origin(n1) = origin(n2) == n1 = n2
DEF _ : origin = _ : origin == false

DEF formal = formal == true
DEF none = none == true
DEF inst(n1) = inst(n2) == n1 = n2
DEF _ : inst = _ : inst == false


-- FUN = : fct ** fct -> bool

DEF sort(Name1) = sort(Name2) == Name1 = Name2
DEF cart(Fcts1) = cart(Fcts2) == =(=)(Fcts1, Fcts2)
DEF funct(Dom1, Codom1) = funct(Dom2, Codom2) ==
  IF Dom1 = Dom2 THEN Codom1 = Codom2
  ELSE false
  FI
DEF _ : fct = _ : fct == false

-- FUN = : kind ** kind -> bool

DEF sort = sort == true
DEF fct(Fct1) = fct(Fct2) == Fct1 = Fct2
DEF _ : kind = _ : kind == false


