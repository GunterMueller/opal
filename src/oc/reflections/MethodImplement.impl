IMPLEMENTATION MethodImplement


IMPORT Method COMPLETELY
       Reflection COMPLETELY
       ReflectionBuild COMPLETELY
       

-- FUN :: : (method -> special -> result) ** method -> method

DEF handle :: default == method(overwrite(handle, default))


FUN overwrite : (method -> special -> result) ** method ->
		 method -> general -> result

DEF overwrite(handle, default)(method)(x) ==
  LET r == reflect(x)
      refl == IF r reflects?[value] THEN content(r)
	      ELSE r
	      FI
  IN
  IF refl reflects?[special] THEN
    handle(method)(content(refl))
  ELSE fun(default)(method)(x)
  FI
