/* % @b{Pretty Printing}
     This is the generic reflection based pretty printer. It will try
     to print objects of any sort using interface free type
     information as far as available at runtime. Every instance of a
     publicly visible free type will be printed in a canonical
     constructor notation with eventual parameter instantiation, or as 
     @code{SOME alpha} else. The builtin @code{denotation} type is
     handled specially. The printing method may be overridden with
     more efficient specializations for frequently used types.
     @xref{@Sign{PrettyPrintBuiltin}}. */

SIGNATURE PrettyPrint[alpha]

SORT alpha
/$ DYNAMIC [alpha] $/


IMPORT Method[value, denotation] ONLY method : SORT
       Reflection ONLY value : SORT


FUN print : alpha -> denotation
FUN print : method -> alpha -> denotation
