/* %- Rcs-Info 

  $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/oc/reflections/Service/FreeTypeStream/IStreamShift.sign,v 1.1 1999-03-23 12:37:40 kd Exp $
  $Author: kd $
  $Date: 1999-03-23 12:37:40 $
  $State: Exp $

  $Locker:  $
  $Revision: 1.1 $
  $Name: not supported by cvs2svn $

  $Log: not supported by cvs2svn $
  Revision 1.1  1999/03/20 22:51:41  opaladm
  neu eingefuehrt

  Revision 1.2  1998/11/12 15:00:40  silver
  Migrating to virtual functions.

  Revision 1.1  1998/06/13 20:08:44  silver
  Initial revision

*/

/* % 
IStreamShift allows you to read things a little C++ like.
*/

SIGNATURE IStreamShift [alpha, beta]

-- $Author: kd $
-- $Date: 1999-03-23 12:37:40 $
-- $Revision: 1.1 $

SORT alpha
SORT beta

IMPORT	Com[beta]		ONLY	com
	InputMonad[alpha]	ONLY	istream


-- %$Reading things$
/* %
The input composer is the following:
*/

FUN >> : istream ** (alpha -> com[beta]) -> com[beta]


/* %
You use it like this:  
@example
DEF main ==
  cout << "Please enter two numbers: " << endl;

  cin >> (\\ a.
  cin >> (\\ b.

  cout << "The product of " << a << " and " << b << " is " << (a*b)))
@end example
A more elaborated example is the following:
@example
DEF main ==
  cout << "Enter an even number: " << endl;

  cin | even? >> (\\ n.

  cout << "Well, then " << (n+1) << " is odd!" << endl)
@end example
*/
