/* %- Rcs-Info 

  $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/oc/reflections/Service/FormalTyping/FormalTypeConvert.impl,v 1.1 1999-03-23 12:37:18 kd Exp $
  $Author: kd $
  $Date: 1999-03-23 12:37:18 $
  $State: Exp $

  $Locker:  $
  $Revision: 1.1 $
  $Name: not supported by cvs2svn $

  $Log: not supported by cvs2svn $
  Revision 1.1  1999/03/20 22:51:36  opaladm
  neu eingefuehrt

  Revision 1.2  1998/12/10 23:58:20  silver
  Using pragma now.

  Revision 1.1  1998/11/11 14:52:10  silver
  Initial revision

  Revision 1.1  1998/06/13 20:14:34  silver
  Initial revision

*/

IMPLEMENTATION FormalTypeConvert [special, general]

IMPORT	CAST	   		ONLY	cast
	Option			COMPLETELY

	ReflectionBuild		ONLY	reflect : sortReflection
	SortReflection          ONLY	= sortReflection


DEF isSpecialization? == reflect[special] = reflect[general]

DEF specialize (a) ==
  IF isSpecialization? THEN avail(cast[general, special](a))
		       ELSE nil
  FI 

DEF generalize (a) ==
  IF isSpecialization? THEN avail(cast[special, general](a))
		       ELSE nil
  FI

