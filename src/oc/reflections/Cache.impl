IMPLEMENTATION Cache

IMPORT Com COMPLETELY
       ComCompose COMPLETELY
       Option COMPLETELY
       Map[dom, <, codom] COMPLETELY
       ComState[map] COMPLETELY


/$ handcoded [cache : (dom -> codom) -> cache,
              cache : (dom -> codom) ** map -> cache,
              !'Cache] $/


DATA cache == cache(map : stateId[map],
		    new : dom -> codom)


-- DEF cache(new) == cache(new, {})

-- DEF cache(new, start) == cache(EXEC(stateId(start)), new)


-- DEF cache(map, new) ! index ==
--   LET cached? == EXEC(get(map)) !? index
--   IN
--   IF cached? avail? THEN cont(cached?)
--   ELSE EXEC(add(map, index, new(index)))
--   FI


FUN add : stateId[map] ** dom ** codom -> com[codom]

DEF add(map, index, entry) ==
  map with def(index, entry, _) ; succeed(entry)
