/* %- Rcs-Info (automatically generated)

  $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/oc/reflections/ReflectionCore/SortReflection.impl,v 1.1 1999-03-23 12:37:02 kd Exp $
  $Author: kd $
  $Date: 1999-03-23 12:37:02 $
  $State: Exp $

  $Locker:  $
  $Revision: 1.1 $
  $Name: not supported by cvs2svn $

  $Log: not supported by cvs2svn $
  Revision 1.1  1999/03/20 22:51:23  opaladm
  *** empty log message ***

  Revision 1.1  1998/12/06 20:20:46  silver
  Initial revision


*/

IMPLEMENTATION SortReflection

IMPORT	Seq			ONLY	< = 
	Denotation		ONLY 	< =
	Nat			ONLY	nat 0 < =


-- %$Sort declarations$

DATA sortReflection == sort (identifier : denotation,
			     structure  : denotation,
			     instances  : seq[sortReflection],
			     position   : nat)

-- %$Side-effect, handcoded function for magic number management%

FUN lookupPosition     : sortReflection -> nat


-- %$Creation of sort reflections with magic number production%

DEF sort (i, s, inst) ==
  sort (i, s, inst, lookupPosition (sort (i, s, inst, 0)))


-- %$Comparison$

FUN slowCompare : sortReflection ** sortReflection -> bool

-- Slowcompare must do a full compare of the objects, ignoring
-- the position part. (It is called from lookupPosition.)

DEF slowCompare(s1, s2) ==
  IF identifier(s1) = identifier(s2) ANDIF
     structure(s1) = structure(s2) THEN
    = (=) (instances(s1), instances(s2))
  ELSE
    false
  FI

DEF s1 = s2 == position(s1) = position(s2)
DEF s1 < s2 == position(s1) < position(s2)
  


-- %$Comparison$

DEF unique == position
