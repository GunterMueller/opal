
SIGNATURE  ModBody
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1999-10-11 17:33:14 $ ($Revision: 1.1.1.1 $)

-- author: cg
-- purpose: parsing Opal1 and property language

IMPORT    -- pars
          PTypes                ONLY pRes:SORT 
          Token                 ONLY token:SORT 
          ModBase               ONLY modifier:SORT mod1st mod2nd modify
IMPORT    -- absy
          Absy                  ONLY absy:SORT
IMPORT    -- lib
          Seq[token]            ONLY seq        
          Error                 ONLY err:SORT 
	  Pos			ONLY pos:SORT
          Com[pRes]             ONLY com:SORT
       Rep ONLY rep

-- %- ---------------------------------------------------------------------
-- Modifiers are used to construct the abstract syntax
-- usually two abstract syntax terms resulting from parsing have to be 
--  combined into one ..
-- mk.. rules are used to transform one Result into another absy
-- sometimes new errors are detected
-- %- ---------------------------------------------------------------------
-- %$init signature, implementation, external or internal properties structure$

FUN mkInitI mkInitS mkInitEP mkInitIP mkInitT: absy

-- %- ---------------------------------------------------------------------
-- %$Modifiers for Struct Body$
-- %- ---------------------------------------------------------------------

FUN modStructBody  modStructOri : modifier

-- %- ---------------------------------------------------------------------
-- %- ---------------------------------------------------------------------

FUN modPNSeq : modifier
FUN modFun : modifier
FUN mkSort : modifier
FUN modOnlyImport modButImport: modifier
FUN modRelation: rep -> modifier
FUN modLaw    : pos -> modifier


FUN modType mkData : modifier
FUN modVariant : modifier
FUN flattenVariants flattenComps: modifier

FUN flattenGPragma: modifier

FUN mkPrTokAbsy: token -> absy
FUN mkPItem : modifier
