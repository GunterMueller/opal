
IMPLEMENTATION Terminal
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

-- author: cg
-- purpose: parsing Opal1 and property language

IMPORT 	-- lib
	Nat		ONLY nat < = <= + 1
IMPORT 	
	Rep		ONLY rep `` ord lastKeyword generated?	


DATA terminal == abs(toNat:nat)
-- 'toNat' should be termed 'rep' but this is confusing with SORT rep'Rep

-- %- ------------------------------------------------------------------------
-- %$Relations$
-- %- ------------------------------------------------------------------------

FUN  =	< : terminal ** terminal -> bool
DEF  T1 = T2  == toNat(T1) = toNat(T2)
DEF  T1 < T2  == toNat(T1) < toNat(T2)

FUN = : rep ** terminal -> bool
DEF R = abs(N) == IF ord(R) <= ord(lastKeyword) THEN ord(R) = N FI

-- %- ------------------------------------------------------------------------
-- %$Conversions$
-- %- ------------------------------------------------------------------------

FUN ! : rep -> terminal
DEF !(R) == 
    IF ord(R) <= ord(lastKeyword) THEN abs(ord(R))
    IF R generated?	THEN ignPat
    ELSE ide
    FI

FUN ` : terminal -> denotation
DEF ` (abs(N)) ==
    IF N <= ord(lastKeyword)  THEN ``(N)
    IF N = (ide toNat)	      THEN "Ide" 
    IF N = (ignPat toNat)     THEN "_" 
    IF N = (deno toNat)       THEN "Den" 
    IF N = (eqSep toNat)      THEN "EoEq" 
    IF N = (eof toNat)        THEN "Eof" 
    FI

-- %- ------------------------------------------------------------------------
-- %$Primitive Conversion terminal -> nat$
--	     and (a partial) nat -> terminal 
-- %- ------------------------------------------------------------------------

DEF ignPat		== abs(ord(lastKeyword) + 1)  
DEF ide			== abs(toNat(ignPat) + 1)
DEF deno		== abs(toNat(ide) + 1)
DEF eof			== abs(toNat(deno) + 1)
DEF eqSep		== abs(toNat(eof) + 1)

