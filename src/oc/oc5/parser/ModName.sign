/* %
Modifiers are used to construct the abstract syntax.
Usually two abstract syntax terms resulting from parsing have to be 
combined into one .
All Modifiers are implemented partial.

@samp{mk@dots{}} rules are used to transform one result into another absy;
sometimes new errors are encountered.
*/

SIGNATURE  ModName
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

-- %- author: cg
-- %- purpose: parsing Opal1 and property language

IMPORT    ModBase               ONLY modifier:SORT

-- %$Special modifiers for Opal$

FUN mkOrigin : modifier         -- transform Name into an Origin

-- %- ---------------------------------------------------------------------
-- %$enrichment of Names and Name Sequences$
-- %- ---------------------------------------------------------------------

FUN modPNSeq : modifier
    -- constructing a partname sequence 

FUN modFunFct : modifier
    -- construction of functionality

FUN modOrigin modKind: modifier
    -- enrich of Origin, Params or Kind to a PartName



