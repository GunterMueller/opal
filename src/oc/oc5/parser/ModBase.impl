
IMPLEMENTATION ModBase
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1999-10-11 17:33:14 $ ($Revision: 1.1.1.1 $)

-- author: cg
-- purpose: parsing Opal1 and property language

IMPORT -- pars
       PTypes		COMPLETELY
       PErr		COMPLETELY
IMPORT -- absy
       Absy		COMPLETELY
IMPORT -- lib
       Seq		COMPLETELY

-- -------------------------------------------------------------------------
-- General Modifier
-- -------------------------------------------------------------------------

DATA modifier == mod(rep: absy ** absy -> absy)
		 mkMod(rep: pRes -> pRes)

DEF mod2nd == mod(\\ _ ,A2. A2)
DEF mod1st == mod(\\A1, _ .A1)

FUN modify : pRes ** pRes ** modifier -> pRes
DEF modify(R1, R2, mod(OP)) ==
	LET A == OP(absy(R1), absy(R2))
	    TS == tokS(R2)
	    E == err(R1) + err(R2)
	IN IF pFail?(R1) ORIF pFail?(R2) THEN
		pFail(E,A,TS)
	ELSE pRes(E,A,TS) FI
		
FUN modify : pRes ** modifier -> pRes
DEF modify(R,mkMod(OP)) == OP(R)

FUN mkAbsyMod: (absy -> absy) -> modifier
DEF mkAbsyMod(F) == mkMod(\\R.
	LET E == err(R)
	    A == F(absy(R))
	    T == tokS(R)
	IN
	IF pRes?(R) THEN pRes(E, A, T)
	IF pFail?(R) THEN pFail(E, A, T)	
	FI)
