
IMPLEMENTATION Token
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1999-10-17 15:51:09 $ ($Revision: 1.2 $)

-- %- author: cg
-- %- purpose: parsing Opal1 and property language
IMPORT 	-- lib
	Denotation	ONLY ++
	Seq		COMPLETELY
	SeqConv		COMPLETELY
	NatConv		ONLY `
IMPORT	-- admin
	Pos		ONLY pos ` =
IMPORT	-- 
	Terminal 	COMPLETELY
	Rep 		COMPLETELY

DATA token == token(terminal:terminal,lexem:rep,pos:pos)

DEF R = T == R = terminal(T)
-- %PRE ord(Rep) <= ord(lastKeyword)

-- %- ------------------------------------------------------------------------
-- %$generated token$
-- %- ------------------------------------------------------------------------

DEF impTok(P)    == token(import!,import,P)
DEF eqSepTok(P)  == token(eqSep,nilRep,P)

-- %- ------------------------------------------------------------------------
-- %$Conversion$ 
-- %- ------------------------------------------------------------------------

FUN ` : (rep -> denotation) -> token -> denotation 
DEF ` (P)(token(T, R, _)) == 
	IF ide = T ORIF deno = T THEN `(T) ++ "(" ++ P(R) ++ ")"
	IF eof = T ORIF eqSep = T THEN `(T)
	ELSE P(R) FI

FUN ` : token -> denotation 
DEF ` == `(`) 

FUN dump : token -> denotation
DEF dump (T) == `(printRep)(T) ++ `(pos(T))

DEF printTS(TS) == `("TokenSeq:\n", " ", "\n")(`)(TS)
DEF dumpTS(TS) == `("TokenSeq:\n", "\n", "\n")(dump)(TS)


