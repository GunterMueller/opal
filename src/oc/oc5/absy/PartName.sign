
SIGNATURE PartName
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

-- Autor:       mija
-- Projekt:     OPAL1-Compiler (Frontend)
-- Zweck:       Partielle Namen und Herkuenfte in der abstrakten Syntax

IMPORT  Nat                     ONLY nat
        Seq[partName]           ONLY seq
        Option[seq]             ONLY option
        Rep                     ONLY rep : SORT
        OcPos                     ONLY pos
        Option[rep]             ONLY option

TYPE partName ==       -- partielle Namen (Applikationen von Namen)
             partName(  ide : rep,              -- Bezeichner
                        structIde : option[rep], -- Herkunft
                        paramS : option[seq[partName]], -- Instanz
                        instPos : pos,          -- Position der Instanz
                        kind : kind,            
                        pos : pos)              -- Position d. Bez.

TYPE kind ==    sort                    -- Sorten
                op( fct : partName )    -- Operationen
                law                     -- Gesetze
                proof                   -- Beweise
                none                    -- nicht angegeben oder fehlerhaft


FUN errorName nilName: partName
FUN errorName? nilName?: partName -> bool
-- %- ------------------------------------------------------------------------
-- %$Relationen$
-- % (ohne Vergleich der Positionen!)

FUN  =  : partName ** partName -> bool
FUN  =  : kind ** kind -> bool

FUN < : partName ** partName -> bool
FUN < : kind ** kind -> bool

-- %- ------------------------------------------------------------------------
-- %$Stringkonversion$

-- % without positions
FUN  `  : partName -> denotation     
FUN  `  : kind -> denotation

-- %- ------------------------------------------------------------------------
-- %$Update von Komponenten$

FUN stripKind : partName -> partName
FUN :=_pos : partName ** pos -> partName
FUN :=_kind : partName ** kind -> partName
FUN :=_instPos : partName ** pos -> partName
FUN :=_paramS : partName ** option[seq] -> partName
FUN :=_structIde : partName ** option[rep] -> partName
FUN :=_ide : partName ** rep -> partName


