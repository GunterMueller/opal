-- ============================================================================
-- Autor:	af/wg
-- Projekt:	OPAL1-Compiler
-- ============================================================================

IMPLEMENTATION OcExit
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT	Denotation	ONLY ++ =
	Nat		COMPLETELY

	Void		COMPLETELY
	Com		COMPLETELY
	Stream		COMPLETELY
	ComCompose	COMPLETELY

FUN languageError ioError internalError: denotation

DEF languageError == "language error"

DEF ioError == "i/o error"

DEF internalError == "internal error"

FUN exit: ans[void] -> com[void]

DEF exit(okay(nil)) == exit(okExitCode)

DEF exit(fail(msg)) ==
  IF msg = languageError THEN exit(errExitCode)
  IF msg = ioError       THEN exit(ioExitCode)
  IF msg = internalError THEN exit(fatalExitCode)
  ELSE (writeLine(stdErr,"unknown failure reason: "++msg) ;
        exit(fatalExitCode))
  FI

FUN okExitCode errExitCode ioExitCode fatalExitCode: nat

DEF okExitCode == 0

DEF errExitCode == 1

DEF ioExitCode == 2

DEF fatalExitCode == "255"!

