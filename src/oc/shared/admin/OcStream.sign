-- LAST EDIT: Tue May 18 18:29:57 1993 by OPAL compiler (athene!opal) 
-- ============================================================================
-- Autor:	af/wg
-- Projekt:	OPAL1-Compiler
-- Zweck:	Abstraktion von ComStream
--		zur uniformen Behandlung auftretender Fehler
-- ============================================================================

SIGNATURE OcStream
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:35 $ ($Revision: 1.1.1.1 $)

IMPORT 	Nat		ONLY nat
	Void 		ONLY void            
       	Char 		ONLY char            
       	String 		ONLY string     
	Com[void] 	ONLY com
	Com[char] 	ONLY com
	Com[string] 	ONLY com
        Com[input]	ONLY com
	Option[input]	ONLY option
	Com[option[input]] ONLY com
        Com[output]	ONLY com
	Stream		ONLY input output stdIn stdOut stdErr

IMPORT	Options		ONLY options

FUN open: options**denotation -> com[input]
    tryOpen: options**denotation -> com[option[input]]
    close : options**input -> com[void]
    -- open/close named input stream

FUN read: options**input -> com[char] 
    look : options**input -> com[char]
    -- read/look-ahead next character 

FUN read: options**input** nat -> com[string]
    -- read string of maximal length (EOF is not an error)

FUN read: options**input ** (char -> bool) -> com[string]
    -- read string while predicate holds or EOF occurs

FUN readLine: options**input -> com[string]
    -- read next line from input, dropping newline character

FUN create: options**denotation -> com[output]
    append: options**denotation -> com[output]
    close:  options**output -> com[void]
    -- create named output stream / append to existing named output 
    -- stream (or create if not existing) / close & make permanent / 
    -- forget, i.e. dont make permanent
    
FUN write: options**output ** char -> com[void]
    write: options**output ** denotation -> com[void]
    write: options**output ** string -> com[void]
    -- write to output stream

FUN writeLine: options**output ** string -> com[void]
    writeLine: options**output ** denotation -> com[void]
    -- write to output stream with additional newline
