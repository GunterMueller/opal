-- LAST EDIT: Thu Sep 18 11:38:18 1997 by kd@cs.tu-berlin.de polyxena
-- ============================================================================
-- Projekt:     OPAL1-Compiler
-- Version:     OcSetup.impl[3.2] accessed Fri Sep 19 13:32:34 1997
-- Bytes:       2350
-- ============================================================================
-- -- Log for /home/uebb/kd/ocs-old/src/oc/shared/admin/OcSetup.impl[3.2]:
--   ocs-1.0b
-- [1.2] Wed Jul 14 02:51:36 1993 opal@cs.tu-berlin.de published
--   added identification string
-- [2.0] Wed Jul 14 02:51:36 1993 opal@cs.tu-berlin.de accessed
--   added identification string
-- [2.1] Fri Sep 17 18:03:10 1993 maeder@cs.tu-berlin.de saved
--   [Fri Sep 17 18:02:12 1993] Intention for change:
--   automatic version string generation
-- [2.2] Sun Oct  3 14:19:15 1993 wg@cs.tu-berlin.de saved
--   [Sun Oct  3 02:41:32 1993] Intention for change:
--   --- no intent expressed ---
-- [2.3] Sun Oct  3 15:35:16 1993 wg@cs.tu-berlin.de accessed
--   [Sun Oct  3 15:27:17 1993] Intention for change:
--   --- no intent expressed ---
-- [3.0] Mon Jan 17 20:04:55 1994 wg@cs.tu-berlin.de saved
--   
-- [3.1] Wed Jan 19 16:38:11 1994 wg@cs.tu-berlin.de accessed
--   Error.sign
-- [3.2] Fri Sep 19 13:32:34 1997 kd@cs.tu-berlin.de accessed
--   [Wed Sep 17 21:58:36 1997] Intention for change:
--   finshU einbauen
-- ============================================================================

IMPLEMENTATION OcSetup

IMPORT	Void	COMPLETELY
	Char	ONLY char newline
	Denotation ONLY ++
	Com	COMPLETELY
	ComCompose COMPLETELY
	DEBUG[bool] ONLY FIELD?

	Stream   ONLY output stdOut writeLine:output**denotation->com[void]
	OcStream ONLY output create append close:options**output->com[void]
    Verbose ONLY finishU initU

	OcExit	ONLY exit
	Options	ONLY options analyzeOptions myDiagFile file

-- ---------------------------------------------------------------------------

DEF version == "oc-3.0a $Date: 1998-06-18 14:23:54 $"

-- ---------------------------------------------------------------------------

FUN banner: part -> denotation

DEF banner(oc1) == 
   "Opal to AC compiler oc1\n" ++ version

DEF banner(oc2) == 
   "AC to C compiler oc2\n" ++ version

-- ---------------------------------------------------------------------------

DATA part == oc1 oc2

FUN init: part -> com[options]

DEF init(part) ==
  printVersion(part) &
  (\\ _ .analyzeOptions &
         prepareDiagFile(part) & (\\o .
         initU(o, IF part oc1? THEN "oc1" ELSE "oc2" FI) &
         succeed(o)
         )
  )

FUN printVersion: part -> com[void]

DEF printVersion(part) ==
  IF FIELD?("-zversion") THEN writeLine(stdOut,banner(part))
  			 ELSE yield(okay(nil)) FI

FUN prepareDiagFile: part -> options -> com[options]

DEF prepareDiagFile(part)(options) ==
  LET diagOpen == IF part oc1? THEN create
                  IF part oc2? THEN append
                  FI
  IN (diagOpen(options,myDiagFile(options)) ;
      (\\a.IF a okay? THEN yield(a)
	   IF a fail? THEN diagOpen(options,"/dev/null")
	   FI)) &
	   (\\f.yield(okay(file(options,f))))

-- ---------------------------------------------------------------------------

DEF finit(options)(ans) == finishU(options) & 
                           (finitDiagFile(options) ; exit(ans))

FUN finitDiagFile: options -> com[void]

DEF finitDiagFile(options) == close(options,file(options))
