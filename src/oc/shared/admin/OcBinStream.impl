/*
-- ============================================================================
-- Autor:       af/wg/cm
-- Projekt:     OPAL1-Compiler
-- ============================================================================
*/
IMPLEMENTATION OcBinStream [data]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

SORT data

IMPORT  Void            COMPLETELY
        Char            COMPLETELY
        String          COMPLETELY
        Denotation      COMPLETELY
        OcOptions         ONLY options cop?
        Option          COMPLETELY
        Com             COMPLETELY
        ComCompose      COMPLETELY
        Stream          ONLY output stdOut stdErr writeLine
        BinStream       COMPLETELY

IMPORT  OcExit          ONLY ioError

FUN trace: options**denotation**denotation -> com[void]

DEF trace(options,mode,fn) ==
  IF cop?("traceIO",options) THEN writeLine(stdOut, mode++fn)
  ELSE yield(okay(nil))
  FI

FUN write: options**denotation**denotation**data -> com[void]

DEF write(options,fn,tag,data) ==
  trace(options,"writing binary ", fn) ; (\\ _ . 
  store(fn,tag,data) ;
            (\\a.IF a okay? THEN yield(a)
                 IF a fail? THEN writeErr(fn,error(a)) ;
                                  yield(fail(ioError))
                 FI))

FUN read: options**denotation**denotation -> com[data]

DEF read(options,fn,tag) ==
  trace(options,"reading binary ", fn) ; (\\ _ . 
  load(fn,tag) ;
           (\\a.IF a okay? THEN yield(a)
                IF a fail? THEN writeErr(fn,error(a)) ;
                                 yield(fail(ioError))
                FI))

FUN optread: options**denotation**denotation -> com[option[data]]

DEF optread(options,fn,tag) ==
   trace(options,"try reading binary ", fn) ; (\\ _ . 
   load(fn,tag) ;
  (\\optIn.IF optIn okay? THEN 
                trace(options,"successful reading ", fn) ; (\\ _ .
                yield(okay(avail(data(optIn)))))
           IF optIn fail? THEN 
                trace(options,"failed reading ", fn ++ " : " ++
                        error(optIn)) ; (\\ _ .
                yield(okay(nil)))
           FI))

-- ---------------------------------------------------------------------------

FUN writeErr: denotation**denotation -> com[void]

DEF writeErr(fn,msg) ==
  writeLine(stdErr,"I/O error: " ++ fn ++ ": " ++ msg) 
