IMPLEMENTATION InterOpalIO
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)
-- ============================================================================
-- Autor:	ralfi, maeder
-- Projekt:	OPAL1-Compiler - Zwischensprache InterOpal
-- Zweck:       Ein/Ausgaberoutinen fuer InterOpal, die unabhaengig vom
--		IO des Compilers sind
-- ============================================================================

IMPORT	
	Com		COMPLETELY
	ComCompose	ONLY	& ;
	BinStream[interOpal]    ONLY    load store
	Stream          ONLY    output stdOut 
                                writeLine:output**denotation->com[void]
 	InterOpal	ONLY	interOpal:SORT ioTypeKey
	Option		COMPLETELY
	Denotation      ONLY    ++ 
	Void		COMPLETELY

	
-- ---------------------------------------------------------------------------
FUN readInterOpal       : bool ** denotation -> com[option[interOpal]]
DEF readInterOpal(Verbose?,Fn) ==
	(IF Verbose? THEN 
		writeLine(stdOut, "reading " ++ Fn)
	ELSE succeed(nil) FI) & (\\ _ .
	load(Fn, ioTypeKey) ; (\\I.
	IF okay?(I) THEN succeed(avail(data(I)))
	ELSE succeed(nil) FI))

FUN writeInterOpal	: bool ** denotation -> interOpal -> com[void]
DEF writeInterOpal(Verbose?,Fn)(IO) ==
	(IF Verbose? THEN 
		writeLine(stdOut, "writing " ++ Fn)
	ELSE succeed(nil) FI) & (\\ _ .
    	store(Fn,ioTypeKey,IO))
