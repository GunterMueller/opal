IMPLEMENTATION Ic
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:36 $ ($Revision: 1.1.1.1 $)


DATA stm ==
        nop
	pos	(pos: pos)
	halt	(message: denotation, kind: errorKind)

	ass	(ins: seq[ide], outs: seq[ide])
	call	(ide: ide, ins: seq[ide], outs: seq[ide])
	eval	(ide: ide, ins: seq[ide], outs: seq[ide])

	inlineStatic  (macro: denotation, in: denotation, out: ide)
	inlineDynamic (macro: denotation, in: ide, out: ide)

	copy	(ide: ide, store: store, times: nat)
	free	(ide: ide, store: store, times: nat)

        cons    (store: store, ins: seq[ide], out: ide)
        reuse	(store: store, cand: ide, candStore: store,
		 ins: seq[ide], out: ide)

	block	(vars: seq[obj], stms: seq[stm])
	case	(ide: ide, store: store, matches: seq[match], default: stm)

DATA match ==
	match	(tags: set[nat,<],store: store, sels: seq[sel], stms: seq[stm])
	
DATA sel ==
	dead	(ide: ide, store: store)
	plain	(ide: ide, store: store, times: nat)
	borrow	(ide: ide, store: store, times: nat)
	reuse	(ide: ide, store: store, times: nat)

DATA obj ==
	variable 	(ide: ide, store: store)
	hidden 		(ide: ide, store: store, mode: mode, symbol: denotation)
	procedure	(ide: ide, store: store, mode: mode, symbol: denotation,
			 ins: seq[ide], outs: seq[ide],
		  	 stm: stm)
	constant	(ide: ide, store: store, mode: mode, symbol: denotation, 
			 init: stm)
	denotation	(ide: ide, store: store, mode: mode, symbol: denotation, 
			 repr: denotation)

DATA mode ==
	external internal local

DATA mod ==
	mod	(symbol: denotation, origin: origin, kind: modKind,
		 uses: natMap[mod], objs: natMap[obj])

DATA modKind == normal foreign builtin
