SIGNATURE DbRequire

IMPORT
	Com[void]	ONLY	com
	Void		ONLY	void
	Option[assocPrintFun]
			ONLY	option
	Set[unitName,<] ONLY	set

IMPORT
	Repo		ONLY	repo
	RepoName	ONLY	unitName objectName
					< : unitName ** unitName -> bool
IMPORT
	DbIdentTable	ONLY	identTable
	DbDebugState	ONLY	debugState:SORT
	ChannelData	ONLY	assocPrintFun:SORT
       Com[option[assocPrintFun]] ONLY com
       Option[assocPrintFun] ONLY option

/* %
 require the unit @code{unitName} to be up to date wihtin the client process.
The function analyses the dependencies between the different units and updates
all necessary units.

The function will fail if one of these units could not be 
updated successfully.
 */

FUN require : set[unitName,<] -> com[void]

FUN validPrintFun? : repo ** objectName -> objectName -> bool

/* %
 @code{requireDebugState(O,S)} brinks up the debugging state for
the given object: 
*/

FUN requireDebugState : objectName ** debugState -> com[void]

/* %
 @code{asAssocPrintFun(Sort,Oper)} tries to generate the
@code{assocPrintFun}-entry for a given print function @code{Oper} for
@code{Sort}. @code{nil} is returned if the @code{Oper} is not a valid print
function for @code{Sort}.
 */
FUN asAssocPrintFun? : objectName ** objectName -> com[option[assocPrintFun]]
