SIGNATURE DbEvalTable

IMPORT
        Com[evalId]     ONLY    com
        Com[map[evalId,<,evalInfo]]     
                        ONLY    com
        Com[fmt]        ONLY    com
        Com[void]       ONLY    com
        Map[evalId,<,evalInfo]
                        ONLY    map
        Void            ONLY    void
        Fmt             ONLY    fmt
        Option[evalId]  ONLY    option
        Com[option[evalId]] ONLY com
IMPORT
        RepoAbsy        ONLY    fct:SORT
IMPORT
        Expression      ONLY    evalId:SORT < : evalId ** evalId -> bool
        ChannelData     ONLY    evalState:SORT
        
/* %
 @code{newEval} erzeugt einen neuen Eintrag in der Tabelle der Auswertungen.
Der State wird auf @code{unknown} gesetzt. @code{rmEval} entfernt einen Eintrag
aus der Tabelle und löscht die Normalform im Client, falls der State
@code{ready} war. 
 */
FUN newEval     : denotation ** fct             -> com[evalId]
FUN rmEval      : evalId                        -> com[void]

/* %@code{lastEval} liefert die höchste EvalId mit State @code{ready}. */
FUN lastEval: com[option[evalId]]

/* %
 @code{evalTab} liefert die Abbildung aller @code{evalIds} auf
@code{evalInfo}. Dazu werden die Einträge auf der Grundlage der Informationen,
die der Client bereitstellt, aktualisiert.
 */
FUN evalTab     :                                  com[map[evalId,<,evalInfo]]

TYPE evalInfo == 
        evalInfo(
                source  : denotation,
                fct     : fct'RepoAbsy,
                state   : evalState
        )

/* %
 Formatierte Ausgabe der Tabelle.
 */
FUN fmtEvalTable:                                  com[fmt]
