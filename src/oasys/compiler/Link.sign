/* % This structure provides the linkage of executables. */

SIGNATURE Link

IMPORT  Pair[set[unitName,<],
             set[unitName,<]]           ONLY pair:SORT
        Seq[denotation]                 ONLY seq:SORT
        Set[unitName,<]                 ONLY set:SORT

IMPORT  Com[repo]                       ONLY com:SORT

IMPORT  Repo                            ONLY repo:SORT
        RepoName                        ONLY objectName:SORT
                                             unitName:SORT
                                                < : unitName**unitName->bool


/* % @code{linkObject(ObjectName, Params, ExecName)} creates a
program which executes the given top-level command @code{ObjectName}.
It thereby first establishes the checked and compiled state
for the unit @code{ObjectName} originates from and all the transient
implementation imports of this unit.

@code{Params} are any parameters to be passed to the system linker.
@code{ExecName} is the file where the executable shall be stored. */

FUN linkObject : objectName ** seq[denotation] ** denotation 
                        -> repo -> com[repo]


/* % @code{guessLinkObject} returns a pair of unit sets required
to check (1st) and compile (2nd) in order to execute an object. */

FUN guessLinkObject     : objectName    -> repo -> pair[set[unitName,<],
                                                        set[unitName,<]]
