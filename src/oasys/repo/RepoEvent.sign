/* % This structure provides a dispatcher for notification
of the subsystems of oasys about certain global events. */

SIGNATURE RepoEvent

IMPORT	Void		ONLY void:SORT
	Com[void]	ONLY com:SORT
	Com[repo]	ONLY com:SORT
	Com[callback]	ONLY com:SORT
	Com[bool]	ONLY com:SORT

IMPORT	Repo		ONLY repo:SORT
	RepoDiag	ONLY diag:SORT
	RepoName	ONLY unitName:SORT objectName:SORT


/* % Events are described by the type below: */

TYPE event ==
	-- diagnostics have been produced
	diag		(diag	: diag)
	-- progress message of a tool
	progress	(target	: progressTarget,
			 message : denotation)
	-- unit has been added to the repository
	newUnit		(unit	: unitName)
	-- source of a unit has been updated
	newSource	(unit	: unitName)
	-- absy of a unit has been updated
	newAbsy		(unit	: unitName)
	-- object of a unit has been updated
	newObject	(unit	: unitName)

TYPE progressTarget ==
    repository
    unit		(name	: unitName)
    object		(object	: objectName)


/* % @code{register(Callback)} registers the given command as a callback
to be called whenever an event occures. The first version takes a
command that will be executed in the context of @code{with'RepoCom1},
the second version works directly on a repository: */

SORT callback

FUN register	: (event -> com[void])	-> com[callback]
FUN register	: (event -> repo -> com[repo])	-> com[callback]

FUN unregister	: callback		-> com[void]

/* % An event is dispatched by the commands below. The first
version is expected to be called in a context of a @code{with'RepoCom1}: */

FUN event	: event			-> com[void]
FUN event	: event		-> repo -> com[repo]


/* % @code{diag(Diag)} is a shortcut for dispatching a diagnostics
event. If @code{Diag} is empty, this command doesn't dispatch an event
at all, thus speeding up things a little bit. Moreover, a call
to @code{diag} with a diagnostics not okay is or'ed with a global 
error flag which can be read and set by the commands @code{errors?},
@code{setErrors} and @code{clearErrors}. */

FUN diag	: diag			-> com[void]
FUN diag	: diag		-> repo -> com[repo]

FUN errors?	: com[bool]
FUN setErrors 	: com[void]
FUN clearErrors : com[void]
