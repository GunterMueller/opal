/* % This structure defines the representation of the source of OPAL
in the repository. */

SIGNATURE RepoSource

IMPORT	Nat			ONLY nat:SORT
	Char			ONLY char:SORT
	Option[region]		ONLY option:SORT
	Option[locator]		ONLY option:SORT
	Fmt			ONLY fmt:SORT

IMPORT	RepoAn			ONLY an:SORT anLayer:SORT




-- %$Items$ ===============================================================

/* % Components of the source are represented by so-called @emph{items},
which are refered to by @emph{item names}: */

TYPE item ==
	item		(an		: an,		
					  -- the annotation
			 kind		: itemKind,	
					  -- the kind
			 text		: denotation)
					  -- the source text
	-- special variant for internal puposes
	removed

     FUN fmtItem	: item				-> fmt


TYPE itemKind ==
	unknown comment pragma import sort fun type data def law 
	signature implementation


     FUN fmtItemKind	: itemKind			-> fmt


-- %$Positions and Regions$ =================================================

/* % A region addresses a range in a source as a pair of positions.
A position is a pair of a line and a column number. Several
functions are supplied on regions and positions: */

TYPE pos ==
	pos		(line		: nat,
			 column		: nat)

TYPE region ==
	region		(start		: pos,
			 end		: pos)

FUN < =			: pos ** pos			-> bool
FUN < =			: region ** region		-> bool
FUN fmtPos		: pos				-> fmt
FUN fmtRegion		: region			-> fmt
FUN in			: pos ** region			-> bool
FUN min max		: pos ** pos			-> pos
FUN nextPos		: pos ** char			-> pos
FUN +			: region ** region		-> region
			  -- the minimal region which covers both
FUN maxCol      : nat


-- %$Locators$ =============================================================

/* % A Locator is either unspecified, a position with
an alternative locator, or a region with an alternative locator. */

TYPE locator ==
    unspecified
    pos			(pos		: pos,
			 alt		: locator)
    region		(region		: region,
    			 alt		: locator)		

FUN fmtLocator 	: locator -> fmt
FUN in		: locator ** region	-> bool


-- %$Region Annotation Layer$ ================================================

/* % Items are annotated with regions, which point to a range in the
source of a unit where they appear in. */

FUN regionAnLayer	: anLayer	-- code 1

FUN region?		: an		-> option[region]
FUN region		: an		-> region
FUN :=_region		: an ** region	-> an

-- %$Locator Annotation Layer$ ================================================

/* % Locators are (optionally) annotated at terms of the abstract syntax: */

FUN locatorAnLayer	: anLayer	-- code 2

FUN locator?		: an		-> option[locator]
FUN locator		: an		-> locator
FUN :=_locator		: an ** locator	-> an
