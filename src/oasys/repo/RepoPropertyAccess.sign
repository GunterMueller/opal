/* % This structure provides access functions related to properties. */

SIGNATURE RepoPropertyAccess


IMPORT	Nat			 ONLY nat
	String			 ONLY string
	Set[objectName,<]	 ONLY set
	Set[propertyName,<]	 ONLY set
	Seq[objectName]		 ONLY seq
	Seq[propertyName]	 ONLY seq
	Seq[property]	 	ONLY seq
	Option[propertyName]	 ONLY option
   
IMPORT	Repo			ONLY repo:SORT
	RepoAn			ONLY an:SORT
	RepoName		ONLY unitName:SORT 
				     objectName:SORT
					< : objectName ** objectName -> bool
				     propertyName:SORT
					< : propertyName ** propertyName
								 -> bool
	RepoAbsy		ONLY property:SORT 

-- %$Properties in General$ ==================================================

/* % @code{properties} returns the properties associated with a unit
or an object: */

FUN properties	: unitName			-> repo -> set[propertyName,<]
FUN properties	: objectName			-> repo -> set[propertyName,<]


/* % @code{lookup?} returns the properties with the given symbolic
name in the given unit: */

FUN lookup	:   unitName ** denotation	-> repo -> set[propertyName,<]


/* % @code{property} returns the property associated with
@code{Name}: */

FUN property	:   propertyName		-> repo -> property


/* % @code{newProperty} creates a new property, @code{updateProperty}
updates and @code{removeProperty} removes it: */

FUN newProperties  : unitName ** seq[property]	-> repo -> seq[propertyName]
								 ** repo
FUN updateProperty : propertyName ** (property	-> property)
						-> repo -> repo
FUN removeProperty : propertyName		-> repo -> repo


/* % @code{assocProperty} associates the given property with the
given objects: */

FUN assocProperty : propertyName ** set[objectName,<] -> repo -> repo


-- %$Free Type Properties$ ==================================================

/* % @code{freeType} returns a free type property associated with the
given object: */

FUN freeType?	  : objectName			-> repo -> option[propertyName]


/* @code{constructors(FreePropName)} delivers for a free type property
the set of free constructors. @code{test(FreePropName, ObjName)}
delivers for a constructor @code{ObjName}the corresponding test
function in @code{FreePropName}; @code{selectors(FreePropName,
ObjName} delivers the corresponding sequence of selector functions.
*/

FUN constructors  : propertyName		-> repo -> set[objectName,<]
FUN test	  : propertyName ** objectName	-> repo -> objectName
FUN selectors	  : propertyName ** objectName	-> repo -> seq[objectName]



