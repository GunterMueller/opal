# default startup file for oasys  -*-tcl-*-
# $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/oasys/scripts/shortcuts.oasys,v 1.1 1998-06-17 17:05:47 kd Exp $

# some convenient single-letter shortcuts 

# register some structure
oasys-proc \
  {a @^STRUCTURE} \
  {Add STRUCTURE to known units.
 A possible directory path and .sign or .impl suffix will be stripped
 from STRUCTURE.} \
  {CMD STRUCTURE} \
  {oasys-register $STRUCTURE}
    
# reload anything
oasys-proc \
  {r} \
  {Reload units which have been changed.
 Checks for all units registered if the source file has
 been changed, and if so, reloads the source and updates assumptions
 about the checked and compiled state.  } \
  {CMD} \
  {eval oasys-reload [oasys-units]}

# r then check anything
oasys-proc \
  {c} \
  {Reload, then check structures.} \
  {CMD} \
  {r; oasys-check}

# r then exec 
oasys-proc \
  {ex @EXPR *@EXPRCONT} \
  {Reload, then evaluate and execute result in current focus.} \
  {CMD EXPR EXPRCONT} \
  {r; oasys-debug update; eval oasys-exec {$EXPR} $EXPRCONT} 

# r then run
oasys-proc \
  {x @EXPR *@EXPRCONT} \
  {Reload, then execute expression in current focus.} \
  {CMD EXPR EXPRCONT} \
  {r; eval oasys-run {$EXPR} $EXPRCONT}                 

# r then eval 
oasys-proc \
  {e @EXPR *@EXPRCONT} \
  {Reload, then evaluate expression in current focus.} \
  {CMD EXPR EXPRCONT} \
  {r; oasys-debug update; eval oasys-eval {$EXPR} $EXPRCONT}

# r then link 
oasys-proc \
  {ld @COM} \
  {Reload, then link COM as an executable in current focus.} \
  {CMD COM} \
  {r; oasys-link $COM}


# r then archive 
oasys-proc \
  {ar @FOLDER} \
  {Reload, then create object archive for folder FOLDER to be used with the ocs command.}\
  {CMD FOLDER} \
  {r; oasys-archive $FOLDER}

# toggle type information
oasys-proc \
   {t} \
   {Switch additional printing of type information on or off.} \
   {CMD} \
    {oasys-show-type toggle; oasys-show-type show}

# set focus
oasys-proc \
  {f @#UNIT} \
  {Set focus to UNIT.} \
  {CMD UNIT} \
  {oasys-focus $UNIT}

# list units
oasys-proc \
  {l} \
  {List all known units.} \
  {CMD} \
  {oasys-units name} 

oasys-proc  \
  {ll} \
  {List all known units in long format.} \
  {CMD} \
  {oasys-units full}

# intro
oasys-proc \
  {i} \
  {Introduction to oasys.} \
  {CMD} \
  {puts "Welcome to the OPAL application development system.
Some frequently used oasys-commands are:
a    add STRUCTURE     add structure to known units
c    check	       reload sources, then check changed structures
e    eval EXPR         reload sources, then evaluate EXPR in current focus
ex   eval-exec EXPR    reload sources, then evaluate EXPR and execute result 
f    focus UNITNAME    set focus to UNIT
h    help 	       give help on command
i    intro	       this introduction
ld   link COM          reload, then link COM as an executable in current focus
l    list	       list all known units
q    quit	       quit oasys
r    reload	       reload sources of units
t    type print        toggle additional printing of result type
x    execute COM       reload, then execute COM in current focus
d*   debug commands    see `di' for introduction to debugging commands
where
  STRUCTURE is a name of an OPAL structure (may also be the file name) 
  UNIT      is a name of an OPAL structure part (STRUCTURE.sign, STRUCTURE.impl)
  EXPR      is an OPAL expression (use { ... } for quoting complex EXPRs)
  COM       is an OPAL name of type com\[void\]
Note that the command language of OASYS is Tcl. Completion (TAB) may be used 
in any command context (use `oasys-all-commands' to see more commands). "}

# debugging
oasys-proc \
  {di} \
  {Introduction to oasys debugging commands.} \
  {CMD} \
  {puts "Commands starting with the letter `d' are used for debugging:

dm   monitor NAME       enable monitoring of execution of function NAME
db   break NAME \[EXPR\]  set a breakpoint for function NAME with guard EXPR
do   off NAME           disable debugging for function name
ds   show               show debugged functions
dt   back-trace         print back-trace after interrupted evaluation
dc   continue           continue  after interrupted evaluation
dn   step NUMBER        perform a number of steps after interrupted evaluation
df   frame NUMBER       select frame NUMBER

Note that the debugging features are experimental and not stable yet!
"}

oasys-proc \
  {dm @NAME} \
  {Enable monitoring of execution of function NAME.} \
  {CMD NAME} \
  {eval oasys-debug monitor {$NAME}}

oasys-proc \
  {db @NAME *@EXPR} \
  {Set breakpoint for function NAME with optional guard EXPR.} \
  {CMD NAME EXPR} \
  {eval oasys-debug break $NAME $EXPR}

oasys-proc \
  {do @NAME} \
  {Disable debugging for function NAME.}\
  {CMD NAME} \
  {eval oasys-debug off $NAME}


oasys-proc \
  {ds} \
  {Show debugged functions.} \
  {CMD} \
  {oasys-debug}


oasys-proc \
  {dt} \
  {Print back-trace.} \
  {CMD} \
  {oasys-bt}

oasys-proc \
  {dc} \
  {Continue after interrupted evaluation.} \
  {CMD} \
  {oasys-continue}


oasys-proc \
  {dn ?@STEPS} \
  {Perform a number of steps after interrupted evaluation.} \
  {CMD STEPS} \
  {eval oasys-step $STEPS}

oasys-proc \
  {df @NUMBER} \
  {Select frame NUMBER} \
  {CMD NUMBER} \
  {eval oasys-select $NUMBER}



# help
oasys-intern-config-help h oasys

# all
oasys-proc \
  {oasys-all-commands} \
  {Make all commands available for completion.} \
  {CMD} \
  {oasys-intern-config-help h oasys-intern} 

oasys-proc \
  {oasys-really-all-commands} \
  {Make really all commands available for completion.} \
  {CMD} \
  {oasys-intern-config-help h} 


# quit
oasys-proc \
  {q} \
  {Quit oasys.} \
  {CMD} \
  {oasys-quit} 

