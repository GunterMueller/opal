IMPLEMENTATION SeqExtensions[data]

SORT data

IMPORT 	Seq[data]	COMPLETELY
	ABORT		COMPLETELY
        Nat             COMPLETELY

FUN theuniq : seq -> data
DEF theuniq(a :: <>) == a
DEF theuniq(_) == 
    ABORT("theuniq: seq does not contain just one item")

FUN thepair : seq -> data ** data
DEF thepair(a :: b :: <>) == (a,b)
DEF thepair(_) == 
    (ABORT("thepair: seq does not contain just two items"),ABORT("dummy"))

FUN ..> : nat ** nat -> (nat -> data) -> seq[data]
DEF (N1 ..> N2)(f) == (succ(N1)..N2)(\\I.f(pred(I)))
