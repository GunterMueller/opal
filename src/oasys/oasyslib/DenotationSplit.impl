IMPLEMENTATION DenotationSplit

IMPORT  String          COMPLETELY
        StringConv      COMPLETELY
        Denotation      COMPLETELY
        Seq             COMPLETELY
        StringFilter    COMPLETELY
        SeqFold         COMPLETELY

FUN split : denotation ** (char -> bool)    -> seq[denotation]
DEF split(Text,P) == 
    LET (S,Rt) == 
           split((\\C. ~(P(C))), drop(P, !(Text)))
    IN IF S <>?
         THEN <>
         ELSE `(S) :: split(`(Rt),P)
       FI

FUN join : seq[denotation] ** denotation        -> denotation
DEF join(<>,_ :denotation) == ""
DEF join(Seq,Separator) == (\\S1,S2.S1 ++ Separator ++ S2) / Seq

