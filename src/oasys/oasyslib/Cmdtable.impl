IMPLEMENTATION Cmdtable

IMPORT	Argspec			COMPLETELY
	ArgspecOp		COMPLETELY
	Seq			COMPLETELY
	SeqReduce		COMPLETELY
	SeqMap			COMPLETELY
	Denotation		COMPLETELY

DATA cmdtable == cmdtable(cmds : seq[cmd])
DATA cmd      == cmd(argspec: argspec[data], help: denotation)

DEF cmd(Spec, Help) == cmdtable(%(cmd(Spec, Help)))

DEF cmdtable(Cmds1) ++ cmdtable(Cmds2) == cmdtable(Cmds1 ++ Cmds2)

DEF explode(cmdtable(Cmds)) == (\\Cmd. cmd(argspec(Cmd), help(Cmd)))
					* Cmds

DEF argspec(cmdtable(Cmds)) ==
    (\\ Cmd, Argspec . Argspec | argspec(Cmd), argspec(ft(Cmds))) \ rt(Cmds)

DEF help(cmdtable(Cmds)) ==
    (\\ Cmd, Help . Help ++ "\n" ++ help(Cmd), help(ft(Cmds))) \ rt(Cmds)


 
