
IMPLEMENTATION Id

IMPORT	Nat	COMPLETELY
	NatConv	ONLY `
	Denotation ONLY ++
	Fmt	COMPLETELY

DATA id == abs (# : nat)

DEF id(N) == abs(N)
DEF id?(abs(N)) == N |= max'Nat
DEF no(Id) == #(Id)

DEF none == abs(max'Nat)
DEF none?(abs(N)) == N = max'Nat


DEF abs(N1) = abs(N2) == N1 = N2
DEF abs(N1) |= abs(N2) == N1 |= N2
DEF abs(N1) < abs(N2) == N1 < N2

DEF `(abs(N)) == 
  IF N |= max'Nat THEN "'" ++ `(N)
		  ELSE "'<none>" FI

DEF Id1 max Id2 == IF Id1 < Id2 THEN Id2 ELSE Id1 FI	      

DEF fmtId(Id) == lit(`(Id))
