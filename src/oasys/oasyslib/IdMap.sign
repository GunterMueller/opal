/* %
This structure provides finite mappings from identifiers to some co-domain.
*/

SIGNATURE IdMap [codom:SORT]


SORT codom

IMPORT	Id		ONLY id:SORT <
	Seq[id]		ONLY seq
	Seq[codom]	ONLY seq
	Seq[pair]	ONLY seq
	IdSet		ONLY idset
	Pair[id,codom]	ONLY pair
	Option[codom]	ONLY option
	Option[pair]	ONLY option
	Fmt		ONLY fmt:SORT

SORT idmap

FUN {}		: idmap
FUN {}?		: idmap					-> bool

FUN def		: id ** codom ** idmap			-> idmap
FUN upd		: id ** (codom -> codom) ** idmap	-> idmap

FUN !		: idmap ** id				-> codom
FUN !?		: idmap ** id				-> option[codom]
FUN def?	: id ** idmap				-> bool

FUN undef	: idmap ** id				-> idmap

FUN exists?	: (codom -> bool) ** idmap		-> bool
FUN forall?	: (codom -> bool) ** idmap		-> bool
FUN find?	: (codom -> bool) ** idmap		-> option[codom]
FUN find?	: (id ** codom -> bool) ** idmap	
						-> option[pair[id,codom]]
FUN free	: idmap					-> id
		  -- the smallest identifier which isn't in domain
		  -- which is larger then all others in domain


FUN dom		: idmap					-> idset
FUN codom	: idmap					-> seq[codom]
FUN codomST	: idmap ** (codom -> bool)		-> seq[codom]


FUN <+		: idmap ** idmap			-> idmap	
FUN <-		: idmap ** idset			-> idmap

FUN extend	: idmap ** seq[id] ** seq[codom]	-> idmap

FUN asMap	: seq[pair[id,codom]]	-> idmap
FUN asSeq	: idmap			-> seq[pair[id,codom]]

FUN fmtIdmap	: (codom -> fmt) -> idmap		-> fmt
