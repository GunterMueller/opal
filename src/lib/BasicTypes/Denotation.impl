IMPLEMENTATION Denotation
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:57 $ ($Revision: 1.1.1.1 $)
-- more functions on denotations

IMPORT	Nat	ONLY nat < 0? 1
	Int	ONLY int < <= >= > = |= 0
	Char	ONLY char
	ABORT	COMPLETELY


-- DEF init(n, c) == ...
-- DEF init(n, f) == ...

DEF empty == ""

-- DEF #(d) == ...

DEF empty?(d) == #(d) 0?

DEF d!i == 
    IF i < #(d) THEN uncheckedSel(d,i)
	        ELSE ABORT("!'Denotation: index out of range for denotation " ++ d)
                FI

  FUN uncheckedSel : denotation ** nat -> char
  -- DEF uncheckedSel(d, n) == ...

DEF (d,i) := c == 
	IF i < #(d) THEN uncheckedUpd(d,i,c)
		    ELSE ABORT(":='Denotation: index out of range") FI

  FUN uncheckedUpd : denotation ** nat ** char -> denotation
  -- DEF uncheckedUpd(d, n, c) == ...

DEF upd(i, c, d) == IF i < #(d) THEN uncheckedUpd(d,i,c)
		    ELSE ABORT("upd'Denotation: index out of range") FI



-- DEF d1 ++ d2 == ...
DEF +/+(c)(d1, d2) == IF d1 empty? THEN d2
                      IF d2 empty? THEN d1
                      ELSE d1 ++ %(c) ++ d2
                      FI

DEF +/+(d)(d1, d2) == IF d1 empty? THEN d2
                      IF d2 empty? THEN d1
                      ELSE d1 ++ d ++ d2
                      FI

DEF +%+(c)(d1, d2) == d1 ++ %(c) ++ d2
DEF +%+(d)(d1, d2) == d1 ++ d ++ d2


DEF d1 < d2  == compare(d1,d2) < 0
DEF d1 <= d2 == compare(d1,d2) <= 0
DEF d1 > d2  == compare(d1,d2) > 0
DEF d1 >= d2 == compare(d1,d2) >= 0
DEF d1 = d2  == compare(d1,d2) = 0
DEF d1 |= d2 == compare(d1,d2) |= 0

FUN compare : denotation ** denotation -> int


DEF % == init(1,_)

DEF !(d) == d
