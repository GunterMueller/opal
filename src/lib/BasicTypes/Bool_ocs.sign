SIGNATURE Bool
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

-- %$Constants$
-- %Symbolic names: @code{T}, @code{F}; long names: @code{true}, @code{false}
FUN T F: bool

-- %$Unary Functions$
-- %Symbolic name: @code{~}; long names: @code{not}, @code{id}
FUN id not: bool -> bool
-- %Constant Functions
FUN true false T F : bool -> bool

-- %$Binary Functions$
-- %Long names for existing symbolic names.
FUN equiv xor : bool ** bool -> bool
-- %Symbolic names for existing long names.
FUN /\ \/  : bool ** bool -> bool
-- %Negate and and or
FUN nand nor /~\  \~/ : bool ** bool -> bool
-- %Implication
FUN implies => : bool ** bool -> bool
-- %Functions which ignore one argument.
FUN 1st 2nd n1st n2nd : bool ** bool -> bool
-- %Functions which ignore both arguments.
FUN true false T F : bool ** bool -> bool
-- %Orderings with @code{false} less than @code{true}
FUN < <= > >= : bool ** bool -> bool

/* %This gives all 16 possible binary boolean functions with the following
    truth table.

@multitable .05 .05 .05 .1 .1 .1 .1 .1 .1 .1 .1
@item @b{A} @tab @b{B} @tab : @tab @b{F, false} @tab @b{/\, and} @tab @b{>} @tab @b{1st} @tab @b{<} @tab @b{2nd} @tab @b{|=, xor} @tab @b{\/, or}
@item false @tab false @tab :@tab false @tab false @tab false @tab false @tab false @tab false @tab false @tab false 
@item false @tab true @tab :@tab false @tab false @tab false @tab false @tab true @tab true @tab true @tab true
@item true @tab false @tab :@tab false @tab false @tab true @tab true @tab false @tab false @tab true @tab true
@item true @tab true @tab :@tab false @tab true @tab false @tab true @tab false @tab true @tab false @tab true
@item @b{A} @tab @b{B} @tab : @tab @b{T, true} @tab @b{/~\, nand} @tab @b{<=, =>, implies} @tab @b{n1st} @tab @b{>=} @tab @b{n2nd} @tab @b{=, equiv} @tab @b{\~/, nor}
@item false @tab false @tab :@tab true @tab true @tab true @tab true @tab true @tab true @tab true @tab true 
@item false @tab true @tab :@tab true @tab true @tab true @tab true @tab false @tab false @tab false @tab false
@item true @tab false @tab :@tab true @tab true @tab false @tab false @tab true @tab true @tab false @tab false
@item true @tab true @tab :@tab true @tab false @tab true @tab false @tab true @tab false @tab true @tab false
@end multitable

*/

-- %$Converting Denotations$

-- %@code{!} is defined for denotations @code{"true"} and @code{"false"} only.
FUN ! : denotation -> bool

