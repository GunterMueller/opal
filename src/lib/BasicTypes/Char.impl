IMPLEMENTATION Char
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:57 $ ($Revision: 1.1.1.1 $)

IMPORT 	ABORT	COMPLETELY

IMPORT 	Nat ONLY nat 

DATA char 	== primitive -- simulate primitive storage class

-- DEF min 	== ...
-- DEF max	== ...

DEF pred(x)	== IF x = min THEN ABORT("pred'Char: no pred for min'Char")
		   ELSE		   uncheckedPred(x)
		   FI

DEF succ(x)	== IF x = max THEN ABORT("succ'Char: no succ for max'Char")
		   ELSE		   uncheckedSucc(x)
		   FI

FUN uncheckedPred uncheckedSucc : char -> char

DEF tab		== denCharCode("\t")
DEF newline	== denCharCode("\n")
DEF blank	== !(" ")
DEF vtab	== denCharCode("\v")
DEF backspace	== denCharCode("\b")
DEF return	== denCharCode("\r")
DEF formfeed	== denCharCode("\f")
DEF bell	== denCharCode("\a")

FUN denCharCode : denotation -> char

-- DEF x<=y	== ...
-- DEF x=y	== ...
-- DEF x>=y	== ...
-- DEF x<y	== ...
-- DEF x>y	== ...
-- DEF x|=y	== ...

-- DEF lower?(x)	== ...
-- DEF upper?(x)	== ...
-- DEF letter?(x)  	== ...
-- DEF control?(x) 	== ...
-- DEF punctuation?(x)  == ...
-- DEF digit?(x)	== ...
DEF letgit?(x)	== letter?(x) or digit?(x)
DEF space?(x)	== (x=newline) or ((x=blank) or (x=tab))
-- DEF whitespace?(x) == ...
-- DEF printable?(x) == ...

-- DEF lower(x) == ...
-- DEF upper(x)	== ...

-- DEF d !	== ...
