IMPLEMENTATION TreeZip
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)


IMPORT Tree ONLY tree nil node
       ABORT ONLY ABORT

DEF zip(_, nil, nil) == nil
DEF zip(f, node(v1, l1, r1), node(v2, l2, r2)) ==
    node(f(v1, v2), zip(f, l1, l2), zip(f, r1, r2))
DEF zip(_, nil, _) == ABORT("zip'TreeZip: second tree bigger than first")
DEF zip(_, _, nil) == ABORT("zip'TreeZip: first tree bigger than second")

DEF unzip(_, nil) == (nil, nil)
DEF unzip(f, node(v, l, r)) ==
    LET (v1, v2) == f(v)
        (l1, l2) == unzip(f, l)
        (r1, r2) == unzip(f, r)
    IN  
    (node(v1, l1, r1), node(v2, l2, r2))
