IMPLEMENTATION HeapReduce
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

IMPORT Tree ONLY tree nil node
       TreeReduce ONLY / /_in /_pre /_post
       Heap ONLY heap rep + 



DEF (f:from**to->to, null) / h == (f, null) / rep(h)

FUN / : (from ** to -> to) ** to ** tree[from] -> to
DEF (_, null) / nil == null
DEF (f, null) / node(v, l, r) == (f, f(v, null)) / (l +[from,<] r)

DEF (f:from**to**to->to, null) / h == (f, null) / (h rep)

DEF (f, null) /_in h   == (f, null) /_in   (h rep)
DEF (f, null) /_pre h  == (f, null) /_pre  (h rep)
DEF (f, null) /_post h == (f, null) /_post (h rep)

