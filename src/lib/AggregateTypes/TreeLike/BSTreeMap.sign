/* % The usual mapping on aggregate types: apply a function to all
elements of the tree. */
SIGNATURE BSTreeMap[from ,< :from ** from -> bool, to, < :to ** to -> bool]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT BSTree[from, <] ONLY bstree[from, <]
       BSTree[to, <] ONLY bstree[to, <]

-- %$Parameter$
/* %@code{from} is the original data type of the elements of the tree,
@code{to} is the new data type. */

SORT from to
FUN < : from ** from -> bool
FUN < : to ** to -> bool


-- %$Mapping$
/* % If the result constitutes no valid bs tree, the structure is
altered. Thus, the function is total. */
FUN * : (from -> to) ** bstree[from, <] -> bstree[to, <]
