IMPLEMENTATION TreeReduce
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)
--

IMPORT Tree ONLY tree nil node

FUN / :  (from ** to ** to -> to) ** to ** tree[from] -> to
DEF (_, i) /  nil == i
DEF (f, i) /  node(v, l, r) == f(v, f / (i, l), f / (i, r))

FUN /_in : (from ** to -> to) ** to ** tree[from] -> to
DEF (_, i) /_in nil == i
DEF (f, i) /_in node(v, l, r) == (f, f(v, (f, i) /_in r)) /_in l

FUN /_pre: (from ** to -> to) ** to ** tree[from] -> to
DEF (_, i) /_pre nil == i
DEF (f, i) /_pre node(v, l, r) == f(v, (f, (f, i) /_pre r) /_pre l)

FUN /_post: (from ** to -> to) ** to ** tree[from] -> to
DEF (_, i) /_post nil == i
DEF (f, i) /_post node(v, l, r) ==
    (f, (f, f(v, i)) /_post r) /_post l
