IMPLEMENTATION SetConv
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:02 $ ($Revision: 1.1.1.1 $)

IMPORT Seq ONLY seq <> :: 
       Set ONLY set {} incl rep 
       SeqConv ONLY `

DEF asSet(<>) == {}
DEF asSet(d :: r) == incl(d, asSet(r))

DEF asSeq(S) == S rep

DEF `(f: data -> denotation)(S) == `("{",",","}")(f)(S rep)
DEF `(f: data -> string)(S)	== `("{",",","}")(f)(S rep)

DEF `(open,comma,close)(f: data -> denotation)(S) ==
  `(open,comma,close)(f)(S rep)
DEF `(open,comma,close)(f: data -> string)(S)	==
  `(open,comma,close)(f)(S rep)

DEF explode == asSeq
DEF implode == asSet
