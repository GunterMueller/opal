IMPLEMENTATION BitsetConv
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)
--

IMPORT NatConv ONLY `
       Seq ONLY seq <> ::
       SeqConv ONLY `
       Bitset ONLY set {} {}? arb excl incl
       String ONLY asString

DEF asSeq(s) == IF s {}? THEN <>
		ELSE LET e == arb(s)
			 r == excl(e, s)
		     IN e :: asSeq(r)
		FI

DEF asSet(<>) == {}
DEF asSet(n :: s) == incl(n, asSet(s))

DEF s` == `("{",",","}")(`)(asSeq(s))
DEF s` == `("{",",","}")(\\n.asString(`(n)))(asSeq(s))
