IMPLEMENTATION SetOfSet
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:02 $ ($Revision: 1.1.1.1 $)

IMPORT Set[data, <] ONLY + {} {}? arb excl incl rep
       SetMap ONLY *
       Set[set[data, <], {<}] ONLY % +
       SetReduce[set[data, <], {<}, set[data, <]] ONLY /
       Seq ONLY seq
       SeqOfSeq ONLY partition
       SeqMap ONLY *
       SetConv ONLY asSet

DEF flat(SS) == (+ / {})(SS)

DEF P(S) == IF S {}? THEN %({})
	    ELSE LET e == arb(S)
		     T == e excl S
		     subP == P(T)
		 IN
		   (incl(e,_) * subP) + subP
            FI

DEF partition(P)(S) == asSet(asSet * partition(P)(rep(S)))
