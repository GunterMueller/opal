/* %Mappings of sets with an accumulating environment. */
SIGNATURE SetByBSTMapEnv[env, from, < :from ** from -> bool,
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)
                              to, < :to ** to -> bool]

IMPORT SetByBST[from, <] ONLY set
       SetByBST[to, <]   ONLY set

-- %$Parameter$
/* % @code{from} is the element type of the source set, @code{to} that
of the target set. @code{<} is a total strict order on the respective
type: the formula ALL x y. ~(x < y) AND ~(y < x) => x === y must
hold. */
SORT env from to

FUN < : from ** from -> bool
FUN < : to ** to -> bool

-- %$Mapping with an Environment$
/* %@code{f * (e,<>) == (e,<>)} @*
@code{f * (e,ft::rt) == (e2,ft1::rt1) @*
WHERE (e1,ft1) == f(e,ft)
(e2,rt1) == f * (e1,rt)}. The order of elements should not be relevant. */

FUN * : (env ** from -> env ** to) ** env ** set[from, <] -> 
                                                env ** set[to, <]

