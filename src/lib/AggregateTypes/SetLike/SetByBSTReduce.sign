/* % This structure provides reductions on sets. */
SIGNATURE SetByBSTReduce [from,<,to]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:02 $ ($Revision: 1.1.1.1 $)

IMPORT SetByBST[from,<] ONLY set

-- %$Parameter$
/* % @code{from} is the element type, @code{<} is a total strict
order: the formula ALL x y. ~(x < y) AND ~(y < x) => x === y must
hold. @code{to} is the result type of the reduction. */
SORT from to

FUN < : from ** from -> bool

-- %$Reducing$
/* %@code{(o, e)/ s} reduces @code{s} by @code{o} with value @code{e}
as initial 2nd argument. The function @code{f} should be
left-commutative:  @code{x o (y o z) = y o (x o z)}, since reduction
order is implementation dependent.

Informally, @code{(o / e)({a,b,...,y,z}) == a o (b o (...(y o (z o
e))...))}.  */
FUN / : (from ** to -> to) ** to ** set[from,<] -> to
