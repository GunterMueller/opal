IMPLEMENTATION SeqSort
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

IMPORT Seq ONLY seq <>? <> ft rt split # :: 
       Nat ONLY nat half -

DEF msort (@)(s) == ms(@,s,s#)
    FUN ms: (data ** data -> bool) ** seq[data] ** nat -> seq[data]
    DEF ms(@,s,l) ==
        IF s<>? THEN <> -- :seq[data]
        OTHERWISE
        IF rt(s)<>? THEN s
                    ELSE LET (u,v) == (half(l),l-half(l))
                             (s1,s2) == split(u,s)
                         IN
                         merge(@)(ms(@,s1,u),ms(@,s2,v)) FI
 
DEF merge (@)(s1,s2) ==
        IF s1<>?           THEN s2
        IF s2<>?           THEN s1
        OTHERWISE
        IF ft(s1) @ ft(s2) THEN ft(s1)::merge(@)(rt(s1),s2)
                           ELSE ft(s2)::merge(@)(s1,rt(s2)) FI
