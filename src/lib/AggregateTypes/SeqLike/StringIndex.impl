IMPLEMENTATION StringIndex
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1999-09-23 15:16:08 $ ($Revision: 1.3 $)

IMPORT Nat ONLY nat 0 succ < - > + 1 <= =
       String ONLY string :: <> take drop ++ # split rt ft
		   chunk start data rest asString
       Denotation ONLY # ! := init
       Option ONLY option avail nil
       OptionMap ONLY *

       ABORT  COMPLETELY

DEF <> ! _ == ABORT("!'StringIndex: index out of range")
DEF s!n == IF n = 0 THEN ft(s) ELSE
		 LET P == start(s)
		     D == data(s)
		     l == #(D) - P
                 IN IF n < l THEN D!(P + n)
		    ELSE rest(s)!(n - l)
		    FI
	   FI

DEF pos(_, <>) == nil
DEF pos(P, f :: r) == IF P(f) THEN avail(0) ELSE succ * pos(P,r) FI

DEF slice(s,i,j) == IF i>j THEN <> ELSE take((j-i)+1,drop(i,s)) FI

DEF upd(i, new, s) == IF i < #(s) THEN 
			LET P == start(s)
			    D == data(s)
			    R == rest(s)
			    l == #(D) - P
			IN 
			  IF i < l THEN chunk(P, (D, P+i) := new, R)
			  ELSE chunk(P, D, upd(i - l, new, R))
			  FI
		      ELSE
		      	 s
                      FI

DEF upd(i, f, s) == IF i < #(s) THEN 
			LET P == start(s)
			    D == data(s)
			    R == rest(s)
			    l == #(D) - P
			IN 
			  IF i < l THEN chunk(P, (D, P+i) := f(D!(P+i)), R)
			  ELSE chunk(P, D, upd(i - l, f, R))
			  FI
		    ELSE
		        s
                    FI
-- swap could haven been implemented more efficiently ... kd
DEF swap(i, j, s) == LET oldi == s!i
			 oldj == s!j
		     IN 
			upd(i, oldj, upd(j, oldi, s))

DEF repl(olds, from, news) == LET (part1, rest1) == split(from, olds)
			          part2 == drop(#(news), rest1)
			      IN
			      	take(#(olds), part1 ++ (news ++ part2))

DEF insert(olds, k, news) == 
    LET (vorne, hinten) == split(k, olds)
    IN  vorne ++ (news ++ hinten)

DEF delete(s, from, to) ==
    IF to < from THEN s
    ELSE
      LET (vorne, hinten) == split(from, s)
      IN
      	  vorne ++ drop(succ(to - from), hinten)
    FI
