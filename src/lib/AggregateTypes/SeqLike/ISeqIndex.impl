IMPLEMENTATION ISeqIndex
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:01 $ ($Revision: 1.1.1.1 $)
--

IMPORT  ISeq ONLY iseq ft drop rt take :: ++
	Nat  ONLY nat succ 0 - 0? <= > = < + pred
	Seq ONLY seq # <>
	Option ONLY avail

DEF s!n == ft(drop(n, s))

DEF P pos s == IF P(ft(s)) THEN 0 ELSE succ(P pos rt(s)) FI
DEF P pos s == avail(P pos s)

DEF s slice (i,j) == IF j <= i THEN <> ELSE take(succ(j - i), drop(i, s)) FI
			
DEF (i, d) upd s == IF i 0? THEN (\\ . d) :: ( \\ . rt(s))
		    ELSE (\\ . ft(s)) :: (\\ . upd(pred(i), d, rt(s)))
		    FI

DEF (i, f) upd s == IF i 0? THEN (\\ . f(ft(s))) :: (\\ . rt(s))
		    ELSE (\\ . ft(s)) :: (\\ . upd(pred(i), f, rt(s)))
	            FI

DEF (i,j) swap s == IF i > j THEN (j,i) swap s
		    IF i = j THEN s
		    IF i < j THEN IF i 0? THEN 
   				     (\\ . s!j) :: 
				     (\\ . upd(pred(j), ft(s), rt(s)))
				  ELSE
				     (\\ . ft(s)) :: 
				     (\\ . (pred(i), pred(j)) swap(rt(s)))
			          FI
                    FI

DEF s repl (n, r) == take(n, s) ++ (r ++ drop(n + #(r), s))

DEF s insert(n, i) == take(n, s) ++ (i ++ drop(n, s))

DEF s delete (i,j) == IF j <= i THEN s ELSE take(i, s) ++ drop(succ(j), s) FI




