SIGNATURE ISeqConv[data]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 15:59:59 $ ($Revision: 1.1.1.1 $)
-- converting an infinite seq to a denotation - of course, only a finite part
-- can be printed

-- Parameter
SORT data

IMPORT ISeq[data] ONLY iseq
       String ONLY string
       Nat ONLY nat


-- second variant allows for customized beginning/seperator/ending
-- `(f)(s) === `("<", ",", ">")(f)(s)
-- `(f)(<e0, e1, ... >) == "<" f(e1) "," f(e2) "," ... "," f(en) ",... >"
-- where n is fixed to 9 or given explicitly


-- convert the first 9 items

FUN ` : (data -> denotation) -> iseq[data] -> denotation

FUN ` : (denotation ** denotation ** denotation) ->
		    (data -> denotation) -> iseq[data] -> denotation

FUN ` : (data -> string) -> iseq[data] -> string

FUN ` : (denotation ** denotation ** denotation) ->
		    (data -> string) -> iseq[data] -> string


-- convert as many items as given

FUN ` : nat ** (data -> denotation) -> iseq[data] -> denotation

FUN ` : (denotation ** denotation ** denotation) ->
		    nat ** (data -> denotation) -> iseq[data] -> denotation

FUN ` : nat ** (data -> string) -> iseq[data] -> string

FUN ` : (denotation ** denotation ** denotation) ->
		    nat ** (data -> string) -> iseq[data] -> string
