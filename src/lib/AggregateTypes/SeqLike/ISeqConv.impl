IMPLEMENTATION ISeqConv
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)
--

IMPORT String ONLY string 
       ISeq ONLY iseq :: take
       SeqConv ONLY `
       Seq ONLY seq
       Nat ONLY nat 9

FUN defaultsize: nat
DEF defaultsize == 9

DEF ` : (data -> denotation) -> iseq -> denotation 
	(f)(s)
	== `("<", ",", ", ... >")(f)(take(defaultsize, s))

DEF ` : (denotation ** denotation ** denotation) ->
	(data -> denotation) -> iseq[data] -> denotation 
	(beg, sep, end)(f)(s) 
	== `(beg,sep,end)(f)(take(defaultsize, s))

DEF ` : (data -> string) -> iseq[data] -> string
	(f)(s)
	== `("<", ",", ", ... >")(f)(take(defaultsize, s))

DEF ` : (denotation ** denotation ** denotation) ->
		    	(data -> string) -> iseq[data] -> string
	(beg, sep, end)(f)(s)
	== `(beg,sep,end)(f)(take(defaultsize, s))




DEF ` : nat ** (data -> denotation) -> iseq[data] -> denotation
	(n,f)(s)
	== `("<", ",", ", ... >")(f)(take(n, s))	

DEF ` : (denotation ** denotation ** denotation) ->
		    nat ** (data -> denotation) -> iseq[data] -> denotation
	(beg,sep,end)(n,f)(s)
	== `(beg,sep,end)(f)(take(n, s))

DEF ` : nat ** (data -> string) -> iseq[data] -> string
	(n,f)(s)
	== `("<", ",", ", ... >")(f)(take(n, s))

DEF ` : (denotation ** denotation ** denotation) ->
		    nat ** (data -> string) -> iseq[data] -> string
	(beg,sep,end)(n,f)(s)
	== `(beg,sep,end)(f)(take(n, s))
