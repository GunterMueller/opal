IMPLEMENTATION DArrayConv
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:05 $ ($Revision: 1.1.1.1 $)

IMPORT ArrayConv COMPLETELY
       DArray ONLY dArray init abs ! rep !? empty? rep
       Nat ONLY nat 0 pred
       Seq ONLY seq #  :: <> ..
       SeqIndex ONLY !
       Array ONLY array ++ init # empty empty?
       Identity ONLY id
       Bitset ONLY set {} ..
       SeqReduce ONLY \
       Option ONLY nil? option

DEF asSeq(dA) == 
    IF dA empty? THEN <>
    ELSE (\\i, s. IF (dA !? i) nil? THEN s ELSE dA!i :: s FI, <>) \ 
             (0..pred(#(rep(dA))))(id)
    FI
             
DEF asDArray(s:seq) == init(#(s), \\x. s!x)  -- too slow

DEF asArray(dA) == 
    IF dA empty? THEN empty ELSE asArray(asSeq(dA)) FI             
DEF asDArray(a) == 
    IF a empty? THEN abs(a, {}, 0) ELSE abs(a, (0..pred(#(a)))(id), #(a)) FI

DEF `(f: data -> denotation)(dA) == `(f)(asArray(dA))
DEF `(f: data -> string)    (dA) == `(f)(asArray(dA))
