IMPLEMENTATION ArrayConv
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:05 $ ($Revision: 1.1.1.1 $)
--

IMPORT Seq[data] ONLY seq :: <> <>? ft #
       SeqConv[data] ONLY `
       ArrayReduce[data,seq[data]] ONLY /
       Array[data] ONLY array empty init upd
       Nat ONLY nat 0 succ

DEF asSeq(a) == (:: , <>)/a
DEF asArray(s) == IF s <>? THEN empty
		  ELSE asArray(init(#(s),ft(s)), 0, s)
		  FI

  FUN asArray: array ** nat ** seq -> array
  DEF asArray(a, _, <>) == a
  DEF asArray(a, n, f :: r) == asArray(upd(n, f, a), succ(n), r)

DEF `(f: data-> denotation)(a) == `("[", ":", "]")(f)(asSeq(a))
DEF `(f: data-> string    )(a) == `("[", ":", "]")(f)(asSeq(a))
