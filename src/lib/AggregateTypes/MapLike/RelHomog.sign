/* %Some functions special to @emph{homogeneous} relations, that is,
    relations with equal domain and codomain. This structure contains some
    closure functions (reflexive, symmetric, transitive).
    
    Parameter contains additional functions to compute data for new elements.
*/

SIGNATURE RelHomog[dom, <, data, gen, ~, ++]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

-- %$Parameter$
SORT dom data
FUN < : dom ** dom -> bool

-- %generate new associated data
FUN gen: dom ** dom -> data
-- %invert associated data (@code{gen(c, d) = ~(gen(d, c))})
FUN ~ : data -> data
-- %combine associated data (@code{gen(c, m) ++ gen(m, d) = gen(c, d)})
FUN ++ : data ** data -> data

-- %$Imports$
IMPORT Rel[dom, <, dom, <, data] ONLY rel
       Set[dom, <] ONLY set
       Nat ONLY nat

-- %$Special relations$

FUN id: set -> rel

-- %$Iterating Relations$

FUN iter ^ : rel ** nat -> rel

-- %$Symmetry$

FUN symmetric? : rel -> bool
FUN symClosure : rel -> rel

-- %$Reflexivity$

FUN reflexive? : rel -> bool
FUN refClosure : rel -> rel

-- %$Transitivity$

FUN transitive? : rel -> bool
FUN + transClosure : rel -> rel

FUN * refTransClosure: rel -> rel
FUN RSTClosure: rel -> rel
