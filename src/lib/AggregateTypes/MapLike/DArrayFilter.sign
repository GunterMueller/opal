SIGNATURE DArrayFilter[data]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)
--

-- Parameter
SORT data

IMPORT DArray[data] ONLY dArray

--  %@code{P | [e0,e1,...,en] == [e_i0, e_i1, ..., e_in] with P(e_ij)}
FUN | : (data -> bool) ** dArray -> dArray

--  %informally:@code{partition(P, M) = (P |M, ~P |M)}
FUN partition : (data -> bool) ** dArray -> dArray ** dArray

/* %@code{take (p, s1) = s2}: take all components of s1 (from left to
   right) fulfilling predicate @code{p} just upto the first component,
   which does not fulfill @code{p}. */
FUN take 	: (data -> bool) ** dArray -> dArray

/* %@code{drop (p, s1) = s2}: drop all components of @code{s1} (from
   left to right) fulfilling predicate @code{p} just upto the first
   component, which does not fulfill @code{p}. */
FUN drop	: (data -> bool) ** dArray -> dArray	
		
/* %@code{split (p, s) = (take (p,s), drop (p, s))}: split @code{s}
   before the first component (operating from left to right) which
   does not fulfill predicate @code{p}. */
FUN split	: (data -> bool) ** dArray -> dArray ** dArray	


