IMPLEMENTATION ComCompose[first,second]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT 	Com	COMPLETELY
	Seq	COMPLETELY
        CAST	COMPLETELY

DEF Com  ; Cont == cast(Com) sequenceCompose %(mkContCom(Cont))

DEF Com1 ; Com2 == cast(Com1) sequenceCompose %(contCom(\\ _ . Com2))

DEF Com  & Cont == cast(Com) sequenceCompose 
			%(contCom(\\Ans. IF okay?(Ans) THEN Cont(cast(data(Ans)))
					               ELSE yield(Ans) FI))


DEF Com1 & Com2 == cast(Com1) sequenceCompose 
			%(contCom(\\Ans. IF okay?(Ans) THEN Com2
					               ELSE yield(Ans) FI))

FUN mkContCom : (ans[first] -> com[second]) -> contCom[second] 
/$ handcoded [mkContCom] $/
