IMPLEMENTATION Env
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)
-- access to the program arguments and environment variables

IMPORT 	Nat    		COMPLETELY
	Denotation	COMPLETELY
	Com		COMPLETELY
	ComCompose 	ONLY &
	Seq		ONLY seq <> ::
	EQUALITY	ONLY equal
	Void		ONLY void
	
DEF argCount == call(xargCount)
    FUN xargCount : void -> ans[nat]

DEF arg(n)  == call(xarg(n))
    FUN xarg : nat -> void -> ans[denotation]

DEF noSuchArg?(Ans) == Ans equal noSuchArg
FUN noSuchArg : ans[denotation]
DEF noSuchArg == fail("no such argument")

DEF args == argCount & (\\n.getNextArg(<>,n))

FUN getNextArg : seq[denotation] ** nat -> com[seq[denotation]]
DEF getNextArg(as,0) == yield(okay(as))
DEF getNextArg(as,succ(i)) == arg(i) & (\\a.getNextArg(a::as,i))


DEF env(d)  == call(xenv(d))
    FUN xenv : denotation -> void -> ans[denotation]

/$ handcoded [xargCount, xarg, xenv] $/

DEF noSuchEnvVar?(Ans) == Ans equal noSuchEnvVar
FUN noSuchEnvVar : ans[denotation]
DEF noSuchEnvVar == fail("no such environment variable")
