IMPLEMENTATION ProcessArgs
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1999-10-06 15:08:53 $ ($Revision: 1.2 $)


IMPORT  Nat             COMPLETELY
        Denotation      COMPLETELY
        Com             COMPLETELY
        ComCompose      COMPLETELY
        Seq             COMPLETELY
        SeqIndex 	COMPLETELY
        EQUALITY        COMPLETELY
        Void            COMPLETELY

-- %$Arguments$

DEF argCount == 
    args 		& (\\Args. 
    succeed(#(Args))
    )

DEF arg(N) ==
    args 		& (\\Args.
    IF N < #(Args) THEN
    	succeed(Args ! N)
    ELSE
    	yield(noSuchArg)
    FI
    )

FUN noSuchArg : ans[denotation]
DEF noSuchArg == fail("no such argument")

DEF noSuchArg?(Ans) == equal(Ans, noSuchArg)

DEF shift(N) == 
    args		& (\\Args.
    setArgs(drop(N, Args))
    )


DEF args		== call(cArgs)
DEF setArgs(Args)	== call(cSetArgs(Args))

FUN cArgs 		: void	-> ans[seq[denotation]]
FUN cSetArgs 		: seq[denotation] -> void -> ans[void]

/$ handcoded [cArgs,cSetArgs] $/


-- %$Environment$

DEF env(Var)  		== call(cEnv(Var))
DEF setEnv(Var, Val) 	== call(cPutEnv(Var ++ "=" ++ Val))

DEF noSuchEnvVar?(Ans) == Ans equal noSuchEnvVar
FUN noSuchEnvVar : ans[denotation]
DEF noSuchEnvVar == fail("no such environment variable")


FUN cEnv 		: denotation -> void -> ans[denotation]
FUN cPutEnv 		: denotation -> void -> ans[void]

/$ handcoded [cEnv,cPutEnv] $/
