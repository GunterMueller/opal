IMPLEMENTATION UserAndGroupConv
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:20 $ ($Revision: 1.1.1.1 $)
   /$ handcoded $/

IMPORT
  Char                ONLY char
  PrintableChar       ONLY comma
  String              ONLY string empty :: ! ++
  StringConv          ONLY `
  StringFormat        COMPLETELY
  BTUnion             COMPLETELY
  Seq                 ONLY seq <> ::
  Set                 ONLY set
  SetConv             ONLY asSeq
  UserAndGroup        COMPLETELY
  

-- EXPORTED FUNCTIONS --

-- FUN ` : userid -> denotation
DEF UId ` == hc_convuserid(UId)

-- FUN ` : user -> denotation
DEF User ` == `( "%d::%d:%d::%d:%d" format
                 ( userName(User) u `(userId(User)) u `(iGroupId(User)) u
                   homeDir(User) u u(shell(User))
               ) )

-- FUN ` : groupid -> denotation
DEF GId ` == hc_convgroupid(GId)

-- FUN ` : group -> denotation
DEF Group ` == `( "%d::%d:%d" format
                  ( groupName(Group) u `(groupId(Group)) u
                    u(`(groupMembers(Group)))
                ) )

-- INTERNAL FUNCTIONS --

FUN hc_convuserid : userid -> denotation
-- DEF hc_convuserid(UId) == handcoded

FUN hc_convgroupid : groupid -> denotation
-- DEF hc_convgroupid(GId) == handcoded

FUN ` : set[denotation,<] -> denotation
DEF Members ` == `(`(Members asSeq))

FUN ` : seq[denotation] -> string
DEF <> ` == empty
DEF (Member :: <>) ` == Member !
DEF (Member :: Members) ` == !(Member) ++ (comma :: `(Members))