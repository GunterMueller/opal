IMPLEMENTATION ProcessComInterrupt
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)

IMPORT	Com		COMPLETELY
	ComCompose	COMPLETELY
	EQUALITY	COMPLETELY
	Void		ONLY void

IMPORT	ProcessInterrupt COMPLETELY

DEF breakOnInterrupt(Com) ==
    call(cEnableBreak)		; (\\ _ .
    Com				; (\\ Ans .
    call(cDisableBreak)		; (\\ _ .
    yield(Ans)
    )))

FUN interrupted	: ans[data] 
DEF interrupted == fail("interrupted")

DEF interrupted?(Ans) == equal(Ans, interrupted)

FUN cEnableBreak cDisableBreak : void -> ans[void]

/$ handcoded [cEnableBreak, cDisableBreak] $/
