IMPLEMENTATION FileName
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)
-- %- version 1.1 Tue Sep  3 11:29:46 1996

IMPORT	String		COMPLETELY
	StringFilter	COMPLETELY
	StringConv	COMPLETELY
	Char		COMPLETELY
	Denotation	COMPLETELY
	Nat		COMPLETELY

DEF baseName(S) ==
    `(revert(take(\\C.C |= !("/"),revert(!(S)))))

DEF baseName(S, Suffix) ==
    LET S1 == baseName(S)
    IN
    IF `(revert(!(Suffix))) <| `(revert(!(S1))) THEN
        slice(S1, 0, (#(S1) - #(Suffix)) - 1)
    ELSE S FI

DEF dirName(S) ==
    normPath(`(revert(drop(\\C.C |= !("/"),revert(!(S))))))

DEF dirName1(Path) == 
    LET Dir == dirName(Path)
    IN
    IF #(Dir) = 0 THEN "."
    OTHERWISE
    IF Dir ! #(Dir)-1 = !("/") THEN slice(Dir, 0, #(Dir)-2)
                               ELSE Dir FI
                      

DEF defaultPath(Path, File) ==
    IF "/" <| File THEN File ELSE normPath(Path) ++ File FI

DEF normPath(Path) ==
    IF Path = "." or Path = "" THEN ""
    OTHERWISE IF Path ! pred(#(Path)) = !("/") THEN Path
					       ELSE Path ++ "/" FI

DEF splitSuffix(Name, Delim) ==
    LET (Suffix, Prefix) == split(\\C. C |= !(Delim), revert(!(Name)))
    IN
    IF <>?(Prefix) THEN
	(Name, "")
    ELSE
	(`(revert(rt(Prefix))), `(revert(Suffix)))
    FI      
