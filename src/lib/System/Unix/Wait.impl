IMPLEMENTATION Wait
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:19 $ ($Revision: 1.1.1.1 $)
-- waiting for child processes
   /$ handcoded $/

IMPORT
  Void                ONLY void
  Com                 ONLY com ans call

  Signal	      ONLY signal:SORT  -- enforce dependency by dummy import
			  

-- EXPORTED TYPES --

DATA childstat == exited   (status: procstat)
                  signalled(signal: signal)
                  signalledUnknown
                  stopped  (signal: signal)
                  stoppedUnknown


-- INTERNAL TYPES --


-- EXPORTED FUNCTIONS --

-- FUN wait : com[pair[process,childstat]]
DEF wait == call( hc_waitpid_any )

-- FUN wait : com[option[pair[process,childstat]]]
DEF wait == call( hc_waitpid_any_nb )

-- FUN wait : process -> com[pair[process,childstat]]
DEF wait(Proc) == call( hc_waitpid(Proc) )

-- FUN wait : process -> com[option[pair[process,childstat]]]
DEF wait(Proc) == call( hc_waitpid_nb(Proc) )

-- FUN waitGrp : com[pair[process,childstat]]
DEF waitGrp == call( hc_waitgrp_any )

-- FUN waitGrp : com[option[pair[process,childstat]]]
DEF waitGrp == call( hc_waitgrp_any_nb )

-- FUN waitGrp : process -> com[pair[process,childstat]]
DEF waitGrp(PGrp) == call( hc_waitgrp(PGrp) )

-- FUN waitGrp : process -> com[option[pair[process,childstat]]]
DEF waitGrp(PGrp) == call( hc_waitgrp_nb(PGrp) )


-- INTERNAL FUNCTIONS --

FUN hc_waitpid_any : void -> ans[pair[process,childstat]]
-- DEF hc_waitpid_any(_) == handcoded

FUN hc_waitpid_any_nb : void -> ans[option[pair[process,childstat]]]
-- DEF hc_waitpid_any_nb(_) == handcoded

FUN hc_waitpid : process -> void -> ans[pair[process,childstat]]
-- DEF hc_waitpid(Proc)(_) == handcoded

FUN hc_waitpid_nb : process -> void -> ans[option[pair[process,childstat]]]
-- DEF hc_waitpid_nb(Proc)(_) == handcoded

FUN hc_waitgrp_any : void -> ans[pair[process,childstat]]
-- DEF hc_waitgrp_any(_) == handcoded

FUN hc_waitgrp_any_nb : void -> ans[option[pair[process,childstat]]]
-- DEF hc_waitgrp_any_nb(_) == handcoded

FUN hc_waitgrp : process -> void -> ans[pair[process,childstat]]
-- DEF hc_waitgrp(PGrp)(_) == handcoded

FUN hc_waitgrp_nb : process -> void -> ans[option[pair[process,childstat]]]
-- DEF hc_waitgrp_nb(PGrp)(_) == handcoded
