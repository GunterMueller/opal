/* % 
The structure @code{FileName} defines functions on file names
which are missing in the OPAL library.
*/

SIGNATURE FileName
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)
-- version 1.1 Tue Sep  3 11:29:46 1996

/* % @code{baseName(Name)} returns the part of a file name following
the last slash. @code{baseName(Name, Suffix)} additionally removes
any suffix matching @code{Suffix}.

@code{dirName(Name)} returns the part of a file name up to and including 
the last slash, or an empty denotation if their is no slash.  The result of 
@code{dirName} is a `normalized' path, in that it can be used as prefix
for other file names. @code{dirName1} returns a @code{dirName}
where a trailing slash is removed.

@code{normPath(Name)} normalizes a file name such that it 
can be used as a prefix for concatenation: if @code{Name} isn't empty and 
doesn't end with a slash, a slash will be appended. 

@code{defaultPath(Path, File)} preprends @code{Path} to @code{File} 
if last one isn't absolute (doesn't start with a slash).  

@code{splitSuffix(Name, Delim)} splits a file name into a prefix 
preceeding the last occurence of @code{Delim} and a suffix following
(not including) this occurence. A typical use is as in 
@code{splitSuffix(Name, ".")} to split-up the last dotted suffix. 
@code{Delim} must be a denotation of length one. If @code{Delim}
doesn't occure in @code{Name}, then the returned prefix will
be the input name, and the suffix will be empty.
*/

FUN baseName	: denotation			-> denotation
FUN baseName	: denotation ** denotation	-> denotation

FUN dirName	: denotation			-> denotation
FUN dirName1	: denotation			-> denotation

FUN normPath	: denotation			-> denotation
FUN defaultPath	: denotation ** denotation 	-> denotation

FUN splitSuffix	: denotation ** denotation 	-> denotation ** denotation
