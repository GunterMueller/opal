IMPLEMENTATION RUNTIMEENV

IMPORT	Com		COMPLETELY
	Nat		ONLY	nat
	Pair		COMPLETELY
	RUNTIME		ONLY	obj
	Seq		COMPLETELY

/$ handcoded [env:SORT, repr:SORT] $/
	
DEF exec(Obj,E,H) == call(cExec(Obj, E, H))
DEF topExec(Obj,E,H) == call(cTopExec(Obj, E, H))

DEF apply(Obj, Dim, <>, E, H) == (%(Obj), E)
DEF apply(Obj, Dim, Args, E, H) == internapply(Obj, Dim, Args, E, H)

FUN cExec : obj ** env ** handler -> void -> ans[pair[ans[obj],env]]
FUN cTopExec : obj ** env ** handler -> void -> ans[pair[ans[nat],env]]

DATA funRepr ==
	coded(	symbol:	denotation
	)
	dyn(	rep:	repr
	)

FUN internapply: obj ** nat ** seq[obj] ** env ** handler -> seq[obj] ** env

DATA handler ==
    default
    special( func : env ** denotation -> env )

/$ handcoded [cTopExec, cExec, closure, internapply, contents, rank] $/

