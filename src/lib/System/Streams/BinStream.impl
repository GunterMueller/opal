IMPLEMENTATION BinStream[data]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:18 $ ($Revision: 1.1.1.1 $)
-- reading/writing (nearly) arbitrary data objects to streams


IMPORT 	Stream	ONLY rep abs
	File	COMPLETELY
	BinFile COMPLETELY
	ComCompose ONLY &
	Com	ONLY com ans:SORT yield okay succeed

DEF openBin(s) == open(s,"rb") & (\\f.yield(okay(abs(f))))
DEF createBin(s) == open(s,"wb") & (\\f.yield(okay(abs(f))))
DEF appendBin(s) == open(s,"ab") & (\\f.yield(okay(abs(f))))

DEF write(o,tag,d) == write(rep(o),tag,d)
DEF store(fn, tag, d) == open(fn, "wb") & (\\ f.
                         write(f, tag, d) & (\\ _ .
                         close(f)))

DEF read(i,tag) == read(rep(i),tag)
DEF load(fn, tag) == open(fn, "rb") & (\\ f.
                     read(f, tag) & (\\ res.
                     close(f) & (\\ _ .
                     succeed(res))))