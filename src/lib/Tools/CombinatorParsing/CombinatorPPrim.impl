IMPLEMENTATION CombinatorPPrim
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date: 2012-10-02 14:17:54 +0200 (Tue, 02 Oct 2012) $ ($Revision: 838 $)

IMPORT CombinatorP    COMPLETELY
       CombinatorPCat COMPLETELY

IMPORT Either COMPLETELY
       Option COMPLETELY
       Seq    COMPLETELY
       Void   COMPLETELY

DEF peek(pred) == SUSPEND(
    parser(\\ts,st.
      IF ts <>? THEN (left(nil), ts, st)
      IF ts ::? THEN IF pred(ft(ts)) THEN (right(nil), ts, st)
                     ELSE (left(nil), ts, st) FI
      FI))

DEF skip == SUSPEND(
    parser(\\ts,st.
      IF ts <>? THEN (left(nil), ts, st)
      IF ts ::? THEN (right(nil), rt(ts), st)
      FI))

DEF skip(pred) == peek(pred) >> skip

DEF shift == SUSPEND(
    parser(\\ts,st.
      IF ts <>? THEN (left(nil), ts, st)
      IF ts ::? THEN (right(ft(ts)), rt(ts), st)
      FI))

DEF shift(pred) == peek(pred) >> shift

DEF eof == SUSPEND(
    parser(\\ts,st.
      IF ts <>? THEN (right(nil), ts, st)
      IF ts ::? THEN (left(nil), ts, st)
      FI))

DEF get == SUSPEND(parser(\\ts,st. (right(st),ts,st)))

DEF set(st1) == SUSPEND(parser(\\ts,st. (right(nil),ts,st1)))


-- %@ignore
-- Local variables:
-- coding: latin-1-unix
-- mode: opal
-- End:
-- %@end ignore
