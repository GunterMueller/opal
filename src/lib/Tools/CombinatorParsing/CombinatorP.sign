/* %
Basic types and functions for combinator parsing
*/
SIGNATURE CombinatorP[a,token,state,error]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date: 2012-10-02 14:17:54 +0200 (Tue, 02 Oct 2012) $ ($Revision: 838 $)

IMPORT Either ONLY either[option[error],a]
       Option ONLY option[error]
       Seq    ONLY seq[token]
       Void   ONLY void

SORT a token state error

TYPE parser ==
     parser(parser: seq[token] ** state
                 -> either[option[error],a] ** seq[token] ** state)

FUN fail: error -> LAZY[parser]
FUN eps:  a     -> LAZY[parser]

FUN run: seq[token] ** state ** LAZY[parser] -> either[option[error],a]


-- %@ignore
-- Local variables:
-- coding: latin-1-unix
-- mode: opal
-- End:
-- %@end ignore
