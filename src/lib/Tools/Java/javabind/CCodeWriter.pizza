/** Class representing writers for C code. 
  * (perhaps reusable for other languages)
  * @author Wolfgang Grieskamp
  * @version $Id: CCodeWriter.pizza,v 1.1 1999-10-16 17:32:05 wg Exp $
  *
  */ 

package opal.javabind;
import java.io.*;


public class CCodeWriter extends CodeWriter {
  
  /** Construct a C code writer which writes to output stream. */
  public CCodeWriter (OutputStream s){
    super(s);
  }

  /** Construct a C code writer which writes to writer. */
  public CCodeWriter(Writer w){
    super(w);
  }

  public void stm(String s){
    line();
    words(s); word(";");
  }

  public String declare(String type, String var){
    return type + " " + var;
  }

  public String declare(String type, String var, int dim){
    return type + " " + var + "[" + Integer.toString(dim) + "]";
  }

  public String assign(String lval, String val){
    return lval + " = " + val;
  }

  public String call(String funname){
    return funname + "()";
  }

  public String call(String funname, String arg1){
    return funname + "(" + arg1 + ")";
  }

  public String call(String funname, String arg1, String arg2){
    return funname + "(" + arg1 + "," + arg2 + ")";
  }

  public String call(String funname, String arg1, String arg2,
		     String arg3){
    return funname + "(" + arg1 + "," + arg2 + "," + arg3 + ")";
  }

  public String call(String funname, String arg1, String arg2,
		     String arg3, String arg4){
    return funname + "(" + arg1 + "," + arg2 + "," + arg3 + "," + arg4 + ")";
  }

  public String call(String funname, String arg1, String arg2,
		     String arg3, String arg4, String arg5){
    return funname + "(" + arg1 + "," + arg2 + "," + arg3 + "," + arg4 + 
                                "," + arg5 + ")";
  }

  public String quoted(String s){
    return "\"" + s + "\"";
  }

}
