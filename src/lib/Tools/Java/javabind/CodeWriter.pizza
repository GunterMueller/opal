/** Class representing writers for program code. 
  *
  * @author Wolfgang Grieskamp
  * @version $Id: CodeWriter.pizza,v 1.1 1999-10-16 17:32:05 wg Exp $
  */

package opal.javabind;
import java.lang.*;
import java.io.*;

public class CodeWriter extends PrintWriter {

  private final int columns = 78;
  private final int indentSpace = 1;
  private final int wrapSpace = 2;

  private int indent = 0;
  private int space  = columns;

  protected Writer writer = null;

  /** Construct a code writer which writes to output stream. */
  public CodeWriter (OutputStream s){
    super(s);
  }

  /** Construct a code writer which writes to writer. */
  public CodeWriter(Writer w){
    super(w);
    writer = w;
  }

  /** Close code writer. */
  public void close(){
    super.close();
  }

  /** Output a word. */
  public void word(String s){
    int n = s.length();
    if (n > space){
    	println();
	spaces(indent);
	spaces(wrapSpace);
     	print(s);
	space = columns - indent - wrapSpace - n;
    } else {
        print(s);
	space -= n;
     }
 }

  /** Output a sequence of words, separated by space. */
  public void words(String s){
    int j = s.lastIndexOf(" "); 
    if (j > 0){
      words(s.substring(0,j));
      word(s.substring(j));
    } else {
      word(s);
    }
  }
    
  /** Output a line. */
  public void line(String s){
    words(s); line();
  }

  /** Output a line. */
  public void line(){
    println();
    spaces(indent);
    space = columns - indent;
  }

  /** Output a line, then a word. */
  public void nextline(String s){
    line(); words(s);
  }

  /** Begin a block structure. */
  public void begBlock(String prefix){
    line();
    indent += indentSpace;
    word(prefix); 
  }

  public void beg(int indent){
  }


  /** End a block structure. */
  public void endBlock(String postfix){
    word(postfix);
    indent -= indentSpace;
    line();
  }

  public void end(){
  }

  private void spaces(int ind){
    while (ind > 0){
      print(" ");
      ind--;
    }
  }

  /** Ouput a comment (uses C-like block comments). */
  public void comment(String s) {
    word("/* "); word(s); line (" */"); 
  }


}
