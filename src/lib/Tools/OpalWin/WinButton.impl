
IMPLEMENTATION WinButton
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT  Seq             COMPLETELY
        SeqMap          ONLY *
        Set             COMPLETELY
        String          ONLY <>
        Denotation      ONLY =
        Com             COMPLETELY
        ComCompose      COMPLETELY
        ComAgent        COMPLETELY

IMPORT  WinInternal     COMPLETELY
        WinTclTk        COMPLETELY
        WinConfig       COMPLETELY
        WinImage        COMPLETELY



DEF button == basic(\\ _, Wid. act("button %s" <- Wid))

DEF button(txt, cmd) == button with text(txt) ++ bind(cmd)


DEF checkButton == 
    basic(\\ _, Wid. 
        act("checkbutton %s -onvalue 1 -offvalue 0 -variable %s" <- Wid + callback(Wid))
    )

DEF radioButton == 
    basic(\\ _, Wid. 
        act("radiobutton %s -value 1 -variable %s" <- Wid + callback(Wid))
    )


DEF bind(Com) ==
    config(\\Win, Wid, Mod .
        define(agent(Com) & succeed(<>))                        & (\\ Callback .
        (   IF widget?(Mod) THEN
                eval("%s cget -command" <- Wid)
            IF canvas?(Mod) THEN
                eval("%s itemcget %s -command" <- Wid + name(tag(Mod)))
            IF text?(Mod) THEN
                eval("%s tag cget %s -command" <- Wid + name(tag(Mod)))
            IF menu?(Mod) THEN
                eval("%s entrycget %n -command" <- Wid + item(Mod))
            ELSE
                succeed(<>)
            FI
        )                                                       & (\\ OldCom .
        doConfig(Win, Wid, Mod,
                 "-command {%s;%s}" <- OldCom + Callback)       & (\\ _ .
        registerDispose(Win, Wid, freeCallback(Callback))
        )))
    )

DEF selectIndicator(true) ==
    config("-indicatoron 1")

DEF selectIndicator(false) ==
    config("-indicatoron 0")

DEF selectImage(Image) ==
    config("-selectimage %s" <- name(Image))

DEF selectColor(Color) ==
    config("-selectcolor %s" <- name(Color))

