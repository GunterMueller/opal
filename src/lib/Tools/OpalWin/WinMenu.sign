
/* % 
This structure provides menus.
*/

SIGNATURE WinMenu
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

IMPORT	String		ONLY string
	Com[window]	ONLY com

IMPORT	WinConfig	ONLY point:SORT
	WinInternal	ONLY view:SORT config:SORT window:SORT wconfig:SORT


-- %$Menu Windows$

/* %
A menu is a special kind of window which displays a special set
of views, called menu items. A menu is created by one of the
functions below:
*/

FUN menu  : items 					-> com[window]
FUN menu  : wconfig ** items 				-> com[window]

/* %
In contrast to windows, a newly created menu is initially in the
state withdrawn. To display the menu, the command @code{Wd set state(_)}
shouldn't be used; instead, use the @code{post} and @code{unpost}
configurations below. The variant @code{post(Pt)} is a shortcut
for posting the menu window and setting its position:
*/

FUN post   : wconfig
FUN post   : point 		-> wconfig
FUN unpost : wconfig

/* %
The following window configuration specifies, that the menu
window should support a tear-off entry at the top:
*/

FUN tearOff : bool		-> wconfig



-- %$Menu Items$

/* %
Menu items are quite similar to views: basic items such as
buttons are configured and combined into compound using the functions
@code{with} and @code{++}:
*/

SORT items
FUN  ++		: items ** items	-> items
FUN  with	: items ** config	-> items


-- %$$Basic Items$

/* %
The following basic item types are provided:
*/

FUN button		: items
FUN checkButton		: items
FUN radioButton		: items
FUN separator		: items
FUN cascade		: items



-- %$$General Configuration$

/* %
Menu items in generally provided the following configurations:

@table @emph
@item Graphical Appearence
@example
activeBackground activeForeground background bitmap
font foreground image selectColor selectImage state underline
@end example
@item Dynamic Behaviour 
@example
bind enable regulate select sync
@end example
@end table

The @code{selectColor}, @code{selectImage} and @code{select}
configurations are only available for check-buttons and radio-buttons.
The @code{bind} configurations are only available for button items.
*/


-- %$$Label Configurations$

/* %
The @code{label} configuration specifies the text to be displayed
in an item. It is not available for a separator.
*/

FUN label	: denotation	-> config
FUN label	: string	-> config



-- %$$Accelerator Configurations$

/* %
The @code{accelerator} configurations specify a string to be 
displayed at the right side of a menu item, which is also bound
as keyboard shortcut to invoke the item. Not available for separators.
*/

FUN accelerator	: denotation	-> config
FUN accelerator	: string	-> config


-- %$$Submenu Configurations$

/* %
The @code{submenu} configurations specify the submenu to be bound
to a cascade item. Only available for cascade items.
*/

FUN submenu	: items			-> config
FUN submenu	: wconfig ** items	-> config




-- %$Menu Button Views$

/* %
A menu-button view displays a click-button with a hard-wired responsive 
behavior to display the given menu when it is invoked.
*/

FUN menuButton	: items	 				  -> view
FUN menuButton	: wconfig ** items 			  -> view



/* %
@page
*/
