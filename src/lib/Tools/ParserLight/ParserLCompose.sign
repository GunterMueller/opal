SIGNATURE ParserLCompose[data1, data2]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:24 $ ($Revision: 1.1.1.1 $)

-- %$Parameter$
SORT data1 data2

-- %$Imports$
IMPORT ParserL[data1] ONLY parser
       ParserL[data2] ONLY parser
       Option[data1] ONLY option
       ParserL[void] ONLY parser
       Void ONLY void

-- %$Monadic functions$
/* %in @code{P1 & fP2} fP2 is called if P1 succeeds. If P1 fails,
the result is failure */
FUN & : parser[data1] ** (data1 -> parser[data2]) -> parser[data2]

/* %in @code{P1 ; fP2} fP2 is always called and determines the result. */
FUN ; : parser[data1] ** (option[data1] -> parser[data2]) -> parser[data2]

-- %variants call a parser[void] before calling the second real parser

/* %in @code{P1 & (SEP, fP2)} fP2 is called if P1 and SEP 
both succeed. If P1 fails or SEP fails, the result is failure */
FUN & : parser[data1] ** parser[void] ** 
        (data1 -> parser[data2]) -> parser[data2]
/* %in @code{P1 ; (SEP, fP2)} fP2 is called if P1 fails, or P1 and SEP 
both succeed. If P1 succeeds and SEP fails, the result is failure */
FUN ; : parser[data1] ** parser[void] ** 
        (option[data1] -> parser[data2]) -> parser[data2]

