/* %
The structure @code{FmtSeq} provides functionals for
formattings sequences based on the textual formatter 
(@ref{@Overview{Fmt}}).
*/

SIGNATURE FmtSeq[data]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/doc/LICENSE or
      http://projects.uebb.tu-berlin.de/opal/trac/wiki/License for details
*/
-- % $Date$ ($Revision$)
-- version 1.0 Sat Aug 24 17:20:03 1996

SORT data


IMPORT	Seq[data]	ONLY seq
	Fmt		ONLY fmt

/* %
The expression @code{list(Formatter, Open, Sep, Close, Seq)} produces
a formatter which lists the members of @code{Seq} using @code{Formatter},
separating them by @code{Sep} and enclosing them by @code{Open} and 
@code{Close}. 
*/

FUN list : (data -> fmt) ** fmt ** fmt ** fmt ** seq[data] -> fmt

/* %
@code{list?} is a version of @code{list} which produces
@code{none} if the sequence is empty.  @code{list(Formatter, Sep, List)} is
a version which sets the enclosers to @code{none}. 
*/

FUN list? : (data -> fmt) ** fmt ** fmt ** fmt ** seq[data] -> fmt
FUN list  : (data -> fmt) ** fmt ** seq[data] -> fmt


/* % This is needed by generated code from @sc{ordinatrice verte} and identical
to @code{list(f, lit("<"),lit(",");spc(1),lit(">"),s)}. */

FUN fmtSeq: (data -> fmt) -> seq[data] -> fmt
