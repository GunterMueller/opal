IMPLEMENTATION SetEntry
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:27 $ ($Revision: 1.1.1.1 $)

IMPORT Com ONLY com
       ComCompose ONLY &
       ComMap ONLY *
       SeqEntry[data, parse, print] COMPLETELY
       Seq ONLY seq
       Set ONLY set
       SetConv ONLY asSet asSeq
       Pair ONLY pair 2nd &

DATA setEntry == abs(rep: seqEntry)

DEF setEntry == abs * seqEntry
DEF setEntry(w, h) == abs * seqEntry(w, h)
DEF setEntry(c) == abs * seqEntry(c)

DEF defaultDim == defaultDim'SeqEntry
DEF defaultConfig == defaultConfig'SeqEntry

DEF view(sE) == view(rep(sE))
DEF regulator(sE) == regulator(rep(sE))

DEF set(sE, s) == set(rep(sE), asSeq(s))
DEF get(sE) == asSet * get(rep(sE))
DEF getSelection(sE) == asSet * getSelection(rep(sE))
DEF get(sE, pt) == 2nd * get(rep(sE), pt)

DEF upd(sE, f) == get(sE) & (\\st. set(sE, f(st)))

DEF bind(sE, ev, cmd: setEntry ** eventInfo -> com[void]) == 
    bind(rep(sE), ev, \\sqE, eI. cmd(abs(sqE), eI))

DEF bind(sE, ev, cmd: setEntry ** eventInfo ** set[data,<] -> com[void]) ==
    bind(rep(sE), ev, \\sqE, eI, sq. cmd(abs(sqE), eI, asSet(sq)))

DEF sync(sE, cmd) == sync(rep(sE), \\sq. cmd(asSet(sq)))
