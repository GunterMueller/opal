IMPLEMENTATION MONITOR
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date: 1998-06-16 16:00:27 $ ($Revision: 1.1.1.1 $)

IMPORT Com ONLY com EXEC
       ComAction ONLY done
       ComCompose ONLY &
       WinWindow ONLY window wconfig titleName
       WinText ONLY text
       WinTextEditor COMPLETELY
       WinScroller COMPLETELY
       WinScrollbar COMPLETELY
       WinEmitter COMPLETELY
       WinConfig COMPLETELY
       WinView COMPLETELY
       ComAgent ONLY agent
       Nat ONLY nat 0 succ 10 4 20 25 *
       NatConv ONLY `
       String ONLY string !
       StringConv ONLY `
       Denotation ONLY ++


DEF genMonitor(b) ==
    IF b THEN
    textEditor & (\\ monitorTE.
    window(titleName("MONITOR"), 
            (text with edit(monitorTE) ++ unitWidth(4 * 20) ++ 
                        unitHeight(25) ++
                        scroll(monitorSC, vertical))
            <|<
            (scrollbar with scrollControl(monitorSC))
           ) & ( \\ _ .
    agent(monitorCTRL(monitorTE, 0)) & ( \\ _ .
    done
    )))
    ELSE
      done
    FI

-- FUN monitorTE: textEditor
-- DEF monitorTE == EXEC(textEditor)  -- fuehrt zu segmentation fault

FUN monitorSC: scroller
DEF monitorSC == EXEC(scroller)

FUN monitorEM: emitter[denotation]
DEF monitorEM == EXEC(emitter)

DEF monitor(d) == emit(monitorEM, d)
DEF monitor(d) == emit(monitorEM, d())

FUN monitorCTRL: textEditor ** nat -> com[void]
DEF monitorCTRL(monitorTE, no) ==
    await(monitorEM) & (\\txt.
    LET t == "[" ++ (no`) ++ "]" ++ txt ++ "\n"
    IN
    monitorTE insert(t!, end) & ( \\ _ .
    monitorTE see end & (\\ _ .
    monitorCTRL(monitorTE, succ(no))
    )))
