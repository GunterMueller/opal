/* %A distributor is a gate similar to an
    emitter (@pxref{@Overview{WinEmitter}}): every time it is triggered, it
    throws out the data. In contrast to an emitter, agents which want to
    listen, must @emph{register}. Data is
    distributed to all agents who have registered.
*/
SIGNATURE Distributor[data]
/* %- Copyright 1989 - 1998 by the Opal Group, TU Berlin. All rights reserved
      See OCSHOME/etc/LICENSE or 
      http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details
*/
-- % $Date$ ($Revision$)

-- %$Parameter$
SORT data

-- %$Imports$
IMPORT Void ONLY void
       Com[void] ONLY com
       Com[distOut] ONLY com
       Com[data] ONLY com
       Com[dist] ONLY com

-- %$Sort dist and constructors$
SORT dist

FUN dist: com[dist]

-- %$Input$
-- %Trigger distributor with value.
FUN emit: dist ** data -> com[void]

-- %$Output$
SORT distOut

-- %Register with distributor. 
FUN register: dist -> com[distOut]

-- %Wait until data is distributed.
FUN await: distOut -> com[data]
