IMPLEMENTATION TransHelp
-- %- $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/dosfop/tools/dosfop/trans/TransHelp.impl,v 1.1.1.1 1998-06-16 16:00:42 wg Exp $

IMPORT
  String        COMPLETELY       Char           COMPLETELY
  Seq           COMPLETELY       Denotation     COMPLETELY
  Nat           COMPLETELY

IMPORT
  MyString      COMPLETELY       TransType      COMPLETELY
  ConfigFun     COMPLETELY
       Option ONLY option nil avail
       StringConv ONLY `


-- %$Functions on Texinfo-Parts$
-- %----------------------------

DATA partType == chapter
                 section
                 subsection
                 subsubsection
                 subsubheading

FUN addDepth : partType -> partType
DEF addDepth(chapter)       == section
DEF addDepth(section)       == subsection
DEF addDepth(subsection)    == subsubsection
DEF addDepth(subsubsection) == subsubsection
DEF addDepth(subsubheading) == subsubheading

FUN partType2TexinfoString : partType -> string
DEF partType2TexinfoString(chapter)       == "@chapter "!
DEF partType2TexinfoString(section)       == "@section "!
DEF partType2TexinfoString(subsection)    == "@subsection "!
DEF partType2TexinfoString(subsubsection) == "@subsubsection "!
DEF partType2TexinfoString(subsubheading) == "@subsubheading "!

-- %$String Constants$
-- %------------------
/* %This code relies on having a variable @code{dfStarLine}
   defined. This is done in @file{dosfopPrelude.texi}.
   This variable should contain some horizontal rule for info files,
   and be empty else. */

DEF docuPrefix ==  texinfo( line("@BEGINDOC{}") )

/* % newlines are mandatory here, since texinfo insists on having
texinfo environments on separate lines */

DEF docuPrefixNoNewline == docuPrefix:outputElem

/* %-
DEF docuPrefixNoNewline ==
  texinfo( 
    conc(
      line("@ifinfo"),
      !("/") ++ init("73"!, "*"!) ++ !("/"), -- no newline!
      line("@end ifinfo")
    )
  )
*/

DEF docuSuffix == ensureLineBreak(texinfo(line("@ENDDOC{}")))

DEF docuPrefix(nil) == ensureLineBreak(texinfo(line("@BEGINDOC{}")))
DEF docuPrefix(avail(level)) ==
  ensureLineBreak(texinfo(line("@BEGINDOC" ++ (level`) ++ "{}")))

DEF docuPrefixNoNewline(l) == docuPrefix(l)

DEF docuSuffix(nil) == ensureLineBreak(texinfo(line("@ENDDOC{}")))

DEF docuSuffix(avail(level)) ==
  ensureLineBreak(texinfo(line("@ENDDOC" ++ (level`) ++ "{}")))

DEF overviewPrefix ==  ensureLineBreak(texinfo( line("@BEGINOVW{}") ))
DEF overviewSuffix ==  ensureLineBreak(texinfo( line("@ENDOVW{}" ) ))

-- %$Miscellaneous$
-- %---------------

/* %eigentlich sollte man newline entfernen und in den Applikationen
    ensureLineBreak einfuegen */
DEF optionalNewPage(config, name) ==
  IF newPages?(config, name) THEN line("\n@page") ELSE <> FI

DEF optionalNewPageSubsystem(config, name) ==
  IF newPagesSub?(config, name) THEN line("\n@page") ELSE <> FI

DEF optionalNewPage(config) ==
  IF newPages?(config) THEN line("\n@page") ELSE <> FI






  











