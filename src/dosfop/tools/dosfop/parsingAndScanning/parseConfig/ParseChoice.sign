/* %This module provides a generic function that simulated the choice operator
known from the application in context-free grammar notations. It enables a convenient
integration of syntactic check and abstract-syntax derivation. */
SIGNATURE ParseChoice
-- %- $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/dosfop/tools/dosfop/parsingAndScanning/parseConfig/ParseChoice.sign,v 1.2 1999-09-13 22:10:50 kd Exp $

IMPORT Seq[token] 	ONLY seq

IMPORT Config 		ONLY opt:SORT optSetting:SORT
       DError 		ONLY error:SORT
       TokenConfig 	ONLY token:SORT

/* %The initial four-element-tuple contains the results of a derivation attempt. The 
kind of derivation is very specific and contains @c{opt} and @c{optSetting} as 
abstract-syntax elements and a rest-token-sequence on success. Success is indicated
via the error parameter and leads to a copying of the parameter values to the 
result parameters (identity-function).

In case the first derivation attempt fails the subsequent derivation function
is called and tries to continue recognition based on the current token sequence. The
module @c{ParseConfig} serves as the best example of the funtion's application. */ 
FUN | : (opt ** optSetting ** seq[token] ** error) **
           ( () -> opt ** optSetting ** seq[token] ** error ) ->
              opt ** optSetting ** seq[token] ** error





