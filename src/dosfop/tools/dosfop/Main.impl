IMPLEMENTATION Main
-- $Id$

IMPORT 
  Nat           COMPLETELY      Seq             COMPLETELY
  Char          COMPLETELY      SeqMap          COMPLETELY
  ComCompose    COMPLETELY      ProcessArgs     COMPLETELY
  Com           COMPLETELY      Set             COMPLETELY
  String        COMPLETELY      Stream          COMPLETELY
  StringConv    COMPLETELY      Denotation      COMPLETELY 
  ComCheck      COMPLETELY

IMPORT
  SourceTab     COMPLETELY      ScanConfig       COMPLETELY
  Config        COMPLETELY      ParseConfig      COMPLETELY
  ConfigFun     COMPLETELY      MyComStream      COMPLETELY 
  DError        COMPLETELY
  Readsrc       ONLY processFiles 
  ReadConfig ONLY readConfig
       FileSystem COMPLETELY
       Time ONLY time < : time ** time -> bool
       MyComAction ONLY -!->
       BinStream COMPLETELY
       ConfigExt ONLY init

-- %A constant denoting the current @c{version} of the DOSFOP-tool:
FUN version : denotation
DEF version == "1.92g (18th March 1999)"

/* %The main-function @c{dosfopTranslator} realizes the following functionalities:
@enumerate
@item The current version of the DOSFOP-tool is written to @c{stdErr}.
@item The configuration-file, which has to be present in the @c{DOSFOP}-subdirectory
of the tool's execution directory, is read.
@item The textually represented configuration-file is scanned and parsed. On success,
@c{config} contains the internal representation of the configuration-database that
can be applied for later requests throughout the whole project.
@item On the basis of the internal representation of the configuration database
@c{processFiles} reads all source-code modules that belong to the project
specified in the @c{config}-database. The @c{topStructureName} provides initial
information on imports that induce the search for directly or transitively 
imported modules.
The function @c{processFiles} serves as an entry point for the subsequent
operations implemented by our DOSFOP-documentation-tool. Reference the 
documentation for @c{processFiles} for further details (Have a look at the 
used-function-table displayed after the function's implementation!).
@end enumerate

On error the specific @c{reason} for the failure is written to @c{stdErr} and terminated
with a @c{n}-character. This has to be done in order to flush the output for a client
that reads @c{stdErr} e.g. with a pipe-mechanism. The @c{exit}-code indicates
a the failure to the calling process. */

DEF dosfopTranslator ==
  check(\\x.x, 
  writeLine(stdErr, "This is DOSFOP-Version : " ++ version) & (\\ _ . 
  readConfig() & (\\ config. 
  init("DOSFOP/only") & ( \\ _ .
  processFiles(
                 topStructureName(config),
                 config
               ) & (\\ _ .
  exit(0) 
  ))))
  )

