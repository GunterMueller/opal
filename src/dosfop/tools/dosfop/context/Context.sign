SIGNATURE Context
-- %- $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/dosfop/tools/dosfop/context/Context.sign,v 1.1.1.1 1998-06-16 16:00:34 wg Exp $

IMPORT String                           ONLY string <
       Seq[indexEntry]             ONLY seq
       Seq[applContextEntry]            ONLY seq
       Seq[string]                      ONLY seq
       Map[nat,<,seq[indexEntry]]  ONLY map ! {}
       Map[nat,<,seq[applContextEntry]] ONLY map ! {}
       Map[string,<,propContextEntry]   ONLY map ! {}
       Nat                              ONLY nat <
       Option[interOpal]                ONLY option

IMPORT InterOpal 		ONLY interOpal:SORT eqn:SORT
       Config			ONLY config:SORT

/* %The following imports are needed for reexport, as other modules should
    only have to import the module @code{Context} for context-generation */
IMPORT ContextIndex		ONLY indexEntry asString
       ContextApplTables	ONLY applContextEntry identifier
                                     application applications
                                     appliedFunctionName seq
                                     defModuleName
       ContextProps		ONLY propContextEntry TeXedProp infoProp

/* %This type comprehends the four context-maps generated by different
@OPAL-modules. Refer to the specific modules for further information. */
TYPE context == context(
                  indexMap  : map[nat, <, seq[indexEntry]],
                  applContextMap : map[nat, <, seq[applContextEntry]],
                  propContextMap : map[string,<,propContextEntry]
                ) 


/* %The first @c{interOpal} parameter denotes the database constructed for
a signature or implementation part whereas the optional @c{interOpal} parameter
is reserved for the corresponding property-part. The full configuration
database has to be provided in order to contruct the context according to
the user-specified options: */
FUN constructContext : interOpal ** option[interOpal] ** config -> context

/* %If the first argument is nil, the empty context is returned, otherwise
    behaves as the previous function. */
FUN constructContext : option[interOpal] ** option[interOpal] ** config ->
                        context

-- %$Adding Propery Indices to a Context$
FUN addPropertyContext: context ** option[interOpal] ** config -> context
FUN addPropertyContext: context ** interOpal ** config -> context

-- %The constant
FUN emptyContext : context
/* %is needed for initialisation purposes or as a placeholder for 
further extensions to the DOSFOP documentation concept. It can be used when
there is no InterOpal database is present but  context data is required. */