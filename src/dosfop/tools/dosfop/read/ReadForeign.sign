/* %This structure contains functions to support the inclusion of non-@OPAL 
    text into generated documentation.
*/

SIGNATURE ReadForeign

IMPORT Com[void] ONLY com
       Option[pair] ONLY option
       Void ONLY void
       String ONLY string
       Com[option[pair]] ONLY com
       Scan ONLY commentStrings
       Config ONLY config:SORT
       Context ONLY context:SORT
       Seq[string] ONLY seq
       Pair[string, commentStrings] ONLY pair
       Com[seq[string]] ONLY com
       Com[context] ONLY com
       Com[foreignInfo] ONLY com

-- %Sort to store ifnormation on feiren filetypes in.
SORT foreignInfo

/* %Read file @file{DOSFOP/dosfop.filetypes} and store information. */
FUN readForeignCommentStrings: () -> com[foreignInfo]

/* %Search internal filetypes for matching specification. Return nil, if no
    information found, or corresponding implementation (@code{<>} if none) and
    associated comment strings. */
FUN isForeign? : foreignInfo -> string -> 
                  com[option[pair[string, commentStrings]]]

/* %Read imports from file @file{DOSFOP/}@var{name}@file{.deps}, 
each nonempty line contains an imported structure name. */
FUN getForeignImports: string ** config -> com[seq[string]]

/* %Read indexing information  from file 
@file{DOSFOP/}@var{name}@file{.index}, 
each nonempty line contains line number (starting at zero!), the index
generating Texinfo command and the entry, separated by colons. */
FUN getForeignContext: string ** config -> com[context]
