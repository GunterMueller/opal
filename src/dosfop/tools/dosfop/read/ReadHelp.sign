/* %When reading modules from the UNIX-filesystem some convenience functions are
needed to reduce code-overhead and code-repetition. These frequently needed
functionalities are gathered in the succeeding module.

On the one hand the location of a structure has to be extracted from the 
user-specified configuration-database and translated into a UNIX-file reference, on 
the other hand the compiled source-code information has to be inserted into a template
representing the abstraction levels of the whole project. */

SIGNATURE ReadHelp
-- %- $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/dosfop/tools/dosfop/read/ReadHelp.sign,v 1.1.1.1 1998-06-16 16:00:39 wg Exp $

IMPORT String 		ONLY string

IMPORT SourceTab 	ONLY fileType:SORT usrInfos:SORT libInfos:SORT 
                      	     usrSourceInfo:SORT libSourceInfo:SORT
       Config		ONLY config:SORT
       Com[void] ONLY com
       Void ONLY void



/* %The given @string-parameter denotes the name of an @OPAL-structure.
    Depending on a specified @c{fileType}, the corresponding UNIX-filename
    for the structure is constructed using the information provided by
    @c{config}uration-database: */
FUN makeFileName : string ** fileType ** config -> string

-- %Return just the basename of the file
FUN makeBFileName: string ** fileType ** config -> string

/* %After the construction of a @c{usrSourceInfo} respectively a
    @c{libSourceInfo}
data-structure on the basis of the previously read @OPAL source-code 
and the InterOpal-information, the data has to be inserted into a @c{usrInfos} 
respectively a @c{libInfos} template. For the implementation of */

FUN insertUsrInfo : usrSourceInfo ** usrInfos ** config -> usrInfos

/* %the @c{config}-database determines the insertion of the @c{usrSourceInfo}-data
in the user-subsystem table or as a top-level structure. This distinction is not 
significant for the library as all structures are located in subsystems.
Consequently no @c{config}-database is needed in */

FUN insertLibInfo : libSourceInfo ** libInfos -> libInfos

/* %The filename where the warning messages are written to. */

FUN warningFile: denotation

-- %Display progress message according to config data

FUN progress: denotation ** config -> com[void]