/* %The module provides a parameterized operation that enables a @c{merge}ing of a
pair of maps. The codomain of these maps has to be a generic sequence of objects.
The formal parameter @c{data1} represents the domain of the maps with a
total-strict-order @c{<} defined on the domain. @c{data2} is the representative
of the SORT the sequence of the codomain is defined on. */
SIGNATURE MyMap[data1, <, data2]
-- %- $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/dosfop/tools/dosfop/mylib/MyMap.sign,v 1.1.1.1 1998-06-16 16:00:36 wg Exp $

-- %The formal parameters:
SORT data1 data2
FUN < : data1 ** data1 -> bool


IMPORT Seq[data2] 		ONLY seq
       Map[data1,<,seq[data2]] 	ONLY map

/* %@c{merge} enables the amalgamation of two parameterized maps of types defined
above. Maps with disjoint domains are simply concatenated (see the function @c{<+}
in the library-module @c{Map}). Domain elements which are defined
in both maps lead to a concatenation of the respective codomain sequences. */
FUN merge : map[data1,<,seq[data2]] ** map[data1,<,seq[data2]] ->
              map[data1,<,seq[data2]]
