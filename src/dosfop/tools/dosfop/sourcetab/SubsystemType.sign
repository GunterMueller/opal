/* %In the Opal-Compilation-System as well as in DOSFOP we devide 
subsystems in two categories:
@table @asis
@item user-defined subsystems
Subsystems that are defined individually using the means of the Opal-Compilation-System. 
@item library-subsystems
Subsystems that are an integral part of the Opal-Compilation-System and are
structures w.r.t. the task they perform (Bibliotheca Opalica).
@end table
As these two kinds of subsystems share the same principal structure, this parameterized
structure supplies means for handling their structure generically. */ 
SIGNATURE SubsystemType[ sourceInfo ]
-- %- $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/dosfop/tools/dosfop/sourcetab/SubsystemType.sign,v 1.1.1.1 1998-06-16 16:00:40 wg Exp $

/* %Depending on the kind of @c{sourceInfo} the source content of the @c{subsystem}
structure is modified. */
SORT sourceInfo

IMPORT String         	ONLY string
       Seq[sourceInfo]  ONLY seq
       Seq[subsystem] 	ONLY seq


/* %Each (generic) subsystem consisits of:
@table @code
@item name
This @string contains the human-readable name of the subsystem whose contents are
stored in the @c{subsystem}-structure.
@item overview
A @string containing an informal introduction on the contents of the subsystem.
@item sources
The generic parameter decides which kind of source is to be stored in the subsystem.
@item subsystems
Each subsystem can have an arbitrary number of sub-subsystems of the same
principal structure as the "current" subsystem. These sub-subsystems inherit the
same generic parameter as the current subsystem. So subsystems with different
source contents cannot be mixed together! 
@end table */
TYPE subsystem == subsystem( 
                    name       : string,
                    overview   : string,
                    sources    : seq[sourceInfo],
                    subsystems : seq[subsystem] 
                  )

