							SIGNATURE InterOpalMap

									IMPORT
					  Map[ident,<,object]	ONLY	map
					  Map[ident,<,property] ONLY	map
					  Map[inst,<,seq[name]] ONLY	map
					  Map[origin,<,struct]	ONLY	map
					  Nat					ONLY	nat
					  Option[expr]			ONLY option
					  Option[denotation]	ONLY option
					  Seq[comp]				ONLY	seq
					  Seq[eqn]				ONLY	seq
					  Seq[expr]				ONLY	seq
					  Seq[fct]				ONLY	seq
					  Seq[guard]			ONLY	seq
					  Seq[ident]			ONLY	seq
					  Seq[name]				ONLY	seq
					  Seq[pattern]			ONLY	seq
					  Seq[pos]				ONLY	seq
					  Seq[var]				ONLY	seq
					  Seq[variant]			ONLY	seq
								   InterOpal
									 ONLY
   interOpal:SORT part:SORT name:SORT expr:SORT property :SORT formula :SORT
   object :SORT impl :SORT variant :SORT comp :SORT eqn :SORT pattern :SORT
   var :SORT expr :SORT guard :SORT kind :SORT fct :SORT pos:SORT name :SORT
				ident :SORT origin :SORT inst :SORT struct:SORT pragma:SORT
									   <

FUN * : (name -> name) ** interOpal -> interOpal
FUN * : (name -> name) ** part -> part
FUN * : (name -> name) ** struct -> struct 
FUN * : (name -> name) ** property -> property
FUN * : (name -> name) ** formula -> formula
FUN * : (name -> name) ** object -> object 
FUN * : (name -> name) ** impl -> impl 
FUN * : (name -> name) ** variant -> variant 
FUN * : (name -> name) ** comp -> comp 
FUN * : (name -> name) ** eqn -> eqn 
FUN * : (name -> name) ** pattern -> pattern 
FUN * : (name -> name) ** var -> var
FUN * : (name -> name) ** expr -> expr 
FUN * : (name -> name) ** guard -> guard 
FUN * : (name -> name) ** kind -> kind 
FUN * : (name -> name) ** fct -> fct 
FUN * : (name -> name) ** pos -> pos
FUN * : (name -> name) ** name -> name 
FUN * : (name -> name) ** expr -> expr
FUN * : (name -> name) ** pragma -> pragma

-- FUN * : origin -> (ident -> ident) ** object -> object