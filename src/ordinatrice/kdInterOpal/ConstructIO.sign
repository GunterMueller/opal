SIGNATURE ConstructIO

IMPORT  InterOpal ONLY interOpal:SORT part:SORT kind:SORT ident:SORT name:SORT
			fct:SORT eqn:SORT
	Seq[eqn] ONLY seq

SORT cEnv



FUN new: part ** denotation -> cEnv ** interOpal 

/* % kopiert die Parameter des zweiten Interopals in das erste */
FUN copyParameter: cEnv ** interOpal ** interOpal -> cEnv ** interOpal

/* % fuegt die noetigen Importe zu erstem InterOpal um Sorten set aus 
	zweitem InterOpal zu importieren */
FUN importSort: cEnv ** interOpal ** interOpal ** name -> 
	cEnv ** interOpal

/* % (c,i) importFct(fname, strname, fct) fuegt dem IMPORT von strname noch 
	ein fname hinzu, und traegt ihn dort auch in objs ein */
FUN importFct: cEnv ** interOpal ** denotation ** denotation ** fct -> 
		cEnv ** interOpal

FUN addParameter: cEnv ** interOpal ** denotation ** kind 
	-> cEnv ** interOpal ** ident


FUN import: cEnv ** interOpal ** denotation ** denotation -> cEnv ** interOpal

/* % (c, i) addFUN_DEF (fname, fct, <eq1,eq2, ..., eqn>
	fuegt in main das Aequivalent zu  FUN fname : fct  
	ein, liefert ident dazu zurueck */
FUN addFUN: cEnv ** interOpal ** denotation ** fct
	-> cEnv ** interOpal ** ident

/* % fuegt die Gleichungen zu Objeckt ident hinzu */
FUN addDEF: cEnv ** interOpal ** seq[eqn] ** ident ->
	cEnv ** interOpal
