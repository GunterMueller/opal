SIGNATURE LookupLib
-- ============================================================================
-- Autor:	ralfi
-- Projekt:	OPAL1-Compiler
-- Zweck:       Library 
-- Version: $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/browser/lookupInterOpal/LookupLib.sign,v 1.1.1.1 1998-06-16 15:59:54 wg Exp $
-- ============================================================================

IMPORT	InterOpal	ONLY	interOpal:SORT pos:SORT
	Nat		ONLY	nat
	OptBrowser	ONLY	arguments
	Seq[pos]	ONLY	seq
	String		ONLY	string

TYPE	posArea	== posArea(rb:nat, cb: nat, re:nat, ce:nat)
-- Dieser Typ gibt den Bereich des Wortes an, nach dem gesucht werden soll
-- r steht fuer row (Zeile), c steht fuer column (Spalte)
-- b steht fuer begin, e fuer end

TYPE	level	== complete names inst fct optimize
-- names:	es werden nur Namen in Funktionalitaeten geliefert
-- inst:	Instanzen von Bezeichnern werden errechnet
-- complete:	alle verfuegbaren Daten von Bezeichnern werden geliefert
--		(Herkunft, Instanzen)
-- optimize:	der Browser entscheidet, wie weit die Namen aufgeschluesselt
--		werden 
-- fct:		es wird eine kurze Funktionalitaet zu jedem Namen angezeigt
--		(ohne :SORT und Instanzen)

TYPE	info	== info(pos:seq[pos],objName:string,origin:string,inst:string,
			kind:string,gloLo:globalLocal,applDef:applDef)
		   name(! :string)
		   nil
		   error(msg:string)
FUN = : info ** info -> bool
FUN < : info ** info -> bool
FUN addPos setPos: seq[pos] ** info -> info
FUN setOrig : string ** info -> info
FUN error name : denotation -> info

TYPE	globalLocal == local global nil
FUN setGlobal setLocal : info -> info

TYPE	applDef	== application definition nil
FUN setAppl setDef : info -> info

FUN mkLevel : string -> level
-- error -> level complete

TYPE 	callfrom	== getImport getInst getFct
-- wer war die aufrufende Funktion von getName

TYPE 	kl_callfrom	== getKind getProd getFkt
-- wer war die aufrufende Funktion von getFct
-- um ueberfluessige Klammern zu vermeiden

FUN pos2String : interOpal -> pos -> string

FUN info2Str info2Str4 :
	interOpal -> info -> string

FUN inArea? : arguments -> pos -> bool
FUN inArea? : arguments -> seq[pos] -> bool
-- Definition der Positionen:
-- Zeilen(r): 1..n , Spalten(c): 1..m
-- Word
-- ^   ^  : jeweilige Normmarkierung
-- |   |
