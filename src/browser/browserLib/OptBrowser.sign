SIGNATURE OptBrowser
-- ============================================================================
-- Autor:	ralfi
-- Projekt:	OPAL1-Compiler
-- Zweck:       Optionen fuer den Browser und Funktionen zu deren Verwaltung
-- Version: $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/src/browser/browserLib/OptBrowser.sign,v 1.1.1.1 1998-06-16 15:59:55 wg Exp $
-- ============================================================================

IMPORT	Nat		ONLY	nat
	Option[pair[string,nat]]
			ONLY	option
	Option[string]	ONLY	option
	Pair[string,nat]
			ONLY	pair
	String		ONLY	string

TYPE filetyp	==	sign
			impl
			intp
			extp
			error

FUN ioDir ioExt signExt implExt intpExt extpExt: string

TYPE argument	==	command(txt: string, nr: nat)
			option(txt: string)
			name(txt: string)
			level(txt: string)
			filename(path:string, base: string, ext: filetyp)
			rowCursor(pos: nat)
			colCursor(pos: nat)
			rowWordBeg(pos: nat)
			colWordBeg(pos: nat)
			rowWordEnd(pos: nat)
			colWordEnd(pos: nat)

-- FUN ! : argument -> string

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

SORT arguments

FUN :: 		: argument ** arguments -> arguments
-- _ :: error -> error
FUN nil error	: arguments
FUN error? : arguments -> bool

FUN ! : arguments -> string

FUN filename : arguments -> option[string]

FUN command : arguments -> option[pair[string,nat]]

FUN name : arguments -> (argument -> bool) -> option[string]

FUN getPos : arguments -> nat ** nat ** nat ** nat
-- PRE alle Positionen muessen in arguments vorhanden sein 

FUN getFiletyp : arguments -> filetyp

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
-- Optionen:

FUN v3? : arguments -> bool
FUN v2? : arguments -> bool
FUN v1? : arguments -> bool

FUN allpos? : arguments -> bool
-- ignoriert Positionen

FUN ca? : arguments -> bool
-- Sucht noch ein paar Zeichen weiter rechts und links

FUN dumpObj? : arguments -> bool
-- show aktuelles Object

FUN nameNotPos? : arguments -> bool
-- Suche nach textuellen Namen 

FUN showType? : arguments -> bool
-- Ausgabe was fuer ein Object das entspechende ist

FUN chkUniqueImportInst? : arguments -> bool
-- Es wird die Eindeutigkeit von Importinstanzen geprueft
-- gegebenfalls wird die Herkunft annotiert
