SIGNATURE Unify

IMPORT RepoName ONLY localSignName:SORT
       RepoAbsy ONLY formula:SORT expr:SORT
       LSeq[subst] ONLY lseq
       OSubstitution ONLY subst:SORT
       Pair[expr, expr] ONLY pair
       Seq[pair[expr, expr]] ONLY seq
       Union2[lseq[subst], denotation] ONLY union
       Repo ONLY repo:SORT

/* %Unify given formulas and return resulting substitution or nil.
    If one local signature is given, it is taken to recognize free variables.
    If two are given, the first one is taken to recognize free variables,
    the second one to determine unknowns.

    The "M" variant recognizes local variables from both local signatures
    as global names which must match exactly.
    
    Returns a lazy sequence of possible unifiers which may be more than
    one element, once higher-order unification is implemented.
*/


FUN unify: repo ->
            localSignName ** localSignName -> formula ** formula -> lseq[subst]

FUN unifyD: repo ->
            localSignName ** localSignName -> formula ** formula -> 
            union[lseq[subst], denotation]

/*
FUN unify: repo -> localSignName -> formula ** formula -> lseq[subst] 
FUN unifyM: repo -> localSignName ** localSignName ->
             formula ** formula -> lseq[subst] 
*/

FUN unify: repo ->
            localSignName ** localSignName -> expr ** expr -> lseq[subst] 
FUN unify: repo -> localSignName ** localSignName ->
            seq[pair[expr, expr]] -> lseq[subst] 
/*
FUN unify: repo -> localSignName -> expr ** expr -> lseq[subst] 
FUN unifyM: repo ->
             localSignName ** localSignName -> expr ** expr -> lseq[subst] 
*/
