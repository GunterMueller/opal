/* %The proof checker annotates every outermost quantified formula with a
    shadow, i.e. a formula in which the local variables have been replaced
    with unknown variables. 
*/

SIGNATURE Shadow

IMPORT RepoName ONLY localSignName:SORT
       RepoAbsy ONLY formula:SORT quantKind
       Repo ONLY repo:SORT
       Nat ONLY nat
       Pair[repo, nat] ONLY pair
       Option[formula] ONLY option
       Seq[formula] ONLY seq
       PROOFSCRIPT ONLY state:SORT
       Sequent ONLY sequent:SORT

/* %Ensure that the formula has a shadow. Local sign is the signature of
   unknown variables. Repo and nat are the repository and the current count
   for unknown variables. */
FUN ensureShadow: localSignName ->
                   pair[repo, nat] ** formula -> pair[repo, nat] ** formula

FUN ensureShadow: localSignName ->
                   pair[repo, nat] ** sequent -> pair[repo, nat] ** sequent

FUN ensureShadow: state -> state

/* %Check formula or shadow formula. If predicate applies to a formula,
    that formula is returned. If it does not, but the formula is a quantified
    formula with the specified quantifier and the shadow formula fulfills
    the predicate, the shadow formula is returned. In all other cases, nil
    is returned. */

FUN checkF: (quantKind -> bool) -> 
             (formula -> bool) -> formula -> option[formula] 

/* %Return the result of checkF on a single formula for all formulae on
    the list of formulae */
FUN checkF: (quantKind -> bool) -> 
             (formula -> bool) -> seq[formula] -> seq[formula] 

/* %Return all shadow formulas of formulas with the given quantifier */
FUN shadows: (quantKind -> bool) -> seq[formula] -> seq[formula]