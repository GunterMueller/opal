/* %This unti contains (a selection of) the structural rules of the
    @sc{Opal} calculus. */

SIGNATURE CalcStructural

IMPORT Pair[nat,nat] ONLY pair[nat, nat]:SORT
       Nat ONLY nat

-- %$Base rule$
-- %apply base rule, no instantiation of unknowns
FUN eq_assume: proofscript  

-- %apply base rule, using unification, instantiating unknowns
FUN assume: proofscript

/* %try to match some @code{E1, E2} with @code{E1 == true} and
    @code{E2 == false} in the hypotheses. (This uses the fact that
   @code{NOT true === false}.)
*/
FUN cAssume: proofscript

-- %The same on the right side
FUN cAssumeR: proofscript 


/* %try to find unifiable formulae @code{F} and @code{NOT F} in
    the hypotheses. */
FUN nAssume: proofscript

-- %$Thinning$
/* %sort formulas and remove formulas which occur several times;
    always succeeds, so never use in repetitions!! */
FUN contract: proofscript


-- %$Debugging$

-- %ok, if formula pair in hyptheses of given subgoal is not equivalent
FUN contractH: nat ** pair[nat, nat] -> proofscript