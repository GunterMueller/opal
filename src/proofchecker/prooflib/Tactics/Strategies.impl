IMPLEMENTATION Strategies

IMPORT BasicTac COMPLETELY
       ProofTactics ONLY pscript
       Compose ONLY o
       CalcLogical ONLY logic all_r ex_l logicAlt logic_r mp_r logicL
       CalcLogicalForward ONLY impl_l impl_l_deep2 impl_l_deep4
       CalcDomain COMPLETELY
       CalcStructural ONLY assume cAssume nAssume eq_assume
       CalcInduct ONLY mInduct
       CalcComputational ONLY block_reduce cases_reduce block_reduceL
       CalcLogicalQ ONLY logicQ

DEF statP(P) == atexit(finalize o finishedCheck o stat); every(stat); P
DEF simpleP == statP(inductStart; rewriter)
DEF simpleP2 == statP(mInduct; rewriterO)
DEF trivial == statP(tApartS)

DEF traceP(P) == 
  atexit(finishedCheck o stat o traceProof);
  pscript(\\st. ltraceProof(st));
  every(stat o traceProof); P

DEF itraceP(P) == atexit(stat o itraceProof); every(stat o itraceProof); P

DEF deleter == equiv_refl | assume | cAssume | nAssume
DEF deleter2 == equiv_refl | dfd_equiv_r | assume | cAssume | nAssume
DEF deleter3 == equiv_refl | assume | cAssume | nAssume | dfd_equiv_r

DEF bLogic == logic | det(all_r) | det(ex_l)
DEF bLogicQ == logicQ | det(all_r) | det(ex_l)
DEF bLogicAlt == logicAlt | det(all_r) | det(ex_l)

DEF tApart == *(deleter2 | bLogic)
DEF tApartO == *(opalR | deleter2 | bLogic)
DEF tApartS == *(deleter | bLogic)
DEF tApartSQ == *(deleter | bLogicQ)
DEF tApartI == *(deleter | bLogic | subgoal(impl_l))
DEF tApartL == *(equiv_refl | eq_assume | bLogic)
DEF tApartLL == *(equiv_refl | eq_assume | logic_r | logicL)
DEF tApartM == *(deleter | bLogic | mp_r)

DEF tApartS(p) == *(deleter | bLogic | p)
DEF tApartSQ(p) == *(deleter | bLogicQ | p)

DEF opalR == block_reduce | cases_reduce
DEF opalL == *(block_reduceL)
DEF opalLs == tApartS; opalL

DEF inductStart == mInduct; *(deleter | bLogic)
/* DEF induct2Start == mInduct; *(deleter | logic); 
   mInduct; *(deleter | bLogic) */
DEF induct2Start == mInduct;! *(deleter2 | bLogic)

DEF rewriter == *(deleter | rewrite_r_deep)
DEF rewriter2 == *(deleter | (rewrite_r_deep | crewrite_r_deep))
DEF rewriter3 == *(bLogic | deleter2 | rewrite_r_deep)
DEF rewriter33 == *(bLogic | deleter3 | rewrite_r_deep)
DEF rewriter30 == *(bLogic | deleter | rewrite_r_deep)
DEF rewriterO == *(opalR | deleter2| bLogic | rewrite_r_deep)
DEF rewriterO4 == *(opalR | deleter| bLogic | rewrite_r_deep)
DEF rewriterO4Q == *(opalR | deleter| bLogicQ | rewrite_r_deep)
DEF rewriter3L == *(deleter2 | bLogic | rewrite_l_deep)

DEF conseq == conseq1*
DEF conseq1 == subgoal(impl_l_deep2); *(eq_assume|logic_r)

DEF conseqQ == conseqQ1*
DEF conseqQ1 == subgoal(impl_l_deep4); *(eq_assume|logic_r)