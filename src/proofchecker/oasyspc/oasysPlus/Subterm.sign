/* %Handle subterms of complex data types (like expr and formula) */
SIGNATURE Subterm

IMPORT RepoAbsy ONLY expr
       Option[expr] ONLY option

/* %Find some subexpression with the specified property. 
    If such a subexpression exists return the subexpression itself,
    and a function which will replace that subexpression with its argument.
    If the first result is nil, the second is not valid.
    (A better result type would be @code{option[expr ** (expr -> expr)]},
     but this is not well expressed in Opal.) */
FUN findSubexpr: (expr -> bool) ** expr -> option[expr] ** (expr -> expr)

/* %As above; second predicate indicates 'stop' expressions, 
    which are not searched for subexpressions. (The `stop' expression
    itself might be returned, though.) */
FUN findSubexpr: (expr -> bool) ** (expr -> bool) ** expr ->
                  option[expr] ** (expr -> expr)

/* %- interessant wären bei Erweiterungen evtl. auch andere Funktionen
    interessant:
    - alle Subterme als lseq
    - alle Teilformeln als lseq
*/