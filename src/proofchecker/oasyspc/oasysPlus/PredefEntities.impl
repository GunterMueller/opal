IMPLEMENTATION PredefEntities

IMPORT Option ONLY cont option avail nil avail?
       RepoUnitAccess ONLY lookup?
       RepoName COMPLETELY
       RepoAbsy ONLY name fct:SORT
       RepoAn ONLY none an
       Set ONLY arb set {}?
       RepoObjectAccess ONLY lookup

DEF proofscript(R) == cont(lookup?("PROOFSCRIPT", sign)(R))
DEF BOOL(R) == cont(lookup?("BOOL", sign)(R))
DEF Nat(R) == lookup?("Nat", sign)(R)


DEF true(R) == name(none, arb(lookup(BOOL(R), "true")(R)))
DEF false(R) == name(none, arb(lookup(BOOL(R), "false")(R)))
DEF <(R) == 
  IF avail?(Nat(R)) THEN
    LET c == lookup(cont(Nat(R)), "<")(R)
    IN
    IF c {}? THEN nil ELSE avail(arb(c)) FI
  ELSE
    nil
  FI
DEF and(R) == arb(lookup(BOOL(R), "and")(R))
DEF nat(R) == 
  IF avail?(Nat(R)) THEN
    LET c == lookup(cont(Nat(R)), "nat")(R)
    IN
    IF c {}? THEN nil ELSE avail(arb(c)) FI
  ELSE
    nil
  FI
  