IMPLEMENTATION NameHandling

IMPORT RepoName COMPLETELY
       RepoAbsy COMPLETELY
       RepoObjectAccess ONLY object
       SeqMap ONLY *
       Seq ONLY seq

-- %$Instantite basic unit names$

DEF instantiate(iNo, basicUnitName(n, p)) == derivedUnitName(n, p, iNo)
DEF instantiate(iNo, derivedUnitName(n, p, _old)) ==
    derivedUnitName(n, p, iNo)

DEF instantiate(iNo, propertyName(n, u)) == 
    propertyName(n, instantiate(iNo, u))

DEF instantiate(iNo, globalObjectName(no, uN)) == 
  globalObjectName(no, instantiate(iNo, uN))
DEF instantiate(_, oN AS localObjectName(_, _)) == oN

DEF instantiate(iNo)(variant(a, con, dis, comps)) ==
  variant(a, instantiate(iNo, con), instantiate(iNo, dis),
          (\\c. component(an(c), instantiate(iNo, selector(c)))) * comps)
  

-- %$Query objectName$

DEF parameter?(R)(oN) == parameter?(impl(object(oN)(R)))