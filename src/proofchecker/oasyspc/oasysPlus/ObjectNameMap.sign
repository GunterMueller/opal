/* %Check or change names within formulae and expressions. */

SIGNATURE ObjectNameMap

IMPORT RepoName ONLY objectName:SORT propertyName:SORT
       RepoAbsy COMPLETELY
       Repo ONLY repo:SORT

-- %$Check names$

-- % always true for free types
FUN checkNames: (objectName -> bool) -> property -> bool
FUN checkNames: (objectName -> bool) -> formula -> bool
FUN checkNames: (objectName -> bool) -> expr -> bool
FUN checkNames: (objectName -> bool) -> guard -> bool
FUN checkNames: (objectName -> bool) -> eqn -> bool

-- %$Change names within formulae and expressions$
FUN <* : (objectName -> objectName) ** property -> property
FUN <* : (objectName -> objectName) ** variant -> variant
FUN <* : (objectName -> objectName) ** component -> component

/* %Note: function is not applied to variable declarations within
   quantified formulae */
FUN <* : (objectName -> objectName) ** formula -> formula

/* %Note: function is not applied to variable declarations within
   lambda expressions or the as variable. */
FUN <* : (objectName -> objectName) ** expr -> expr
FUN <* : (objectName -> objectName) ** guard -> guard
FUN <* : (objectName -> objectName) ** eqn -> eqn

-- %$Change names and update repository$
/* %Use these functions e.g. @code{deriveLike(uN)} from
    @ref{@Overview{InstanceHandling}}; does change kinds of variables */

FUN <* : (repo ** objectName -> repo ** objectName) **
          repo ** property -> repo **  property
FUN <* : (repo ** objectName -> repo ** objectName) **
          repo ** formula -> repo **  formula
FUN <* : (repo ** objectName -> repo ** objectName) **
          repo ** expr -> repo **  expr
FUN <* : (repo ** objectName -> repo ** objectName) **
          repo ** guard -> repo **  guard
FUN <* : (repo ** objectName -> repo ** objectName) **
          repo ** eqn -> repo **  eqn
