IMPLEMENTATION BasicSupplements

IMPORT Nat ONLY < 26 1 + % / succ?
       Denotation ONLY init ++
       CharConv ONLY asNat
       NatConv ONLY asChar
       Char ONLY ! char
       StringConv ONLY ` asString
       SeqMap ONLY *
       String ONLY string
       Seq ONLY seq iter revert
       Fmt ONLY lit
       BoolConv ONLY `
       RealConv ONLY ``

DEF asDeno(n) ==
  IF n < 26 THEN init(1, asChar(n + asNat("a"!)))
  ELSE
    `(asString((\\x. asChar(x + asNat("a"!))) *
               revert((\\ x. x % 26) * iter(n, _ / 26, succ?))))
  FI

DEF txt # n == txt ++ asDeno(n)
DEF n # txt == asDeno(n) ++ txt

DEF fmtBool(b) == lit(b`)

DEF fmtReal(r,n) == lit(r``n)