IMPLEMENTATION SeqSupplements

IMPORT Seq ONLY seq .. <> <>? # ::
       SeqIndex ONLY !
       Nat ONLY nat 1 0 pred
       Pair ONLY pair & 1st 2nd
       LSeq ONLY asLSeq
       FmtSeq ONLY fmtSeq
       Fmt ONLY lit ; brk
       FmtBasicTypes ONLY fmtNat
       String ONLY string

DEF idx(fs) == IF fs <>? THEN <> ELSE (0 .. pred(#(fs)))(\\x. x & fs ! x) FI
DEF idxL(fs) == asLSeq(idx(fs))

DEF sd(_ :: d2 :: _) == d2

DEF fmtIdxSeq(f)(s) ==
  fmtSeq(\\p. brk; lit("["); fmtNat(1st(p)); lit("] "); f(2nd(p)))(idx(s))