IMPLEMENTATION OasysInterface

IMPORT  Com             COMPLETELY
        ComCompose      COMPLETELY
        ComCheck        COMPLETELY
        Nat             COMPLETELY
        Pair            COMPLETELY
        Void            COMPLETELY

IMPORT  Cmdtable        COMPLETELY
        Argspec         COMPLETELY
        ArgspecBasic    COMPLETELY
        ArgspecOp       COMPLETELY
        ArgspecCompose  COMPLETELY

IMPORT  OasysCmdtable   COMPLETELY

IMPORT  RepoInterface           COMPLETELY
        CompilerInterface       COMPLETELY
        DebuggerInterface       COMPLETELY
        PCheckerInterface       COMPLETELY
        EchoEvent               COMPLETELY
        RepoDiag                COMPLETELY


DEF initOasys ==
    initRepo                    & 
    initCompiler                &
    initDebugger                &
    initPChecker                &
    register(oasysCmdtable)

DEF finitOasys ==
    check(\\x.x,
        finitPChecker           &
        finitDebugger           &
        finitCompiler           & 
        finitRepo               &
        exit(0)
    )

FUN oasysCmdtable : cmdtable[denotation]
DEF oasysCmdtable ==
    cmd(lit("oasys-quit") @ exit,
        "Exit program."
    ) ++
    cmd(lit("oasys-verbosity") o
        ( ( lit("diag") o 
            ( lit("hint")  @ (\\ _ . setDiagVerbosity(hint))
            | lit("warn")  @ (\\ _ . setDiagVerbosity(warn))
            | lit("error") @ (\\ _ . setDiagVerbosity(error))
            ) & (\\ _ . nil)
          ) |
          ( (lit("message") o nat("LEVEL", noCompletion) & 2nd)
                           @ (\\ L . setMessageVerbosity(L))
          )
        ) & (\\ _ . ""),
        "Set verbosity."
    )


FUN exit : com[denotation]
DEF exit == finitOasys & (\\ _ . succeed(""))
