## Makefile to install OCS from the sources
## @configure_input@
#  Copyright 1989 - 1999 by the Opal Group, TU Berlin. All rights reserved
#  See OCSHOME/etc/LICENSE or 
#  http://uebb.cs.tu-berlin.de/~opal/LICENSE.html for details


.PHONY: install default usage

default: usage

srcdir=@srcdir@
bindir=@bindir@
prefix=@prefix@
exec_prefix=@exec_prefix@

## define these variables to match your system
#.. Path to the source of the distribution
OCSSRC=@ocs_abssrcdir@/src
#.. Absolute path to the ProjectDefs file in this directory
OCSPROJECT=@ocs_abssrcdir@/ProjectDefs
#.. Path to the place where the distribution is to be installed
OCSHDIR=ocs-$(VERSION)
OCSHOME=@prefix@/$(OCSHDIR)
#.. Description of your system 
OSARCH=@host_os@-@host_cpu@
#.. Path to the GNU sed program
SED=@ac_cv_path_SED@
#.. Path to the GNU tar program
TAR=@ac_cv_path_TAR@
#.. Path to the GNU zip program
GZIP=@ac_cv_path_COMPRESS@ -f
#.. Non-vital components of the Opal system (do not change order)
# lib.opal_parserlight lib.opal_readline 
# pkg.javabind lib.opal_java pkg.javaexamples
# lib.opal_tcl lib.opal_tk lib.opal_win 
# pkg.dynamite lib.oc_reflections 
# pkg.browser pkg.emacs pkg.kde pkg.vim pkg.dosfop pkg.doc pkg.ordinatrice 
# lib.oasys_shared lib.oasys_main
# pkg.oasys pkg.evaluator pkg.tivi2 pkg.oc5 
# lib.oasys_pc pkg.oasyspc lib.oasys_prooflib 
STDPACKAGES = @ocs_std_packages@


## don't change anything beyond this line ##############################

#.. Version of the Opal distribution
VERSION=@ocs_version@
DATE=`date +%d-%b-%Y`
LONGVERSION=$(VERSION) ($(DATE))

#.. Extra targets
EXTRAS=
LOCALLINKS=@ocs_cv_feature_locallinks@

ifeq ($(LOCALLINKS),yes)
EXTRAS:=$(EXTRAS) $(addprefix @bindir@/,btrace dosfop javabind oasys oasyspc ocs ordinatrice pureDosfop tivi2)
endif

#.. name of the distribution archives
SRCDISTR=ocs-$(VERSION)-src
SHAREDDISTR=ocs-$(VERSION)-shared
BINDISTR=ocs-$(VERSION)-bin-$(OSARCH)

#.. Packages which are to be installed (in the given order!)
INITPACKAGES = pkg.om
MINPACKAGES = pkg.opalimports lib.opal_base pkg.genmake \
	      lib.oc_shared lib.oc_oc1 lib.oc_oc2 pkg.oc1 pkg.oc2 pkg.getopalname
MINSRCPACKAGES	=	pkg.examples
PACKAGES = $(MINPACKAGES) $(STDPACKAGES)

OCSADMIN=OCSPROJECT=$(OCSPROJECT) $(OCSHOME)/bin/ocsadmin -ocshome $(OCSHOME) -ocssrc $(OCSSRC) -ocsspecs $(OCSSRC)/om/specs
OCSADMININIT=OCSPROJECT=$(OCSPROJECT) $(OCSSRC)/om/scripts/ocsadmin -ocssrc $(OCSSRC) -ocshome $(OCSHOME) -ocsspecs $(OCSSRC)/om/specs

install: init $(PACKAGES) $(EXTRAS)
	$(OCSADMIN) install $(MINSRCPACKAGES)
	chmod -R a+r @prefix@/ocs-$(VERSION)/*
	chmod a+x @prefix@/ocs-$(VERSION)/bin/*

reinstall: reinit $(PACKAGES) $(EXTRAS)
	$(OCSADMIN) install $(MINSRCPACKAGES)
	chmod -R a+r @prefix@/ocs-$(VERSION)/*
	chmod a+x @prefix@/ocs-$(VERSION)/bin/*

init:
	$(OCSADMININIT) init -sed $(SED) "$(LONGVERSION)"
	$(OCSADMIN) install $(INITPACKAGES)

reinit:
	$(OCSADMININIT) init -sed $(SED) reinit "$(LONGVERSION)"
	$(OCSADMIN) install $(INITPACKAGES)

pkg.% lib.%:
	$(OCSADMIN) ocs $@
	$(OCSADMIN) install $@

pkg.examples:
	$(OCSADMIN) install $@

extras:	$(EXTRAS)

uninstall-locallinks:
	$(SHELL) $(OCSHOME)/etc/uninstall-locallinks

boot: $(MINPACKAGES)
	$(OCSADMIN) install $(MINSRCPACKAGES)

complete: $(STDPACKAGES)

# distclean:
# 	$(OCSADMININIT) ocs -command cleanobjall $(MINPACKAGES)
#	$(OCSADMININIT) ocs -command cleanall $(MINSRCPACKAGES) $(STDPACKAGES)

distclean:
	(cd $(OCSSRC)/om; ocs cleanobjall)
	(cd $(OCSSRC)/oc; ocs cleanobjall)
	(cd $(OCSSRC)/lib; ocs cleanobjall)
	(cd $(OCSSRC)/oc/dynamite; ocs cleanall)
	(cd $(OCSSRC)/oc/reflections; ocs cleanall)
	(cd $(OCSSRC)/oc/oc5; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/OpalWin; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/OpalWinAdditions; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/ParserLight; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/Readline; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/Tcl; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/Tk; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/Java; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/Java/JavaBase; ocs cleanall)
	(cd $(OCSSRC)/lib/Tools/Java/JavaCheck; ocs cleanall)
	(cd $(OCSSRC)/browser; ocs cleanall)
	(cd $(OCSSRC)/dosfop; ocs -P $(OCSSRC)/dosfop/ProjectDefs.dosfop cleanall)
	(cd $(OCSSRC)/emacs; ocs cleanall)
	(cd $(OCSSRC)/oasys; ocs cleanall)
	(cd $(OCSSRC)/ordinatrice; ocs cleanall)
	(cd $(OCSSRC)/tivi2; ocs cleanall)
	(cd $(OCSSRC)/../doc; ocs cleanall)
	(cd $(OCSSRC)/../examples; ocs cleanall; cd ProofChecker; ocs cleanall)
	(cd $(OCSSRC)/proofchecker/oasyspc/libPlus; ocs cleanall)
	(cd $(OCSSRC)/proofchecker/oasyspc/oasysPlus; ocs cleanall)
	(cd $(OCSSRC)/proofchecker/oasyspc/derivations; ocs cleanall)
	(cd $(OCSSRC)/proofchecker/oasyspc/proofscript; ocs cleanall)
	(cd $(OCSSRC)/proofchecker/oasyspc/pcheck; ocs cleanall)
	(cd $(OCSSRC)/proofchecker/oasyspc/pdriver; ocs cleanall)
	(cd $(OCSSRC)/proofchecker/prooflib; ocs cleanall)
	rm -f opalconfig.last opalconfig.makeTargets

preparedist:
	cd $(OCSSRC)/lib; ocs cleanall; OCSSRC=$(OCSSRC); export OCSSRC; ocs -P $(OCSSRC)/ProjectDefs.bootstrap
	cd $(OCSSRC)/om; ocs cleanall; OCSSRC=$(OCSSRC); export OCSSRC; ocs -P $(OCSSRC)/ProjectDefs.bootstrap
	cd $(OCSSRC)/oc; ocs cleanall; OCSSRC=$(OCSSRC); export OCSSRC; ocs -P $(OCSSRC)/ProjectDefs.bootstrap
	cd $(OCSSRC)/../doc/install; OCSSRC=$(OCSSRC); export OCSSRC; ocs 
	cp $(OCSSRC)/../doc/install/*.html .

prepareoc:
	cd $(OCSSRC)/oc; ocs cleanall; OCSSRC=$(OCSSRC); export OCSSRC; ocs -P $(OCSSRC)/ProjectDefs.bootstrap

preparedoc: 
	cd $(OCSSRC)/../doc; OCSSRC=$(OCSSRC); export OCSSRC; ocs 
	cp $(OCSSRC)/../doc/install/*.html .

prepareom:
	cd $(OCSSRC)/om; ocs cleanall; OCSSRC=$(OCSSRC); export OCSSRC; ocs -P $(OCSSRC)/ProjectDefs.bootstrap

sourcedistr: ocs-version
	cp -f ignore1  /tmp; cp -f ignore2  /tmp; \
	cd $(OCSSRC)/../.. ; \
	$(TAR) -X /tmp/ignore1 -X /tmp/ignore2 -cvf $(SRCDISTR).tar ocs/src; \
	$(TAR) -X /tmp/ignore1 \
		-X /tmp/ignore2 -rvf $(SRCDISTR).tar ocs/examples; \
	$(TAR) -X /tmp/ignore1 -rvf $(SRCDISTR).tar ocs/ProjectDefs ocs/doc ocs/Makefile.in ocs/configure.in ocs/configure ocs/config.guess ocs/config.sub ocs/install-sh ocs/ocs-version ocs/ignore1 ocs/ignore2 ocs/install*.html ocs/opalwizard ocs/opal.gif ocs/opalconfig.makeTargets.in ocs/opal.xbm ; \
	$(GZIP) $(SRCDISTR).tar; \
	rm /tmp/ignore1; rm /tmp/ignore2

bindistr:
	$(TAR) -cvf $(OCSSRC)/../../$(BINDISTR).tar -C $(OCSHOME)/.. $(OCSHDIR)/bin $(OCSHDIR)/dosfop $(OCSHDIR)/packages $(OCSHDIR)/lib ; \
	$(GZIP) $(OCSSRC)/../../$(BINDISTR).tar

shareddistr:
	$(TAR) -cvf $(OCSSRC)/../../$(SHAREDDISTR).tar -C $(OCSHOME)/.. $(OCSHDIR)/VERSION $(OCSHDIR)/doc $(OCSHDIR)/etc $(OCSHDIR)/examples $(OCSHDIR)/man ; \
	$(GZIP) $(OCSSRC)/../../$(SHAREDDISTR).tar

ocs-version: Makefile
	echo "$(LONGVERSION)" > ocs-version

usage:
	@echo "usage: first edit the variables at the beginning of Makefile"
	@echo "then call 'make install'"

### for autoconf

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

### generate links in /usr/local/bin

@bindir@/% : 
	if test -f $(OCSHOME)/bin/$* ; then \
		echo "#! /bin/sh" > $@ ;\
		echo "# generated by OCS" >> $@ ; \
		echo "OCS=$(prefix)/ocs" >> $@ ; \
		echo "export OCS" >> $@ ; \
		echo "$(prefix)/ocs/bin/$* \$$*" >> $@ ; \
		chmod a+x $(prefix)/bin/$* ; \
		echo "rm -f $@" >> $(OCSHOME)/etc/uninstall-locallinks ; \
        fi

