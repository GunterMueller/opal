Scripts for performing a selftest of a new Opal compiler and standard library
=============================================================================

In principle, everything needed is the 'selftest' script and the file
'ProjectDefs.selftest' in this directory plus the Opal source tree.  The
disadvantage of using 'selftest' only is that everything in the Opal source
tree will be recompiled during each iteration.

The 'initSelftest' script copies only the necessary part of the Opal library
and the control scripts to a location of your choice. Suppose the Opal tree
is located at /somewhere/ocs (without a trailing /src !) and you want to
perform a selftest in /here/selftest, then do the following:

> mkdir /here/selftest
> /somewhere/ocs/admin/selftest/initSelftest --ocstree /somewhere/ocs \
					     --selftestdir /here/selftest

> cd /here/selftest
> make

This will perform a selftest with three (see below) iterations, and put the
output into a file 'log'. A selftest takes some time, from about two hours
upto several days, depending on your hardware.

For further information, consult the source.

------------------------------
Why (at least) three iterations?

Suppose we have a slow compiler which generates slow code, and we have
improved the compiler to generate fast code now.

#1 We use the slow compiler to get compiler C1 which is also slow but
   generates fast code. 

#2 We use compiler C1 to get compiler C2 which is fast and generates fast
   code.

#3 We use compiler C2 to get compiler C3. If the fast code introduces
   runtime errors, either C2 will break or C2 and C3 will not be identical.
   If both are identical, we take this as strong evidence that everything
   works fine. 

------------------------------

Time required for a selftest (3 iterations)

OCS VERSION| OS TYPE         |     MACH TYPE          | MEM   | USER / ELAPSED
-----------+-----------------+------------------------+-------+----------------
2.3d.delta | Linux 2.2.5     | Pentium III 450Mhz     | 128MB | 1:17:12/1:30:02
2.3d.delta | Linux 2.2.5     | AMD K6-2 300 MHz       | 128MB | 2:23:52/2:39:22

