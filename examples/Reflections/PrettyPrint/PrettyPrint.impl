/* %- Rcs-Info (automatically generated)

  $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/examples/Reflections/PrettyPrint/PrettyPrint.impl,v 1.2 1999-10-22 11:49:52 kd Exp $
  $Author: kd $
  $Date: 1999-10-22 11:49:52 $
  $State: Exp $

  $Locker:  $
  $Revision: 1.2 $
  $Name: not supported by cvs2svn $

  $Log: not supported by cvs2svn $
  Revision 1.1  1999/03/23 12:28:32  kd
  2.3d.gamma Reflections, dosfop 1.92g, Bereiche

  Revision 1.1  1999/03/20 22:46:35  opaladm
  *** empty log message ***

  Revision 1.7  1998/12/10 23:57:18  silver
  Fixed typo.

  Revision 1.6  1998/12/09 16:17:52  silver
  Extended Version.

  Revision 1.5  1998/12/06 20:17:00  silver
  First version with compiler extentions.

  Revision 1.4  1998/10/29 15:38:44  silver
  Changed sort info parameters.

  Revision 1.3  1998/06/04 17:29:23  silver
  New syntax adapted for reflects?.

  Revision 1.2  1998/06/04 16:52:43  silver
  Initial revision.

  Revision 1.1  1998/06/04 15:58:12  silver
  Initial revision

*/

IMPLEMENTATION PrettyPrint

IMPORT  Reflection      COMPLETELY
        ReflectionBuild COMPLETELY

        ComCompose      COMPLETELY
        Stream          COMPLETELY

        Seq             COMPLETELY
        SeqConv         COMPLETELY

        Int             ONLY    int 5
        Char            COMPLETELY
        String          COMPLETELY
        Nat             COMPLETELY
        NatConv         COMPLETELY
        IntConv         COMPLETELY
        CharConv        COMPLETELY
        Denotation      COMPLETELY
        Option          COMPLETELY

-- %$An example printer$


FUN print : value -> com[void]
DEF print (refl) ==

  IF i    THEN writeLine (stdOut, `(content[int](refl)))
  IF c    THEN writeLine (stdOut, `(content[char](refl)))
  IF str  THEN writeLine (stdOut, content[string](refl))
  IF ln   THEN writeLine (stdOut, `(`)(content[seq[nat]](refl)))
  IF ls   THEN writeLine (stdOut, `(`)(content[seq[char]](refl)))
                ELSE writeLine (stdOut, "unknown type")
  FI 

    WHERE i   == refl reflects? [int]       
          c   == refl reflects? [char]     
          str == refl reflects? [string]
          ln  == refl reflects? [seq[nat]]
          ls  == refl reflects? [seq[char]]


-- %$The main function$

DEF PrettyPrint ==
  writeLine (stdOut, "Writing an integer: ");
  print (reflect [int]    (5));

  writeLine (stdOut, "Writing a string: ");
  print (reflect [string] (!("Yes!")));

  writeLine (stdOut, "Writing a list: ");
  print (reflect (1 :: 2 :: <>));

  writeLine (stdOut, "Writing a char: ");
  print (reflect [char] (!("a")));

  writeLine (stdOut, "Writing another list: ");
  print (reflect [seq[char]] (!("A") :: (!("B") :: <>)))


