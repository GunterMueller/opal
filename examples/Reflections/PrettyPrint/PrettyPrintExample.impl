IMPLEMENTATION PrettyPrintExample

IMPORT  Reflection      COMPLETELY
        ReflectionBuild COMPLETELY

        ComCompose      COMPLETELY
        Stream          COMPLETELY

        Seq             COMPLETELY
        SeqConv         COMPLETELY

        Int             ONLY    int 5
        Char            COMPLETELY
        String          COMPLETELY
        Nat             COMPLETELY
        NatConv         COMPLETELY
        IntConv         COMPLETELY
        CharConv        COMPLETELY
        Denotation      COMPLETELY
        Option          COMPLETELY

-- %$An example printer$


FUN print : value -> com[void]
DEF print (refl) ==

  IF i    THEN writeLine (stdOut, `(content[int](refl)))
  IF c    THEN writeLine (stdOut, `(content[char](refl)))
  IF str  THEN writeLine (stdOut, content[string](refl))
  IF ln   THEN writeLine (stdOut, `(`)(content[seq[nat]](refl)))
  IF ls   THEN writeLine (stdOut, `(`)(content[seq[char]](refl)))
                ELSE writeLine (stdOut, "unknown type")
  FI 

    WHERE i   == refl reflects? [int]       
          c   == refl reflects? [char]     
          str == refl reflects? [string]
          ln  == refl reflects? [seq[nat]]
          ls  == refl reflects? [seq[char]]


-- %$The main function$

DEF PrettyPrint ==
  writeLine (stdOut, "Writing an integer: ");
  print (reflect [int]    (5));

  writeLine (stdOut, "Writing a string: ");
  print (reflect [string] (!("Yes!")));

  writeLine (stdOut, "Writing a list: ");
  print (reflect (1 :: 2 :: <>));

  writeLine (stdOut, "Writing a char: ");
  print (reflect [char] (!("a")));

  writeLine (stdOut, "Writing another list: ");
  print (reflect [seq[char]] (!("A") :: (!("B") :: <>)))


