IMPLEMENTATION Exec

IMPORT	BinFile[denoFun]	COMPLETELY
	File			COMPLETELY
	Com			COMPLETELY
	ComCheck		COMPLETELY
	ComCompose		COMPLETELY
	Env			COMPLETELY
	Seq			COMPLETELY
	Nat			COMPLETELY
	StringConv		ONLY `

DATA denoFun == abs(rep: denotation -> denotation)

DEF exec ==
    -- read a function denotation -> denotation from file and execute it
    check(\\ x . x,
	args						& (\\ Args.
	IF #(Args) |= 2 THEN
	    yield(fail("usage: exec <fn>"))
	ELSE
            open(ft(rt(Args)), "r")				& (\\ F .
	    read(F, "denotation->denotation" )			& (\\ Fun .
	    close(F)						& (\\ _ .
	    write(stdOut,"Argument: ")				& (\\ _ .
	    readLine(stdIn)					& (\\ Arg .
	    write(stdOut,"Result  : ")				& (\\ _ .
	    writeLine(stdOut,rep(Fun)(`(Arg)))
	    ))))))
	FI
	)
    )

