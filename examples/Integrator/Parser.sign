SIGNATURE Parser

IMPORT Expr ONLY xyExpr:SORT

FUN parse: denotation -> xyExpr
/* %
@SPC @code{parse(d) = ex}
@PRE @code{true}
@POST Parses denotation as lisp-style  expression
      e.g. @code{(add (mul 3 5) x)}. If the input does not conform to the
grammar below, an error expression with an description of the parser error is
generated and the rest of the input is discarded.  
@ENDSPC

@example
expression ::= 
            number
        |   pi
        |   variable
        |   open add expr1 expr2 close
        |   open +   expr1 expr2 close
        |   open sub expr1 expr2 close
        |   open -   expr1 expr2 close
        |   open mul expr1 expr2 close
        |   open *   expr1 expr2 close
        |   open div expr1 expr2 close
        |   open /   expr1 expr2 close
        |   open pow expr1 expr2 close
        |   open sin expr1 close
        |   open cos expr1 close
        |   open exp expr1 close
        |   open log expr1 close
        |   open abs expr1 close
        |   open neg expr1 close
        |   open sqrt expr1 close
@end example
*/
