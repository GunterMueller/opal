SIGNATURE Evaluator

IMPORT  Expr    ONLY    expr
        Real    ONLY    real

FUN apply: expr -> real -> real
FUN apply: expr -> real**real -> real

FUN apply: expr -> expr -> result
FUN apply: expr -> expr**expr -> result

/* %
@SPC @code{apply(Expression)(Argument) == Result}
@PRE @code{true}
@POST Evaluate @code{Expression}, taking @code{Argument} as value for the variable @i{x}.
      If everything works fine, return @code{okay(Result)}, otherwise return
      @code{error(}@i{appropriate description}@code{)} 
@ENDSPC 
*/

FUN eval: expr -> result

TYPE result == value(theValue: real)
               error(msg: denotation)
