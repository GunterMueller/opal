# Process this file with autoconf to produce a configure script.
# $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/configure.in,v 1.54 2001-06-18 18:41:26 kd Exp $

AC_INIT([Opall Compilation system],
        [2.3n],
        [opal-users@projects.uebb.tu-berlin.de],
        [ocs],
        [http://projects.uebb.tu-berlin.de/opal])
AC_CONFIG_SRCDIR(ocs-version.in)

# -------------------------------------------------------------------------
# Clearing unwanted defaults

CC=
CPP=
CFLAGS=
CPPFLAGS=
LDFLAGS=
LIBS=
DEFS=

# -------------------------------------------------------------------------
# Check for C compiler

CFLAGS=

AC_PROG_CC 

# Check for POSIX ISC
AC_ISC_POSIX


## get current system
AC_CANONICAL_HOST
AC_CYGWIN

echo "CYGWIN´s value is >$CYGWIN<"

# CYGWIN is set to the empty string, because newer autoconfs set it to "no"
# when not available, but the opalwin machinery below assumes it to be
# empty.  Grmpf.
#
# Martin & Stephan 2003-10-31
#
if test "$CYGWIN" = "no"
then
  CYGWIN=""
fi
if test -z "$CYGWIN" 
then
  featureflag=yes
else
  featureflag=no
fi

# -------------------------------------------------------------------------
# Macro definitions

dnl
AC_SUBST(ocs_DEFS)
AC_DEFUN(OCS_DEFINE_GENERAL, [ocs_DEFS="$ocs_DEFS -D$1"])


dnl Try from a sequence of compiler flags the first which is accepted
AC_DEFUN(OCS_TRY_CC_FLAGS,
[AC_CACHE_VAL($1,
  [$1=
  for ocs_flag in $2
  do 
    cat > conftest.c <<EOF
int main() {return 0;}
EOF
    if test -z "`$CC -c $ocs_flag conftest.c 2>&1 1>/dev/null`"
    then
      $1="$ocs_flag"
      break
    fi
  done
  rm -f conftest* a.out
  if test -n "[$]$1" && test -n "$3"
  then
    ocs_act="$3"
  else
    if test -z "[$]$1" && test -n "$4"
    then
      ocs_act="$4"
    else
      ocs_act=":"
    fi
  fi
  $ocs_act]
)])

dnl Check for a feature
dnl   external name, internal name, default-value, help-text
AC_DEFUN(OCS_CHECK_FEATURE,[
  AC_MSG_CHECKING(feature $1)
  AC_ARG_ENABLE($1, [$4],
    ocs_cv_feature_$2=[$]enableval,
    AC_CACHE_VAL(ocs_cv_feature_$2,ocs_cv_feature_$2=$3)
  )
  AC_MSG_RESULT([$]ocs_cv_feature_$2)]
)

dnl check for flags of additional software
dnl package name, internal name, default value, help-text
AC_DEFUN(OCS_CHECK_WITH,[
  AC_MSG_CHECKING(flags $1)
  AC_ARG_WITH($1, [$4], ocs_cv_with_$2=[$]withval,
              AC_CACHE_VAL(ocs_cv_with_$2,ocs_cv_with_$2=$3)
  )
  AC_MSG_RESULT([$]ocs_cv_with_$2)]
)


dnl Search for a program depending on feature absolute-pathes
dnl   variable, list of possible names, action if not found
AC_DEFUN(OCS_CHECK_PROGS,[
  if test "[$]ocs_cv_feature_absolute_pathes" = yes
  then
     AC_PATH_PROGS([$1], [$2], [$3])
  else
     AC_CHECK_PROGS([$1], [$2], [$3])
  fi]
)

dnl Search for a program depending on feature absolute-pathes
dnl   variable, list of possible names, abort message if not found
AC_DEFUN(OCS_CHECK_PROGS_ABORT,[
  if test "[$]ocs_cv_feature_absolute_pathes" = yes
  then
     AC_PATH_PROGS([$1], [$2], "")
  else
     AC_CHECK_PROGS([$1], [$2], "")
  fi]
  if test -z "[$]$1" 
  then  
  AC_MSG_ERROR($3)
  fi
)

dnl Search for a program depending on feature absolute-pathes
dnl   variable, list of possible names, action if not found
AC_DEFUN(OCS_CHECK_OPT_PROGS,[
  if test "[$]ocs_cv_feature_absolute_pathes" = yes
  then
     AC_PATH_PROGS([$1], [$2])
  else
     AC_CHECK_PROGS([$1], [$2])
  fi
  if test -z "$1"       
  then
  AC_MSG_WARN(could not find $2. This restricts the usability of Dosfop.)
  fi
]
)

dnl check for setting of a feature. if not set, but we have GNU CC,
dnl substitute default. otherwise stop with error message
AC_DEFUN(OCS_CHECK_FEATURE_GNU,[
  AC_MSG_CHECKING($3)
  if test -z "[$]ocs_cv_feature_$1"
  then
    if test "[$]GCC" = "yes"
    then
      ocs_cv_feature_$1=$2
    fi
  fi
  if test -z "[$]ocs_cv_feature_$1"
  then
    AC_MSG_ERROR(cannot figure out $3 - use -enable-$1=XXX)
  else
    AC_MSG_RESULT($ocs_cv_feature_$1)
  fi
  AC_SUBST(ocs_cv_feature_$1)
])      

AC_DEFUN(OCS_SET_FEATURE,[
  ocs_cv_feature_$1=$2
  AC_SUBST(ocs_cv_feature_$1)
])

AC_DEFUN(OCS_SET_WITH,[
  ocs_cv_with_$1=$2
  AC_SUBST(ocs_cv_with_$1)
])

dnl if library is not used do not make target
dnl library/make-target
AC_DEFUN(OCS_CHECK_LIB,[
  if test "[$]ocs_cv_with_$1_lib" = "no" -o "[$]ocs_cv_with_$1_incl" = "no"
  then
    AC_MSG_CHECKING(disabling $1 library)
  else
    ocs_std_packages="[$]ocs_std_packages $2"
  fi
])

dnl clear variable (third argument) if lib not used
dnl if used, add second argument to STD_PACKAGES
AC_DEFUN(OCS_CHECK_LIB_X,[
  if test "[$]ocs_cv_with_$1_lib" = "no" -o "[$]ocs_cv_with_$1_incl" = "no"
  then
    AC_MSG_CHECKING(disabling $1 library)
    $3=
  else
    ocs_std_packages="[$]ocs_std_packages $2"
  fi
])

dnl clear variable 1, if variable 2 is empty and put out a warning message
AC_DEFUN(OCS_CHECK_DEP,[
  if test -z "[$]$2"
  then
  $1=
  AC_MSG_WARN(disabling $3)
  fi
  ])

AC_DEFUN(OCS_CHECK_DEP_ERR,[
  if test -z "[$]$1"
  then
  AC_MSG_ERROR($2)
  fi
])

dnl include-flags, header-file, variable
AC_DEFUN(OCS_CHECK_HEADER,[
  ocs_save_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="[$]CPPFLAGS $1"
  AC_CHECK_HEADER($2,$3=$1,not_found=yes)    
  CPPFLAGS=$ocs_save_CPPFLAGS
])

AC_DEFUN(OCS_OUTPUT,[
  ocs_output_files="[$]ocs_output_files $1"
])

dnl This function seems to be new in autoconf 2.13
dnl so we copy it here under a different name
dnl AC_TRY_LINK_FUNC(func, action-if-found, action-if-not-found)
dnl Try to link a program that calls FUNC, handling GCC builtins.  If
dnl the link succeeds, execute ACTION-IF-FOUND; otherwise, execute
dnl ACTION-IF-NOT-FOUND.

AC_DEFUN(OCS_TRY_LINK_FUNC,
AC_TRY_LINK(dnl
ifelse([$1], [main], , dnl Avoid conflicting decl of main.
[/* Override any gcc2 internal prototype to avoid an error.  */
]dnl
[/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char $1();
]),
[$1()],
[$2],
[$3]))


# -------------------------------------------------------------------------
# Checking features 
# export features
AC_SUBST(ocs_cv_feature_dynamic)
AC_SUBST(ocs_cv_feature_absolute_pathes)
AC_SUBST(ocs_cv_feature_doc)
AC_SUBST(ocs_cv_feature_oasys)
AC_SUBST(ocs_cv_feature_dosfop)
AC_SUBST(ocs_cv_feature_opalwin)
AC_SUBST(ocs_cv_feature_reflections)
AC_SUBST(ocs_cv_feature_tivi2)
AC_SUBST(ocs_cv_feature_opaljava)
AC_SUBST(ocs_cv_feature_oc5)
AC_SUBST(ocs_cv_feature_proofchecker)

OCS_CHECK_FEATURE(dynamic, dynamic, yes,
        [  --enable-dynamic        use dynamic linking  (yes)])

OCS_CHECK_FEATURE(m32, m32_mode, no,
        [  --enable-m32            force 32-bit mode  (no)])

OCS_CHECK_FEATURE(absolute-pathes, absolute_pathes, yes,
        [  --enable-absolute-pathes  burn absolute pathes to tools  (yes)])

OCS_CHECK_FEATURE(doc, doc, no,
        [  --enable-doc            install documentation  (no)])

OCS_CHECK_FEATURE(oasys, oasys, $featureflag,
        [  --enable-oasys          install Oasys interpreter  (yes [no for cygwin])])

OCS_CHECK_FEATURE(dosfop, dosfop, no,
        [  --enable-dosfop         install Dosfop documentation system  (no)])

OCS_CHECK_FEATURE(opalwin, opalwin, $featureflag,
        [  --enable-opalwin        install OpalWin library  (yes [no for cygwin])])

OCS_CHECK_FEATURE(reflections, reflections, yes,
        [  --enable-reflections    install Dynamite Opal reflection library  (yes)])

OCS_CHECK_FEATURE(tivi2, tivi2, $featureflag,
        [  --enable-tivi2          install TIVI2 InterOpal viewer  (yes [no for cygwin])])

OCS_CHECK_FEATURE(opaljava, opaljava, no,
        [  --enable-opaljava       install Opal/Java library  (no)])

OCS_CHECK_FEATURE(oc5, oc5, no,
        [  --enable-oc5            install alternative frontend  (no)])

OCS_CHECK_FEATURE(proofchecker, proofchecker, no,
        [  --enable-proofchecker   install Oasys with integrated proof checker  (no)])


## check explicit given flags

OCS_CHECK_WITH(cflags, cflags, no,
  [  --with-cflags=FLAGS     pass FLAGS on C compilation])

OCS_CHECK_WITH(ldflags, ldflags, no,
  [  --with-ldflags=FLAGS    pass FLAGS on linkage])

OCS_CHECK_WITH(libs, libs, no,
  [  --with-libs=LIBS        use LIBS on linkage])

OCS_CHECK_WITH(dldflags, dldflags, no,
  [  --with-dldlflags=FLAGS  pass FLAGS on linkage of dynamic])

OCS_CHECK_WITH(dldlibs, dldlibs, no,
  [  --with-dldlibs=LIBS     use LIBS on linkage of dynamic])

OCS_CHECK_WITH(ldrpath, ldrpath, "",
  [  --with-ldrpath=FLAGS    specify how to add directory to linker's runtime library search path])

OCS_CHECK_WITH(ldrpathlink, ldrpathlink, "",
  [  --with-ldrpathlink=FLAGS  specify how to add directory to linker's link time library search path])

OCS_CHECK_WITH(soname, soname, "",
  [  --with-soname=FLAGS     specify how to set internal SONAME field])

OCS_CHECK_WITH(ldstatic, ldstatic, "",
  [  --with-ldstatic=FLAGS   specify how to mark static link targets])

OCS_CHECK_WITH(lddynamic, lddynamic, "",
  [  --with-lddynamic=FLAGS  specify how to mark dynamic link targets])

# readline library
OCS_CHECK_WITH(readline-lib, readline_lib, "yes",
  [  --with-readline-lib=LIBFLAGS    how to link readline library])

OCS_CHECK_WITH(readline-incl, readline_incl, "yes",
  [  --with-readline-incl=INCLFLAGS  how to include readline/readline.h])

# tcllibrary
OCS_CHECK_WITH(tcl-lib, tcl_lib, "yes",
  [  --with-tcl-lib=LIBFLAGS         how to link Tcl library])

OCS_CHECK_WITH(tcl-incl, tcl_incl, "yes",
  [  --with-tcl-incl=INCLFLAGS       how to include tcl.h])


# tk library
OCS_CHECK_WITH(tk-lib, tk_lib, "$featureflag",
  [  --with-tk-lib=LIBFLAGS          how to link Tk library])
OCS_CHECK_WITH(tk-incl, tk_incl, "$featureflag",
  [  --with-tk-incl=INCLFLAGS        how to include tk.h])

# java
OCS_CHECK_WITH(java-lib, java_lib, "$featureflag",
  [  --with-java-lib=LIBFLAGS        how to link Java library])

OCS_CHECK_WITH(java-incl, java_incl, "$featureflag",
  [  --with-java-incl=INCLFLAGS      how to include jni.h])

OCS_CHECK_WITH(pizzahome, pizzahome, "$featureflag",
  [  --with-pizzahome=PATH           path to pizza home directory])

AC_CACHE_SAVE

## Check which packages are included
AC_SUBST(ocs_std_packages)
ocs_std_packages=lib.opal_parserlight

ocs_lib_readline=X
ocs_lib_java=X
ocs_lib_tcl=X
ocs_lib_tk=X

AC_SUBST(ocs_c_option_m32)
ocs_c_option_m32=""

if test "$ocs_cv_feature_m32_mode" = "no"
  then
    ocs_c_option_m32=""
  else
    ocs_c_option_m32="-m32"
  fi 

if test -z "$CYGWIN" 
then
  OCS_CHECK_LIB_X(readline, lib.opal_readline, ocs_lib_readline)
fi

if test -z "$CYGWIN" 
then
  if test "$ocs_cv_feature_opaljava" = "yes"
  then
    ocs_std_packages="$ocs_std_packages pkg.javabind lib.opal_java"
  fi
fi

if test -z "$CYGWIN"
then
  OCS_CHECK_LIB_X(tcl, lib.opal_tcl, ocs_lib_tcl)
  OCS_CHECK_LIB_X(tk, lib.opal_tk, ocs_lib_tk)

  AC_SUBST(ocs_lib_win)
  ocs_lib_win=lib.opal_win
  OCS_CHECK_DEP(ocs_lib_win, ocs_lib_tcl, Opal Windows)
  OCS_CHECK_DEP(ocs_lib_win, ocs_lib_tk, Opal Windows)
  if test -n "$ocs_lib_win"
  then
    ocs_std_packages="$ocs_std_packages lib.opal_win"
  fi
fi

AC_SUBST(ocs_pkg_reflections)
if test "$ocs_cv_feature_reflections" != "no"
then
  ocs_std_packages="$ocs_std_packages pkg.dynamite lib.oc_reflections"
fi

ocs_std_packages="$ocs_std_packages pkg.browser pkg.emacs pkg.kde pkg.vim"

AC_SUBST(ocs_pkg_dosfop)
if test "$ocs_cv_feature_dosfop" != "no"
then
ocs_std_packages="$ocs_std_packages pkg.dosfop"
fi

AC_SUBST(ocs_pkg_doc)
if test "$ocs_cv_feature_doc" != "no"
then
  if test "$ocs_cv_feature_dosfop" = "no"
  then
    AC_MSG_ERROR("cannot install documentation without dosfop")
  fi
  if test "$CYGWIN" = "yes" 
  then
    AC_MSG_ERROR("cannot generate documentation on cygwin systems")
  else
    ocs_std_packages="$ocs_std_packages pkg.doc"
  fi
   	
fi

ocs_std_packages="$ocs_std_packages pkg.ordinatrice"

if test -z "$CYGWIN"
then
  AC_SUBST(ocs_pkg_oasys)
  if test "$ocs_cv_feature_oasys" != "no"
  then
    if test "$ocs_cv_feature_dynamic" = "no"
    then
      AC_MSG_ERROR(Oasys needs dynamic linking)
    fi 
  dnl  OCS_CHECK_DEP_ERR(ocs_lib_readline, "Oasys depends on readline")
    if test -z "$ocs_lib_readline"
    then
      AC_MSG_WARN(disabling fancy input for Oasys)
    fi
    OCS_CHECK_DEP_ERR(ocs_lib_tcl, Oasys depends on Tcl)
    ocs_std_packages="$ocs_std_packages lib.oasys_shared lib.oasys_main pkg.oasys pkg.evaluator"
  fi
fi

if test -z "$CYGWIN"
then
  AC_SUBST(ocs_pkg_tivi2)
  if test "$ocs_cv_feature_tivi2" = "yes"
  then
    ocs_pkg_tivi2=pkg.tivi2
    OCS_CHECK_DEP(ocs_pkg_tivi2, ocs_lib_win, tivi2)
    if test -n "$ocs_pkg_tivi2"
    then
      ocs_std_packages="$ocs_std_packages pkg.tivi2"
    fi
  fi
fi

if test "$ocs_cv_feature_oc5" != "no"
then
  ocs_std_packages="$ocs_std_packages pkg.oc5"
fi

if test -z "$CYGWIN"
then
  if test "$ocs_cv_feature_proofchecker" != "no"
  then
    if test "$ocs_cv_feature_oasys" != "no"
    then
      ocs_std_packages="$ocs_std_packages lib.oasys_pc pkg.oasyspc lib.oasys_prooflib"
    else
      AC_MSG_ERROR(Proofchecker requires Oasys)
    fi
  fi
fi

AC_CACHE_SAVE

# -------------------------------------------------------------------------
# Checks for C compiler characteristics and general configuration

AC_SUBST(ocs_CC)
AC_SUBST(ocs_cv_flag_cc_opt)
AC_SUBST(ocs_cv_flag_cc_debug)
AC_SUBST(ocs_cv_flag_cc_profile)

# Hack (magr, 2003-10-31):
# Here the variable $ac_cv_prog_CC was used, which is not available
# under autoconf 2.57 anymore.
# ----------------------------v
dnl to add path
OCS_CHECK_PROGS(ac_cv_path_CC,$CC)

if test -z "$ac_cv_path_CC"
then
  ac_cv_path_CC="$ac_cv_prog_CC"
fi

if test "$ocs_cv_with_cflags" != no
then
  ocs_CC="$ac_cv_path_CC $ocs_c_option_m32 $ocs_cv_with_cflags"
else
  ocs_CC="$ac_cv_path_CC $ocs_c_option_m32"
fi
CC="$ocs_CC"
CFLAGS=

ocs_CC="$CC"


# Check how to run the preprocessor

AC_PROG_CPP



dnl # Check for POSIX.1

dnl It seems there is no canonical way to enable partial POSIX.1
dnl support on the diverse systems
dnl
dnl     NeXT, SunOS4.1.3        requires        -D_POSIX_SOURCE
dnl     DECStation (ULTIRX)     requires        -DPOSIX

dnl if test "$ISC" != yes
dnl then
dnl   AC_MSG_CHECKING(for POSIX.1 support)
dnl   AC_CACHE_VAL(ocs_cv_define_posix,
dnl     save_cppflags="$CPPFLAGS"
dnl     CPPFLAGS="$CPPFLAGS -D_POSIX_SOURCE"
dnl     AC_EGREP_CPP(has__POSIX_VERSION, 
dnl       [#include <unistd.h>
dnl        #ifdef _POSIX_VERSION
dnl          has__POSIX_VERSION
dnl        #endif],
dnl       ocs_cv_define_posix=yes, ocs_cv_define_posix=no
dnl     )
dnl     CPPFLAGS="$save_cppflags"
dnl   )
dnl   AC_MSG_RESULT($ocs_cv_define_posix)
dnl   if test "$ocs_cv_define_posix" = yes
dnl   then
dnl     ocs_CC="$ocs_CC -D_POSIX_SOURCE"
dnl     CC="$ocs_CC"
dnl     CPPFLAGS="$CPPFLAGS -D_POSIX_SOURCE"
dnl   fi
dnl fi




# Check if word sizes are as expected

AC_CHECK_SIZEOF(void *)
if test "$ac_cv_sizeof_void_p" -lt 4
then
   AC_MSG_ERROR(Sorry. You cannot use OCS at the moment
on systems with less than 32 bits per word.)
fi


# Check for C compiler optimization flags 

AC_MSG_CHECKING(C compiler optimization flags)
OCS_TRY_CC_FLAGS(ocs_cv_flag_cc_opt, -O2 -O)
AC_MSG_RESULT($ocs_cv_flag_cc_opt)
if test -z "$ocs_cv_flag_cc_opt"
then
  AC_MSG_WARN(cannot figure out how to optimize with $CC (will be disabled))
fi
AC_SUBST(ocs_cv_flag_cc_opt)


# Check for C compiler optimization flags for function alignment.
#
# This workaround is necessary for GCC > 3.1.2, because these compilers
# do not align functions at even addresses by default, thus breaking
# Opal's pointer tagging scheme for function pointers.  
#
# This bug was identified on 2003-10-31 by Andre Metzner, Stephan
# Frank and Martin Grabmueller

AC_MSG_CHECKING(C compiler function alignment flags)
OCS_TRY_CC_FLAGS(ocs_cv_flag_cc_align, [-falign-functions])
AC_MSG_RESULT($ocs_cv_flag_cc_align)
AC_SUBST(ocs_cv_flag_cc_align)


# Check for C compiler debugging flags 

AC_MSG_CHECKING(C compiler debugging flags)
OCS_TRY_CC_FLAGS(ocs_cv_flag_cc_debug, -g)
AC_MSG_RESULT($ocs_cv_flag_cc_debug)
if test -z "$ocs_cv_flag_cc_debug"
then
  AC_MSG_WARN(cannot figure out how to debug with $CC (will be disabled))
fi


# Check for C compiler profiling flags 

AC_MSG_CHECKING(C compiler profiling flags)
OCS_TRY_CC_FLAGS(ocs_cv_flag_cc_profile, "-g -pg" "-g -p")
AC_MSG_RESULT($ocs_cv_flag_cc_profile)
if test -z "$ocs_cv_flag_cc_profile"
then
  AC_MSG_WARN(cannot figure out how to profile with $CC (will be disabled))
fi


# Check if we have to align doubles - always set currently

OCS_DEFINE_GENERAL(_ALIGN_DOUBLE_)

AC_CACHE_SAVE

# -------------------------------------------------------------------------
# Check linker and libraries

AC_SUBST(ocs_LD)
AC_SUBST(ocs_LIBS)

if test "$ocs_cv_with_ldflags" != no
then
  ocs_LD="$ac_cv_path_CC $ocs_cv_with_ldflags"
  LDFLAGS="$ocs_cv_with_ldflags"
else
  ocs_LD="$ac_cv_path_CC"
  LDFLAGS=
fi

if test "$ocs_cv_with_libs" != no
then
  ocs_LIBS="$ocs_cv_with_libs"
else
  AC_CHECK_LIB(m, main, ocs_LIBS="$ocs_LIBS -lm")
  if test "$ocs_cv_feature_dynamic" = yes
  then
      AC_CHECK_LIB(dl, main, ocs_LIBS="$ocs_LIBS -ldl")
  fi
fi

case "$ocs_LIBS" in
  *-lm*)
    ;;
  *)
    AC_MSG_WARN(-lm not provided)
    ;;
esac

LIBS="$ocs_LIBS"

if test "$ocs_cv_with_libs" != no
then 
  AC_MSG_CHECKING(whether $ocs_LIBS links)
  AC_TRY_LINK(,[return 0;],AC_MSG_RESULT(yes), AC_MSG_RESULT(no))
fi

AC_CACHE_SAVE

# -------------------------------------------------------------------------
# Check for dynamic linker

AC_SUBST(ocs_DLD)
AC_SUBST(ocs_DLDLIBS)
AC_SUBST(ocs_cv_flag_cc_pic)
AC_SUBST(ocs_cv_flag_cc_shared)
AC_SUBST(ocs_LD)
AC_SUBST(ocs_cv_with_ldstatic)
AC_SUBST(ocs_cv_with_lddynamic)
AC_SUBST(ocs_cv_with_ldrpath)
AC_SUBST(ocs_cv_with_ldrpathlink)
AC_SUBST(ocs_cv_with_soname)

if test "$ocs_cv_feature_dynamic" = "yes"
then

  AC_MSG_CHECKING(how to produce position-independent code)
  if test "$ac_cv_prog_gcc" = yes
  then
    OCS_TRY_CC_FLAGS(ocs_cv_flag_cc_pic, -fPIC -fpic)
  else
    OCS_TRY_CC_FLAGS(ocs_cv_flag_cc_pic, -PIC -pic "-K PIC" "-K pic")
  fi
  AC_MSG_RESULT($ocs_cv_flag_cc_pic)
  if test -z "$ocs_cv_flag_cc_pic"
  then
    AC_MSG_WARN(cannot figure out how to produce position-independent code (ignored))
  fi

  if test "$ocs_cv_with_dldflags" = no
  then
    AC_MSG_CHECKING(how to link shared objects)
    OCS_TRY_CC_FLAGS(ocs_cv_flag_cc_shared, -shared)
    AC_MSG_RESULT($ocs_cv_flag_cc_shared)
    if test -z "$ocs_cv_flag_cc_shared"
    then
      AC_MSG_WARN(cannot figure out how to link shared objects (ignored))
    fi
    ocs_DLD="$ac_cv_path_CC $ocs_LDFLAGS $ocs_cv_flag_cc_shared"
  else
    ocs_DLD="$ac_cv_path_CC $ocs_LDFLAGS $ocs_cv_with_dldflags"
  fi

  if test "$ocs_cv_with_dldlibs" != no
  then
    ocs_DLDLIBS="$ocs_LIBS $ocs_cv_with_dldlibs"
  else
    ocs_DLDLIBS="$ocs_LIBS"
  fi

  OCS_CHECK_PROGS(ac_cv_path_LD, ld)
  AC_MSG_CHECKING(what flags your linker needs for shared libraries)
  ocs_found=no
  AC_SUBST(ocs_cv_with_ldrpath)
  AC_SUBST(ocs_cv_with_ldrpathlink)
  AC_SUBST(ocs_cv_with_soname)
  AC_SUBST(ocs_cv_with_ldstatic)
  AC_SUBST(ocs_cv_with_lddynamic)

  if test -n "$ocs_cv_with_ldrpath" -a \
          -n "$ocs_cv_with_ldrpathlink" -a \
          -n "$ocs_cv_with_soname" -a \
          -n "$ocs_cv_with_ldstatic" -a \
          -n "$ocs_cv_with_lddynamic"
  then
    ocs_found=yes
    AC_MSG_RESULT(explicitly provided)
    ocs_save_LIBS=$LIBS
    LIBS="$LIBS -ldl"
    AC_CHECK_FUNCS(dlopen)
    LIBS=$ocs_save_LIBS
  fi

  # do we have the GNU linker?
  if test "$ocs_found" = no 
  then
    if $ac_cv_path_LD -V 2>&1 | grep "GNU" 1> /dev/null 2>&1
    then
      AC_MSG_RESULT(GNU linker flags)
      ocs_found=yes
      OCS_SET_WITH(ldrpath,[-Wl,-rpath,])
      OCS_SET_WITH(ldrpathlink, [-Wl,-rpath-link,])
      OCS_SET_WITH(soname,[-Wl,-soname,])
      OCS_SET_WITH(ldstatic, "-Xlinker -Bstatic")
      OCS_SET_WITH(lddynamic, "-Xlinker -Bdynamic")
      ocs_save_LIBS=$LIBS
      LIBS="$LIBS -ldl"
      AC_CHECK_FUNCS(dlopen)
      LIBS=$ocs_save_LIBS
    fi
  fi
  # do we have the solaris linker?
  if test "$ocs_found" = no 
  then
    if $ac_cv_path_LD -V 2>&1| grep "Solaris" 1> /dev/null 2>&1
    then
      AC_MSG_RESULT(Solaris linker flags)
      ocs_found=yes
      OCS_SET_WITH(ldrpath,[-Wl,-R])
      OCS_SET_WITH(ldrpathlink,[-Wl,-R])
      OCS_SET_WITH(soname,[-Wl,-h])
      OCS_SET_WITH(ldstatic, [-Wl,-B,static])
      OCS_SET_WITH(lddynamic, [-Wl,-B,dynamic])
      ocs_save_LIBS=$LIBS
      LIBS="$LIBS -ldl"
      AC_CHECK_FUNCS(dlopen)
      LIBS=$ocs_save_LIBS
    fi 
  fi

  if test "$ocs_found" = no
  then
    AC_MSG_ERROR(cannot find out what flags your linker needs.)
  fi 

  ocs_LD="$ocs_CC $ocs_cv_with_ldrpath\${OCSLIBPATH} $ocs_cv_with_ldrpathlink\${OCSLIBPATH}"
else
  dnl no dynamic linker
  ocs_LD=$ocs_CC        
fi

AC_CACHE_SAVE

# -------------------------------------------------------------------------
# Check for basic includes

AC_HEADER_STDC
if test "$ac_cv_header_stdc" = no
then
  AC_MSG_WARN(seem to have no STDC headers (might cause problems))
fi

AC_CHECK_HEADERS(unistd.h memory.h)


AC_CACHE_SAVE
# -------------------------------------------------------------------------
# Check system types

AC_CHECK_HEADERS(sys/types.h limits.h)

AC_TYPE_UID_T
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_SIGNAL
AC_TYPE_GETGROUPS

AC_CACHE_SAVE
# -------------------------------------------------------------------------
# Check user and groups

AC_CHECK_HEADERS(pwd.h grp.h)

# -------------------------------------------------------------------------
# Check process control facilities

AC_HEADER_SYS_WAIT

# -------------------------------------------------------------------------
# Check time facilities and stat

AC_CHECK_HEADERS(sys/time.h sys/times.h sys/stat.h utime.h)
AC_HEADER_TIME
AC_FUNC_UTIME_NULL

if test "$ocs_cv_feature_proofchecker" != "no"
then
  AC_CHECK_FUNCS(gettimeofday, ocs_found=yes, ocs_found=no)
  if test "$ocs_found" = "no"
  then
    AC_MSG_ERROR(proofchecker employs gettimeofday function / disable proofchecker)
  fi
fi
  

# -------------------------------------------------------------------------
# Check for dirent

AC_HEADER_DIRENT

AC_CACHE_SAVE
# -------------------------------------------------------------------------
# Check for float ranges

AC_MSG_CHECKING(for DBL_MAX et al. in <float.h>)
AC_EGREP_CPP(has__DBL_MAX, 
  [#include <stdlib.h>
#include <float.h>
#ifdef DBL_MAX 
  has__DBL_MAX
#endif
  ], 
  [AC_MSG_RESULT(yes)
  AC_DEFINE(HAVE_DBL_MAX)], 
  [AC_MSG_RESULT(no)
  AC_MSG_CHECKING(for MAXDOUBLE et al. in <values.h>)
  AC_EGREP_CPP(has__MAXDOUBLE, 
    [#include <stdlib.h>
#include <values.h>
#ifdef MAXDOUBLE 
  has__MAXDOUBLE
#endif
    ], 
    [AC_MSG_RESULT(yes)
    AC_DEFINE(HAVE_MAXDOUBLE)],
    AC_MSG_RESULT(no)
  )]
)

# -------------------------------------------------------------------------
# Checks for library functions.

AC_CHECK_FUNCS(getcwd mkdir mkfifo rmdir times clock)
AC_CHECK_FUNCS(strerror strftime strtod difftime strdup)

if test "$ac_cv_func_strerror" = no
then
  AC_CHECK_FUNCS(sys_errlist)
fi


AC_FUNC_MEMCMP
if test "$ac_cv_func_memcmp_clean" = yes
then
  AC_DEFINE(HAVE_CLEAN_MEMCMP)
fi

AC_FUNC_GETPGRP


if test "$ocs_cv_with_dynamic" = yes
then
  AC_CHECK_FUNCS(dlopen)
  if test "$ac_cv_func_dlopen" = no
  then
    AC_MSG_WARN(cannot support runtime linking on this machine)
  fi
fi



# -------------------------------------------------------------------------
# Check for lex/flex

AC_SUBST(ac_cv_path_LEX)
AC_SUBST(ocs_cv_flag_cc_lexlib)

if test -z "$ac_cv_path_LEX"
then
  AC_PROG_LEX
  ocs_cv_flag_cc_lexlib="$LEXLIB"
  if test -z "$LEXLIB"
  then
    AC_MSG_WARN(Could not find a library for $ac_cv_prog_LEX. Falling back to lex with -ll.) 
    ac_cv_prog_LEX=lex
    ocs_cv_flag_cc_lexlib="-ll"
  fi
  OCS_CHECK_PROGS(ac_cv_path_LEX,$ac_cv_prog_LEX, [not found])
  if test "$ac_cv_path_LEX" = "not found"
  then
  AC_MSG_ERROR(cannot find flex or lex)
  fi
fi

AC_CACHE_SAVE

# -------------------------------------------------------------------------
# Check for archiver, nm, ranlib and strip

AC_SUBST(ac_cv_path_AR)
AC_SUBST(ac_cv_path_RANLIB)
AC_SUBST(ac_cv_path_UPDLIB)
AC_SUBST(ac_cv_path_STRIP)
AC_SUBST(ac_cv_path_NM)

OCS_CHECK_PROGS(ac_cv_path_AR,ar,no)
if test "$ac_cv_path_AR" = no
then
  AC_MSG_ERROR(cannot locate the archiver (ar) in your path)
fi

OCS_CHECK_PROGS(ac_cv_path_RANLIB,ranlib,:)
ac_cv_path_UPDLIB="$ac_cv_path_RANLIB"


OCS_CHECK_PROGS(ac_cv_path_STRIP,strip,:)
OCS_CHECK_PROGS(ac_cv_path_NM,nm,AC_MSG_ERROR("no nm program found"))

# -------------------------------------------------------------------------
# Check for gmake

AC_SUBST(ocs_GMAKE)

AC_MSG_CHECKING(for GNU make)
OCS_CHECK_PROGS(ac_cv_path_GMAKE, gmake make)

if $ac_cv_path_GMAKE --version 2>&1 | grep "GNU" 1>/dev/null 2>&1 
then
    if $ac_cv_path_GMAKE --version --no-print-directory 1>/dev/null 2>&1 
    then
      ocs_GMAKE="$ac_cv_path_GMAKE --no-print-directory"
    else
      ocs_GMAKE="$ac_cv_path_GMAKE"
    fi
else
   AC_MSG_ERROR($ac_cv_path_GMAKE seems not to be GNU make.
OCS cannot operate without GNU make.)
fi


AC_CACHE_SAVE
# -------------------------------------------------------------------------
# Checks for general UNIX tools

AC_SUBST(ac_cv_path_CD)
AC_SUBST(ac_cv_path_ECHO)
AC_SUBST(ac_cv_path_LS)
AC_SUBST(ac_cv_path_CAT)
AC_SUBST(ac_cv_path_DATE)
AC_SUBST(ac_cv_path_MKDIR)
AC_SUBST(ac_cv_path_CP)
AC_SUBST(ac_cv_path_RM)
AC_SUBST(ac_cv_path_MV)
# AC_SUBST(ac_cv_path_XARGS)
AC_SUBST(ac_cv_path_BASENAME)
AC_SUBST(ac_cv_path_SED)
# AC_SUBST(ac_cv_path_EXPR)
AC_SUBST(ac_cv_path_CHMOD)
AC_SUBST(ac_cv_path_CHGRP)
AC_SUBST(ac_cv_path_COMPRESS)
AC_SUBST(ac_cv_path_TAR)
AC_SUBST(ac_cv_path_CMP)
AC_SUBST(ac_cv_path_MAIL)
AC_SUBST(ac_cv_path_UUENCODE)
AC_SUBST(ac_cv_path_EDITOR)

ac_cv_path_CD=cd
ac_cv_path_ECHO=echo
OCS_CHECK_PROGS(ac_cv_path_LS,ls,[echo config error: no ls;exit 1: ])
OCS_CHECK_PROGS(ac_cv_path_CAT,cat,[echo config error: no cat;exit 1;: ])
OCS_CHECK_PROGS(ac_cv_path_DATE,date,:)
OCS_CHECK_PROGS(ac_cv_path_MKDIR,mkdir,[echo config error: no mkdir;exit 1;: ])
OCS_CHECK_PROGS(ac_cv_path_CP,cp,[echo config error: no cp;exit 1;: ])
OCS_CHECK_PROGS(ac_cv_path_RM,rm,[echo config error: no rm;exit 1;: ])
OCS_CHECK_PROGS(ac_cv_path_MV,mv,[echo config error: no mv;exit 1;: ])
# OCS_CHECK_PROGS(ac_cv_path_XARGS,xargs,[echo config error: no xargs;exit 1;: ])
OCS_CHECK_PROGS(ac_cv_path_BASENAME,basename,[echo config error: no basename;exit 1;: ])
OCS_CHECK_PROGS(ac_cv_path_SED,gsed sed,[echo config error: no sed;exit 1;: ])
# OCS_CHECK_PROGS(ac_cv_path_EXPR,expr,[echo config error: no expr;exit 1;: ])
OCS_CHECK_PROGS(ac_cv_path_CHMOD,chmod,:)
OCS_CHECK_PROGS(ac_cv_path_CHGRP,chgrp,:)
OCS_CHECK_PROGS(ac_cv_path_COMPRESS,bzip2 gzip,[echo config error: no bzip2/gzip;exit 1;: ])
OCS_CHECK_PROGS(ac_cv_path_TAR,gtar tar,:)
OCS_CHECK_PROGS(ac_cv_path_CMP,cmp,false)

not_found=no
OCS_CHECK_PROGS(ac_cv_path_MAIL, mail, not_found=yes)
OCS_CHECK_PROGS(ac_cv_path_UUENCODE, uuencode, not_found=yes)
OCS_CHECK_PROGS(ac_cv_path_EDITOR, vi, not_found=yes)
if test "$not_found" = "yes" 
then
  AC_MSG_WARN(ocs sendbug will not work properly)
fi

AC_SUBST(ocs_cv_compress_suffix)
tmp=`$ac_cv_path_BASENAME $ac_cv_path_COMPRESS`
if test "$tmp" = "gzip"
then
  ocs_cv_compress_suffix=gz
fi
if test "$tmp" = "bzip2"
then
  ocs_cv_compress_suffix=bz2
fi


## special needs for documentation / dosfop
AC_SUBST(ac_cv_path_PERL)
AC_SUBST(ac_cv_path_WISH)
AC_SUBST(ac_cv_path_TEX)
AC_SUBST(ac_cv_path_LATEX)
AC_SUBST(ac_cv_path_XDVI)
AC_SUBST(ac_cv_path_DVIPS)
AC_SUBST(ac_cv_path_TEXINDEX)
AC_SUBST(ac_cv_path_MAKEINFO)

if test "$ocs_cv_feature_dosfop" = "yes" -o "$ocs_cv_feature_reflections" = "yes" -o "$ocs_cv_feature_doc" = "yes"
then
  OCS_CHECK_PROGS_ABORT(ac_cv_path_PERL,perl,no perl interpreter found)
fi

if test "$ocs_cv_feature_dosfop" = "yes" -o "$ocs_cv_feature_doc" = "yes"
then 
  OCS_CHECK_PROGS_ABORT(ac_cv_path_WISH,wish,no wish interpreter found)
  OCS_CHECK_PROGS_ABORT(ac_cv_path_TEX,tex,no TeX found)
  OCS_CHECK_PROGS_ABORT(ac_cv_path_LATEX,latex,no LaTeX found)
  OCS_CHECK_PROGS_ABORT(ac_cv_path_DVIPS,dvips,no dvips found)
fi
OCS_CHECK_OPT_PROGS(ac_cv_path_XDVI,xdvi)
OCS_CHECK_OPT_PROGS(ac_cv_path_TEXINDEX,texindex)
OCS_CHECK_OPT_PROGS(ac_cv_path_MAKEINFO,makeinfo)

if test "$ocs_cv_feature_opaljava" = "yes"
then
  OCS_CHECK_PROGS_ABORT(ac_cv_path_JAVA, java, Opal-Java needs jvm)
  ocs_save_PATH=$PATH
  PATH=$PATH:/usr/local/java/javacc/bin:/usr/local/java/JavaCC/bin
  OCS_CHECK_PROGS(ac_cv_path_JAVACC, javacc, "")
  PATH=$ocs_save_PATH

  AC_SUBST(ac_cv_path_PIZZAHOME)
  ac_cv_path_PIZZAHOME=""
  if test "$ocs_cv_with_pizzahome" = "yes"
  then
    tmp_dir=/usr/local/pizza
    AC_MSG_CHECKING(for pizza in $tmp_dir)
    if test -f "$tmp_dir/classes/pizza/compiler/Main.class"
    then
      ac_cv_path_PIZZAHOME=$tmp_dir
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
    if test -z "$ac_cv_path_PIZZAHOME"
    then
      tmp_dir=/usr/local/java/pizza
      AC_MSG_CHECKING(for pizza in $tmp_dir)
      if test -f "$tmp_dir/classes/pizza/compiler/Main.class"
      then
        ac_cv_path_PIZZAHOME=$tmp_dir
        AC_MSG_RESULT(yes)
      else
        AC_MSG_RESULT(no)
      fi
    fi
    if test -z "$ac_cv_path_PIZZAHOME"
    then
      tmp_dir=/usr/java/pizza
      AC_MSG_CHECKING(for pizza in $tmp_dir)
      if test -f "$tmp_dir/classes/pizza/compiler/Main.class"
      then
        ac_cv_path_PIZZAHOME=$tmp_dir
        AC_MSG_RESULT(yes)
      else
        AC_MSG_RESULT(no)
      fi
    fi
  else
    AC_MSG_CHECKING(for pizza in given $ocs_cv_with_pizzahome)
    if test -f "$ocs_cv_with_pizzahome/classes/pizza/compiler/Main.class"
    then
      ac_cv_path_PIZZAHOME=$ocs_cv_with_pizzahome
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
  fi
#  if test -z "$ac_cv_path_PIZZAHOME" -o -z "$ac_cv_path_JAVACC"
#  then
#    echo "can not find javacc or pizzahome"
#    echo "This is not an error - you just won't be able to develop javabind."
#  fi
# if with-java    	
fi


## get absolute path for sourcedir
ocs_abssrcdir=`pwd`
AC_SUBST(ocs_abssrcdir)

AC_CACHE_SAVE
# ----------------------------------------------------------------------
# set standard search path for interopal files (needed for Reflections)
AC_SUBST(ocs_dl_path_std)
tmp_libpath=$prefix/ocs-$PACKAGE_VERSION/lib
ocs_dl_path_std=$tmp_libpath/opal_base
for i in opal_parserlight opal_readline opal_tcl opal_tk opal_win oc_oc1 oc_oc2 oc_reflections oc_shared oasys_shared oasys_main
do
  ocs_dl_path_std="$ocs_dl_path_std:$tmp_libpath/$i"
done

AC_CACHE_SAVE


# ------------------------------------------------------------ ----------
# check for readline library
ocs_lib_readline=
if test "$ocs_cv_with_readline_lib" != "no"
then
  AC_SUBST(ocs_lib_readline)
  if test "$ocs_cv_with_readline_lib" = "yes"
  then
    AC_CHECK_LIB(readline, readline,ocs_lib_readline="-lreadline -lncurses",,-lncurses)
    if test -z "$ocs_lib_readline"
    then
      dnl clear cache!
      unset ac_cv_lib_readline_readline
      echo "trying in /usr/local/lib ..."
      dnl früher war noch die Angabe -mimpure-text nötig?
      AC_CHECK_LIB(readline, readline,ocs_lib_readline="-L/usr/local/lib \${LDRPATH}/usr/local/lib -lreadline -ltermcap",,-ltermcap)
    fi
    if test -z "$ocs_lib_readline"
    then
      dnl clear cache!
      unset ac_cv_lib_readline_readline
      echo "trying in /lib ..."
       AC_CHECK_LIB(readline, readline,ocs_lib_readline="-L/lib -lreadline -lncurses",,-lncurses)
    fi
    if test -z "$ocs_lib_readline"
    then
      dnl clear cache!
      unset ac_cv_lib_readline_readline
      echo "trying in /opt/gnu/lib ..."
      dnl früher war noch die Angabe -mimpure-text nötig?
      AC_CHECK_LIB(readline, readline,ocs_lib_readline="-L/opt/gnu/lib \${LDRPATH}/opt/gnu/lib -lreadline -ltermcap",,-ltermcap)
    fi
    if test -z "$ocs_lib_readline"
    then
      dnl clear cache!
      unset ac_cv_lib_readline_readline
      echo "trying in /opt/csw/lib ..."
      ocs_save_LDFLAGS="$LDFLAGS"
      LDFLAGS="$LDFLAGS -L/opt/csw/lib"
      AC_CHECK_LIB(readline, readline,ocs_lib_readline="-L/opt/csw/lib \${LDRPATH}/opt/csw/lib -lreadline -ltermcap",,-ltermcap)
      LDFLAGS="$ocs_save_LDFLAGS"
    fi
  else
    ocs_lib_readline=   
    AC_CHECK_LIB(readline, readline, ocs_lib_readline="$ocs_cv_with_readline_lib",,$ocs_cv_with_readline_lib)
  fi    
  if test -z "$ocs_lib_readline"
  then
    AC_MSG_ERROR(cannot link readline library)
  fi
fi    

if test "$ocs_cv_with_readline_incl" != "no"
then
  AC_SUBST(ocs_incl_readline)
  not_found=no
  if test "$ocs_cv_with_readline_incl" = "yes"
  then
    OCS_CHECK_HEADER("", readline/readline.h, ocs_incl_readline)
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_readline_readline_h
      echo "trying in /usr/local/include ..."
      OCS_CHECK_HEADER("-I/usr/local/include",readline/readline.h,ocs_incl_readline) 
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_readline_readline_h
      echo "trying in /opt/gnu/include ..."
      OCS_CHECK_HEADER("-I/opt/gnu/include",readline/readline.h,ocs_incl_readline) 
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_readline_readline_h
      echo "trying in /opt/csw/include ..."
      OCS_CHECK_HEADER("-I/opt/csw/include",readline/readline.h,ocs_incl_readline) 
    fi
  else 
    not_found=no
    OCS_CHECK_HEADER($ocs_cv_with_readline_incl, readline/readline.h,ocs_incl_readline)
  fi 
  if test "$not_found" = "yes"
  then
    AC_MSG_ERROR(cannot find readline includes)
  fi
fi

AC_CACHE_SAVE
# ----------------------------------------------------------------------
# check for tcl library
ocs_lib_tcl=
if test "$ocs_cv_with_tcl_lib" != "no"
then
  AC_SUBST(ocs_lib_tcl)
  if test "$ocs_cv_with_tcl_lib" = "yes"
  then
    AC_CHECK_LIB(tcl, Tcl_CreateInterp,ocs_lib_tcl="-ltcl")
    if test -z "$ocs_lib_tcl"
    then
      AC_CHECK_LIB(tcl8.5, Tcl_CreateInterp,ocs_lib_tcl="-ltcl8.5")
    fi          
    if test -z "$ocs_lib_tcl"
    then
      AC_CHECK_LIB(tcl8.4, Tcl_CreateInterp,ocs_lib_tcl="-ltcl8.4")
    fi          
    if test -z "$ocs_lib_tcl"
    then
      AC_CHECK_LIB(tcl8.3, Tcl_CreateInterp,ocs_lib_tcl="-ltcl8.3")
    fi          
    if test -z "$ocs_lib_tcl"
    then
      AC_CHECK_LIB(tcl8.2, Tcl_CreateInterp,ocs_lib_tcl="-ltcl8.2")
    fi          
    if test -z "$ocs_lib_tcl"
    then
      AC_CHECK_LIB(tcl8.0, Tcl_CreateInterp,ocs_lib_tcl="-ltcl8.0")
    fi          
    if test -z "$ocs_lib_tcl"
    then
      AC_CHECK_LIB(tcl80, Tcl_CreateInterp,ocs_lib_tcl="-ltcl80")
    fi          
    if test -z "$ocs_lib_tcl"
    then
      AC_CHECK_LIB(tcl7.6, Tcl_CreateInterp,ocs_lib_tcl="-ltcl7.6")
    fi          
    if test -z "$ocs_lib_tcl"
    then
      dnl clear cache!
      unset ac_cv_lib_tcl_Tcl_CreateInterp
      unset ac_cv_lib_tcl8_4_Tcl_CreateInterp
      unset ac_cv_lib_tcl8_3_Tcl_CreateInterp
      unset ac_cv_lib_tcl8_2_Tcl_CreateInterp
      unset ac_cv_lib_tcl8_0_Tcl_CreateInterp
      unset ac_cv_lib_tcl7_6_Tcl_CreateInterp
      ocs_save_LIBS="$LIBS"
      LIBS="$LIBS -L/usr/tcl/lib"
      echo "trying in /usr/tcl/lib ..."
      AC_CHECK_LIB(tcl, Tcl_CreateInterp,ocs_lib_tcl="-L/usr/tcl/lib $ocs_cv_with_ldrpath/usr/tcl/lib -ltcl")
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.5, Tcl_CreateInterp,ocs_lib_tcl="-L/usr/tcl/lib $ocs_cv_with_ldrpath/usr/tcl/lib -ltcl8.5")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.4, Tcl_CreateInterp,ocs_lib_tcl="-L/usr/tcl/lib $ocs_cv_with_ldrpath/usr/tcl/lib -ltcl8.4")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.3, Tcl_CreateInterp,ocs_lib_tcl="-L/usr/tcl/lib $ocs_cv_with_ldrpath/usr/tcl/lib -ltcl8.3")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.2, Tcl_CreateInterp,ocs_lib_tcl="-L/usr/tcl/lib $ocs_cv_with_ldrpath/usr/tcl/lib -ltcl8.2")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.0, Tcl_CreateInterp,ocs_lib_tcl="-L/usr/tcl/lib $ocs_cv_with_ldrpath/usr/tcl/lib -ltcl8.0")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl7.6, Tcl_CreateInterp,ocs_lib_tcl="-L/usr/tcl/lib $ocs_cv_with_ldrpath/usr/tcl/lib -ltcl7.6")
      fi                
      LIBS=$ocs_save_LIBS
    fi          
    if test -z "$ocs_lib_tcl"
    then
      dnl clear cache!
      unset ac_cv_lib_tcl_Tcl_CreateInterp
      unset ac_cv_lib_tcl8_4_Tcl_CreateInterp
      unset ac_cv_lib_tcl8_3_Tcl_CreateInterp
      unset ac_cv_lib_tcl8_2_Tcl_CreateInterp
      unset ac_cv_lib_tcl8_0_Tcl_CreateInterp
      unset ac_cv_lib_tcl7_6_Tcl_CreateInterp
      ocs_save_LIBS="$LIBS"
      LIBS="$LIBS -L/opt/tcl/lib"
      echo "trying in /opt/tcl/lib ..."
      AC_CHECK_LIB(tcl, Tcl_CreateInterp,ocs_lib_tcl="-L/opt/tcl/lib $ocs_cv_with_ldrpath/opt/tcl/lib -ltcl")
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.5, Tcl_CreateInterp,ocs_lib_tcl="-L/opt/tcl/lib $ocs_cv_with_ldrpath/opt/tcl/lib -ltcl8.5")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.4, Tcl_CreateInterp,ocs_lib_tcl="-L/opt/tcl/lib $ocs_cv_with_ldrpath/opt/tcl/lib -ltcl8.4")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.3, Tcl_CreateInterp,ocs_lib_tcl="-L/opt/tcl/lib $ocs_cv_with_ldrpath/opt/tcl/lib -ltcl8.3")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.2, Tcl_CreateInterp,ocs_lib_tcl="-L/opt/tcl/lib $ocs_cv_with_ldrpath/opt/tcl/lib -ltcl8.2")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl8.0, Tcl_CreateInterp,ocs_lib_tcl="-L/opt/tcl/lib $ocs_cv_with_ldrpath/opt/tcl/lib -ltcl8.0")
      fi                
      if test -z "$ocs_lib_tcl"
      then
        AC_CHECK_LIB(tcl7.6, Tcl_CreateInterp,ocs_lib_tcl="-L/opt/tcl/lib $ocs_cv_with_ldrpath/opt/tcl/lib -ltcl7.6")
      fi                
      LIBS=$ocs_save_LIBS
    fi          
  else
    ocs_save_LIBS="$LIBS"
    LIBS="$LIBS $ocs_cv_with_tcl_lib"
    OCS_TRY_LINK_FUNC(Tcl_CreateInterp,ocs_lib_tcl=$ocs_cv_with_tcl_lib,:)
    LIBS="$ocs_save_LIBS"
  fi
  if test -z "$ocs_lib_tcl"
  then
    AC_ERROR(cannot link tcl library)
  fi
fi

if test "$ocs_cv_with_tcl_incl" != "no"
then
  AC_SUBST(ocs_incl_tcl)
  not_found=no
  if test "$ocs_cv_with_tcl_incl" = "yes"
  then
    unset ac_cv_header_tcl_h
    AC_CHECK_HEADER(tcl.h,ocs_incl_tcl="",not_found=yes)
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tcl_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying /usr/include ..."
      CPPFLAGS="$CFLAGS -I/usr/include"
      AC_CHECK_HEADER(tcl.h,ocs_incl_tcl="-I/usr/include",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tcl_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying /usr/tcl/include ..."
      CPPFLAGS="$CFLAGS -I/usr/tcl/include"
      AC_CHECK_HEADER(tcl.h,ocs_incl_tcl="-I/usr/tcl/include",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tcl_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying /opt/tcl/include ..."
      CPPFLAGS="$CFLAGS -I/opt/tcl/include"
      AC_CHECK_HEADER(tcl.h,ocs_incl_tcl="-I/opt/tcl/include",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tcl_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying /usr/include/tcl8.5 ..."
      CPPFLAGS="$CFLAGS -I/usr/include/tcl8.5"
      AC_CHECK_HEADER(tcl.h,ocs_incl_tcl="-I/usr/include/tcl8.5",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tcl_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying /usr/include/tcl8.4 ..."
      CPPFLAGS="$CFLAGS -I/usr/include/tcl8.4"
      AC_CHECK_HEADER(tcl.h,ocs_incl_tcl="-I/usr/include/tcl8.4",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tcl_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying /usr/include/tcl8.3 ..."
      CPPFLAGS="$CFLAGS -I/usr/include/tcl8.3"
      AC_CHECK_HEADER(tcl.h,ocs_incl_tcl="-I/usr/include/tcl8.3",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
  else
    OCS_CHECK_HEADER($ocs_cv_with_tcl_incl, tcl.h, ocs_incl_tcl)
  fi
  if test "$not_found" = "yes"
  then
    AC_MSG_ERROR(cannot find tcl includes)
  fi
fi

AC_CACHE_SAVE
# ----------------------------------------------------------------------
# check for tk library
ocs_lib_tk=
if test "$ocs_cv_with_tk_lib" != "no"
then
  X_CFLAGS=
  X_LIBS=
  X_EXTRA_LIBS=
  AC_SUBST(X_CFLAGS)
  AC_SUBST(X_LIBS)
  AC_SUBST(X_EXTRA_LIBS)
  AC_PATH_XTRA
  if test "$no_x" = "yes" 
  then
      AC_ERROR("need X libraries and include files for opal_tk library")
  else
    ocs_x11="$X_LIBS -lX11"
  fi
  AC_SUBST(ocs_lib_tk)
  if test "$ocs_cv_with_tk_lib" = "yes"
  then
    AC_CHECK_LIB(tk, Tk_MainWindow,ocs_lib_tk="-ltk",,$ocs_x11 $ocs_lib_tcl)
    if test -z "$ocs_lib_tk"
    then
    AC_CHECK_LIB(tk8.5, Tk_MainWindow,ocs_lib_tk="-ltk8.5",,$ocs_x11 $ocs_lib_tcl)
    fi          
    if test -z "$ocs_lib_tk"
    then
    AC_CHECK_LIB(tk8.4, Tk_MainWindow,ocs_lib_tk="-ltk8.4",,$ocs_x11 $ocs_lib_tcl)
    fi          
    if test -z "$ocs_lib_tk"
    then
    AC_CHECK_LIB(tk8.3, Tk_MainWindow,ocs_lib_tk="-ltk8.3",,$ocs_x11 $ocs_lib_tcl)
    fi          
    if test -z "$ocs_lib_tk"
    then
    AC_CHECK_LIB(tk8.2, Tk_MainWindow,ocs_lib_tk="-ltk8.2",,$ocs_x11 $ocs_lib_tcl)
    fi          
    if test -z "$ocs_lib_tk"
    then
    AC_CHECK_LIB(tk8.0, Tk_MainWindow,ocs_lib_tk="-ltk8.0",,$ocs_x11 $ocs_lib_tcl)
    fi          
    if test -z "$ocs_lib_tk"
    then
    AC_CHECK_LIB(tk80, Tk_MainWindow,ocs_lib_tk="-ltk80",,$ocs_x11 $ocs_lib_tcl)
    fi          
    if test -z "$ocs_lib_tk"
    then
    AC_CHECK_LIB(tk4.2, Tk_MainWindow,ocs_lib_tk="-ltk4.2",,$ocs_x11 $ocs_lib_tcl)
    fi
  else
    ocs_save_LIBS="$LIBS"
    LIBS="$LIBS $ocs_cv_with_tk_lib $X_LIBS -lX11 $ocs_lib_tcl"
    OCS_TRY_LINK_FUNC(Tk_MainWindow,ocs_lib_tk=$ocs_cv_with_tk_lib,:)
    LIBS="$ocs_save_LIBS"
  fi
  if test -z "$ocs_lib_tk"
  then
    AC_ERROR(cannot link tk library)
  fi
fi

if test "$ocs_cv_with_tk_incl" != "no"
then
  AC_SUBST(ocs_incl_tk)
  not_found=no
  if test "$ocs_cv_with_tk_incl" = "yes"
  then
    unset ac_cv_header_tk_h
    AC_CHECK_HEADER(tk.h,ocs_incl_tk="",not_found=yes)
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tk_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      CPPFLAGS="$CPPFLAGS $X_CFLAGS"
      echo "trying in X include directory ($X_CFLAGS) ..."
      AC_CHECK_HEADER(tk.h,ocs_incl_tk="$X_CFLAGS",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tk_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying in /usr/include ..."
      CPPFLAGS="$CPPFLAGS -I/usr/include"
      AC_CHECK_HEADER(tk.h,ocs_incl_tk="-I/usr/include",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tk_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying in /usr/tcl/include ..."
      CPPFLAGS="$CPPFLAGS -I/usr/tcl/include"
      AC_CHECK_HEADER(tk.h,ocs_incl_tk="-I/usr/tcl/include",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tk_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying in /opt/tcl/include ..."
      CPPFLAGS="$CPPFLAGS -I/opt/tcl/include"
      AC_CHECK_HEADER(tk.h,ocs_incl_tk="-I/opt/tcl/include",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tk_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying in /usr/include/tcl8.5 ..."
      CPPFLAGS="$CPPFLAGS -I/usr/include/tcl8.5"
      AC_CHECK_HEADER(tk.h,ocs_incl_tk="-I/usr/include/tcl8.5",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tk_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying in /usr/include/tcl8.4 ..."
      CPPFLAGS="$CPPFLAGS -I/usr/include/tcl8.4"
      AC_CHECK_HEADER(tk.h,ocs_incl_tk="-I/usr/include/tcl8.4",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      not_found=no
      unset ac_cv_header_tk_h
      ocs_save_CPPFLAGS=$CPPFLAGS
      echo "trying in /usr/include/tcl8.3 ..."
      CPPFLAGS="$CPPFLAGS -I/usr/include/tcl8.3"
      AC_CHECK_HEADER(tk.h,ocs_incl_tk="-I/usr/include/tcl8.3",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
  else
    ocs_save_CPPFLAGS=$CPPFLAGS
    CPPFLAGS="$CPPFLAGS $ocs_cv_with_tcl_incl"
    AC_CHECK_HEADER(tk.h,ocs_incl_tk="$ocs_cv_with_tcl_incl",not_found=yes)
    CPPFLAGS=$ocs_save_CPPFLAGS
  fi    
  if test "$not_found" = "yes"
  then
    AC_MSG_ERROR(cannot find tk includes)
  fi
fi

AC_CACHE_SAVE
## ----------------------------------------------------------------------
## check for java
if test "$ocs_cv_feature_opaljava" = "yes"
then
  ocs_lib_java=
  if test "$ocs_cv_with_java_lib" != "no"
  then
    dnl currently not used
    AC_SUBST(ocs_lib_java)
    if test "$ocs_cv_with_java_lib" = "yes"
    then
      ocs_lib_java=
      unset ac_cv_lib_java_JNI_CreateJavaVM
      AC_CHECK_LIB(java, JNI_CreateJavaVM, ocs_lib_java="-ljava")
      if test -z "$ocs_lib_java"
      then
        unset ac_cv_lib_java_JNI_CreateJavaVM
        ocs_save_LIBS="$LIBS"
        tmp_path=/usr/lib/java/lib/i686/green_threads
        echo "trying in $tmp_path ..."
        LIBS="$LIBS -L$tmp_path"
        AC_CHECK_LIB(java, JNI_CreateJavaVM, ocs_lib_java="-L$tmp_path $ocs_cv_with_ldrpath$tmp_path -ljava")
      fi
      if test -z "$ocs_lib_java"
      then
        unset ac_cv_lib_java_JNI_CreateJavaVM
        ocs_save_LIBS="$LIBS"
        tmp_path=/usr/lib/jdk1.1.7/lib/i686/green_threads
        echo "trying in $tmp_path ..."
        LIBS="$LIBS -L$tmp_path"
        AC_CHECK_LIB(java, JNI_CreateJavaVM, ocs_lib_java="-L$tmp_path $ocs_cv_with_ldrpath$tmp_path -ljava")
      fi
      if test -z "$ocs_lib_java"
      then
        unset ac_cv_lib_java_JNI_CreateJavaVM
        ocs_save_LIBS="$LIBS"
        tmp_path=/usr/lib/jdk1.1.6/lib/i686/green_threads
        echo "trying in $tmp_path ..."
        LIBS="$LIBS -L$tmp_path"
        AC_CHECK_LIB(java, JNI_CreateJavaVM, ocs_lib_java="-L$tmp_path $ocs_cv_with_ldrpath$tmp_path -ljava")
      fi
      if test -z "$ocs_lib_java"
      then
        unset ac_cv_lib_java_JNI_CreateJavaVM
        ocs_save_LIBS="$LIBS"
        tmp_path=/usr/java/1.1/lib
        echo "trying in $tmp_path ..."
        LIBS="$LIBS -L$tmp_path"
        AC_CHECK_LIB(java, JNI_CreateJavaVM, ocs_lib_java="-L$tmp_path $ocs_cv_with_ldrpath$tmp_path -ljava")
      fi
    else
      ocs_save_LIBS="$LIBS"
      LIBS="$LIBS $ocs_cv_with_java_lib"
      unset ac_cv_lib_java_JNI_CreateJavaVM
      AC_CHECK_LIB(JNI_CreateJavaVM,ocs_lib_java=$ocs_cv_with_java_lib)
      LIBS="$ocs_save_LIBS"
    fi
  fi
  if test -z "$ocs_lib_java"
  then
    AC_ERROR(cannot link java library)
  fi
  
  if test "$ocs_cv_with_java_incl" != "no"
  then
    AC_SUBST(ocs_incl_java)
    not_found=no
    if test "$ocs_cv_with_java_incl" = "yes"
    then
      unset ac_cv_header_jni_h
      AC_CHECK_HEADER(jni.h,ocs_incl_java="",not_found=yes)
      if test "$not_found" = "yes"
      then
        not_found=no
        unset ac_cv_header_jni_h
        ocs_save_CPPFLAGS=$CPPFLAGS
        tmp_path=/usr/lib/java
        echo "trying in $tmp_path ..."
        tmp_flags="-I$tmp_path/include -I$tmp_path/include/genunix -I$tmp_path/include/linux"
        CPPFLAGS="$CPPFLAGS $tmp_flags"
        AC_CHECK_HEADER(jni.h,ocs_incl_java="$tmp_flags",not_found=yes)
        CPPFLAGS=$ocs_save_CPPFLAGS
      fi
      if test "$not_found" = "yes"
      then
        not_found=no
        unset ac_cv_header_jni_h
        ocs_save_CPPFLAGS=$CPPFLAGS
        tmp_path=/usr/lib/jdk1.1.7
        echo "trying in $tmp_path ..."
        tmp_flags="-I$tmp_path/include -I$tmp_path/include/genunix -I$tmp_path/include/linux"
        CPPFLAGS="$CPPFLAGS $tmp_flags"
        AC_CHECK_HEADER(jni.h,ocs_incl_java="$tmp_flags",not_found=yes)
        CPPFLAGS=$ocs_save_CPPFLAGS
      fi
      if test "$not_found" = "yes"
      then
        not_found=no
        unset ac_cv_header_jni_h
        ocs_save_CPPFLAGS=$CPPFLAGS
        tmp_path=/usr/java/1.1
        echo "trying in $tmp_path ..."
        tmp_flags="-I$tmp_path/include -I$tmp_path/include/solaris"
        CPPFLAGS="$CPPFLAGS $tmp_flags"
        AC_CHECK_HEADER(jni.h,ocs_incl_java="$tmp_flags",not_found=yes)
        CPPFLAGS=$ocs_save_CPPFLAGS
      fi
    else
      ocs_save_CPPFLAGS=$CPPFLAGS
      CPPFLAGS="$CPPFLAGS $ocs_cv_with_java_incl"
      unset ac_cv_header_jni_h
      AC_CHECK_HEADER(jni.h,ocs_incl_java="$ocs_cv_with_java_incl",not_found=yes)
      CPPFLAGS=$ocs_save_CPPFLAGS
    fi
    if test "$not_found" = "yes"
    then
      AC_MSG_ERROR(cannot find java includes)
    fi
  fi
# enable java
fi
AC_CACHE_SAVE
## documentation ------------------------------------------------------------
AC_SUBST(ocs_doc_new23b)
AC_SUBST(ocs_doc_new23c)
AC_SUBST(ocs_doc_new23d)
AC_SUBST(ocs_doc_new23e)
AC_SUBST(ocs_doc_new23f)
AC_SUBST(ocs_doc_new23g)
dnl if string is nonempty, beginning space is important!
ocs_doc_new23b=""
ocs_doc_new23c=""
ocs_doc_new23d=""
ocs_doc_new23e=""
ocs_doc_new23f=""
ocs_doc_new23g=' (<img src="new.gif" alt="new"> in 2.3g)'

## case sensitivity of filenames
AC_SUBST(ocs_filenames_casefold)
if test "$host_os" = "cygwin"
then
  ocs_filenames_casefold="yes"
  OCS_DEFINE_GENERAL(OCS_FILENAMES_CASEFOLD)
  OCS_DEFINE_GENERAL(OCS_CYGWIN)
  AC_MSG_WARN(["need to rename and patch some files, because file names are not case sensitive"])
  sedcmd=""
  for structname in Denotation Bool Time Signal Wait ReadLine Tk Tcl Reflection
  do	
    sedcmd="$sedcmd -e s/$structname\\./${structname}_ocs./g"
  done
  for struct in src/lib/BasicTypes/Denotation src/lib/BasicTypes/Bool src/lib/System/Unix/Time src/lib/System/Unix/Signal src/lib/System/Unix/Wait src/lib/Tools/Tk/Tk src/lib/Tools/Tcl/Tcl src/lib/Tools/Readline/ReadLine 
  do
    for part in .sign .impl 
    do
      if test -r $struct$part
      then
        echo copying $struct$part ${struct}_ocs$part
        mv $struct$part ${struct}_ocs$part
	# touch -r $struct$part ${struct}_ocs$part
      fi
    done
    for part in .hc.c .hc.h 
    do
      if test -r $struct$part
      then
        echo copying $struct$part ${struct}_ocs$part
	sed $sedcmd < $struct$part > ${struct}_ocs$part
	touch -r $struct$part ${struct}_ocs$part
        rm $struct$part 
      fi
    done
    structdir=`dirname $struct`
    structname=`basename $struct`
    for part in .impl.deps .impl.inter .opt .sign.deps .sign.inter
    do
      if test -r ${structdir}/OCS/${structname}${part}
      then
        echo copying ${structdir}/OCS/${structname}${part} ${structdir}/OCS/${structname}_ocs${part} 
        mv ${structdir}/OCS/${structname}${part} ${structdir}/OCS/${structname}_ocs${part} 
        # touch -r ${structdir}/OCS/${structname}${part} ${structdir}/OCS/${structname}_ocs${part} 
      fi
    done
    for part in .c .h 
    do
      if test -r ${structdir}/OCS/${structname}${part}
      then
        echo copying ${structdir}/OCS/${structname}${part} ${structdir}/OCS/${structname}_ocs${part} 
	sed $sedcmd < ${structdir}/OCS/${structname}${part} > ${structdir}/OCS/${structname}_ocs${part} 
#        mv ${structdir}/OCS/${structname}${part} ${structdir}/OCS/${structname}_ocs${part} 
        touch -r ${structdir}/OCS/${structname}${part} ${structdir}/OCS/${structname}_ocs${part} 
        rm ${structdir}/OCS/${structname}${part}
      fi
    done
  done
# no need to add further systems here; 
# these are the only systems distribruted as C source code
  for system in src/lib/Internal/Strange src/lib/BasicTypes src/lib/Functions/General src/lib/Functions/Orderings src/lib/Functions/Special src/lib/AggregateTypes/ProductLike src/lib/AggregateTypes/UnionLike src/lib/AggregateTypes/SeqLike src/lib/AggregateTypes/TreeLike src/lib/AggregateTypes/SetLike src/lib/AggregateTypes/MapLike src/lib/AggregateTypes/Algorithms src/lib/System/Streams src/lib/System/Debugging src/lib/System/Commands src/lib/System/Runtime src/lib/System/Unix src/lib/Tools/Formatting src/om/genmake src/oc/oc1/reps src/oc/oc1/absy src/oc/oc1/anaLib src/oc/oc1/globSig src/oc/oc1/genInter src/oc/oc1/parser src/oc/oc1/sigAna src/oc/oc1/pattAna src/oc/oc1/implAna src/oc/shared/interOpal src/oc/shared/admin src/oc/oc2/base src/oc/oc2/acTrans src/oc/oc2/optim src/oc/oc2/trans src/oc/oc2/gen src/oc/oc1/driver src/oc/oc2/driver src/om/getopalname
  do
    for srcfile in $system/OCS/OcsDefs-SysDefs $system/OCS/*.c $system/OCS/*.h
    do
      if test -r $srcfile
      then 
        echo "patching $srcfile"
        cp $srcfile /tmp/patch
        touch -r $srcfile /tmp/patch
        sed $sedcmd < /tmp/patch > $srcfile
        touch -r /tmp/patch $srcfile
        rm /tmp/patch
      fi
    done
  done
  echo "patching src/om/genmake/OcsDefs-SysDefs.install"
  srcfile=src/om/genmake/OcsDefs-SysDefs.install
  cp $srcfile /tmp/OcsDefs-SysDefs
  sed $sedcmd < /tmp/OcsDefs-SysDefs > $srcfile
  rm /tmp/OcsDefs-SysDefs
else
  ocs_filenames_casefold="no"
fi

# -------------------------------------------------------------------------
# Output

AC_CONFIG_HEADER(src/lib/Internal/Compiler/unixconfig.h)

ocs_output_files="Makefile src/om/specs/Specs.basic"

AC_SUBST(ocs_oasys_require_readline)
AC_SUBST(ocs_oasys_sysdefs_readline)
if test "$ocs_cv_with_readline_lib" != "no" -a "$ocs_cv_with_readline_incl" != "no"
then
  OCS_OUTPUT(src/om/specs/Specs.lib.opal_readline)
  cp src/oasys/driver/TopLevel.impl.readline src/oasys/driver/TopLevel.impl
  ocs_oasys_require_readline=lib.opal_readline
  ocs_oasys_sysdefs_readline='$(OPAL_READLINE)'
else
  cp src/oasys/driver/TopLevel.impl.simple src/oasys/driver/TopLevel.impl
  ocs_oasys_require_readline=
  ocs_oasys_sysdefs_readline=
fi

if test "$ocs_cv_with_tcl_lib" != "no" -a "$ocs_cv_with_tcl_incl" != "no"
then
  OCS_OUTPUT(src/om/specs/Specs.lib.opal_tcl)
fi

if test "$ocs_cv_with_tk_lib" != "no" -a "$ocs_cv_with_tk_incl" != "no"
then
  OCS_OUTPUT(src/om/specs/Specs.lib.opal_tk)
fi

if test "$ocs_cv_feature_reflections" = "yes"
then
  OCS_OUTPUT(src/oc/reflections/InterOpalTools.impl
             src/oc/dynamite/InterOpalTools.impl)
fi

if test "$ocs_cv_feature_opaljava" = "yes"
then
  OCS_OUTPUT(src/om/specs/Specs.lib.opal_java)
fi

if test "$ocs_cv_feature_dosfop" != "no"
then
OCS_OUTPUT(src/dosfop/bin/dosfopMacroExpander
          src/dosfop/bin/fixtexindexpost
          src/dosfop/bin/fixtexindexpre
          src/dosfop/bin/texi2html)
fi

if test "$ocs_cv_feature_doc" != "no"
then
OCS_OUTPUT(doc/index/index.html
          doc/index/index_overview.html
          doc/minitutorial/mintut_uselb.html
          doc/minitutorial/mintut_prep.html
          doc/minitutorial/mintut_oasys.html)
fi

if test "$ocs_cv_feature_oasys" != "no"
then
  OCS_OUTPUT(src/om/specs/Specs.pkg.oasys)
  OCS_OUTPUT(src/oasys/driver/SysDefs)
  OCS_OUTPUT(src/oasys/driver/SysDefs.install)
fi

if test "$ocs_cv_feature_proofchecker" != "no"
then
  OCS_OUTPUT(src/proofchecker/oasyspc/pdriver/ProjectDefs)
  OCS_OUTPUT(src/proofchecker/oasyspc/scripts/startup.pchecker)	
  if test "$ocs_cv_with_readline_lib" != "no" -a "$ocs_cv_with_readline_incl" != "no"
  then
    cp src/proofchecker/oasyspc/pdriver/TopLevel.impl.readline src/proofchecker/oasyspc/pdriver/TopLevel.impl
  else
    cp src/proofchecker/oasyspc/pdriver/TopLevel.impl.simple src/proofchecker/oasyspc/pdriver/TopLevel.impl
  fi
fi
OCS_OUTPUT(opalconfig.makeTargets)
OCS_OUTPUT(src/lib/Internal/Compiler/SysDefs)
OCS_OUTPUT(ocs-version)
AC_OUTPUT($ocs_output_files)
echo "creating src/om/specs/ShSpecs.basic"
SED=$ac_cv_path_SED src/om/etc/gmake2sh < src/om/specs/Specs.basic > src/om/specs/ShSpecs.basic
