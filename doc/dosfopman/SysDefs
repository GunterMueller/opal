# Definitions for:
#
# $Id$


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Fundamental system definitions (please fill out)

include ../../src/om/specs/Specs.basic

# Name of the system

NODENAME = dosfopman
DOCNAME = DosfopManual


# The names of the direct subdirectories of this node
# also to be built. NOTE that these are not the OCS subsystems
# but rather reflect the hierarchy of the project tree.

SUBNODES  =


# Sources of the system included into a release

SOURCES = SysDefs $(DOCNAME).texi


# Manuals attached to this system included into a release

MANUALS =


# All components of this system. Add here auxiliary
# files which shall not be included into a release.

COMPONENTS = $(SOURCES) $(MANUALS) $(DOCNAME).texi

# Include this statement to deactivate the derived object cache.
#.BPOOL:


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Fundamental system rules (please fill out)


# The default target

_default: all


# The action on this node associated with 'all'

_all: $(DOCNAME).pdf

## need to redefine TEXI2DVI
TEXI2DVI = TEXINPUTS=$(DOSFOP)/tex:$(TEXINPUTS) \
	   $(DOSFOP)/bin/texi2dvi

%.pdf: %.texi
	$(TEXI2DVI) $<
	$(DVIPDFM) -o $@ $*.dvi
	$(RM) -f $*.dvi

# The action on this node associated with 'check'

_check: $(DOCNAME).texi

# The action on this node associated with 'clean'

_clean:
	$(RM) -f *.aux *.log *.toc  *.ps *.cp *.cps *.fn *.fns *.ky *.pg *.tp *.tps *.vr *.dvi *.pdf

# The action associated with 'install'

_install: $(INSTALLDOCPATH)/pdf/$(DOCNAME).pdf

$(INSTALLDOCPATH)/pdf/$(DOCNAME).pdf: $(DOCNAME).pdf
	@if [ -z $(INSTALLDOCPATH) ] ; \
	then $(ECHO) "You must define the variable INSTALLDOCPATH and INSTALLDOCFLAGS."; \
	else $(ECHO) "Installing document $(DOCNAME).pdf in $(INSTALLDOCPATH)/pdf"; \
	     $(OCSOM)/etc/xinstall $(INSTALLDOCFLAGS) $^ \
                  $(INSTALLDOCPATH)/pdf || exit 1; \
        fi



# A definitions and rules file which shall be build and afterwards recursivly
# included with each run of shape. If LOCALDEFS is defined, you must
# also give a rule how to create it.

LOCALDEFS =

#include $(LOCALDEFS)
#$(LOCALDEFS):


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Release management definitions (fill out if required)

# The file which carries the `lastrelease' and `inrelease' attributes
#   If this variable is defined, the project tree starting at this
#   node is considered to be a subrelease.

VERSIONFILE =

# Additional files which shall get the attributes
# (can be located in other systems)

AUXVERSIONFILES =


# Path to this node relative to the root of the release tree

RELEASENODEPATH = doc

# Derived objects which shall be included into the release

RELEASEOBJECTS =


# Path to the boot area for this node relative to the release tree

RELEASEBOOTPATH =

# Sources which shall be included into the boot area of a release

BOOTSOURCES =

# Derived objects which shall be included into the boot area of a release

BOOTOBJECTS =


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Release management rules (fill out if required)


# The action to derive the release objects

_releaseobjects:

# The action to derive the boot objects

_bootobjects:


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Include generic rules (do not change)

include $(OMLIBPATH)/GlobalRules


### Local Variables:
### mode: makefile
### End:
