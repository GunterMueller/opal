<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
<head>
<title>The OCS/OASYS Mini-Tutorial</title>
</head>

<body bgcolor=FFFFFF>

<h3>Using additional libraries with <code>ocs</code> </h3>

The Opal compilation system comes with a set of non-basic libraries
which support additional functionality and provide an interface to
other software packages such as Tcl/Tk 
<!-- or Java -->. <p>

An example for accessing these libraries can be found in
<code>examples/Graphics/Queens</code>.  This is an animated version of
the 8-queens problem based on Opal's window library, which is in
turn based on Tcl/Tk. Compile with <code>ocs</code> and execute:

<pre>
    $ cd examples/Graphics/Queens
    examples/Graphics/Queens $ ocs
->  Generating rules for queens'Queens ...
->  Checking Signature of Queens ...
->  Compiling Implementation of Queens ...
->  Generating  object code for Queens ...
->  Generating startup code for queens ...
->  Linking queens ...
    examples/Graphics/Queens $ ./queens
</pre>

<blockquote><small> If <code>./queens</code> fails because of missing
shared libraries, use <code>ldd queens</code> to check for these
libraries in detail.  Depending on the operation system, you may have
to use <code>ldconfig</code> or set <code>LD_LIBRARY_PATH</code> to
solve the problem. In general, the Opal libraries are prelinked to
contain a run-path pointing to "standard" locations (
e.g. <code>/usr/openwin/lib</code> for the X11 library under Solaris).
</small></blockquote>

The <code>SysDefs</code> file for this example shows how Opal's window
library is included:

<pre>
  examples/Graphics/Queens $ cat SysDefs 
  TOPSTRUCT = Queens
  TOPCOM = queens
  OPAL_LIBS = $(OPAL_WIN) $(OPAL_BASE)
</pre>

The variable <code>OPAL_LIBS</code> consists of a sequence of
references to predefined variables describing library packages.  In
version @ocs_version@, the following libraries are supported:

<UL>

<LI> <code>$(OPAL_WIN)</code> - the
<a href="BibOpalicaManual/Subsystem_Opal_Windows.html"> windows library </a>
for GUI programming

<LI> <code>$(OPAL_TK)</code> - the
<a href="BibOpalicaManual/Subsystem_Tk.html">Tk library</a>

<LI> <code>$(OPAL_TCL)</code> - the 
<a href="BibOpalicaManual/Subsystem_Tcl.html">Tcl library</a>
for integrating Tcl interpreters into Opal programs

<LI> <code>$(OPAL_READLINE)</code> - the GNU readline command-line editing tool
(<a href="BibOpalicaManual/Subsystem_Readline.html">documentation</a>)

<LI> <code>$(OPAL_PARSERLIGHT)</code> - a library for combinator parsing
(<a href="BibOpalicaManual/Subsystem_Parser_Light.html">documentation</a>)

<LI> <code>$(OPAL_JAVA)</code> - a type-safe interface to Java (<a
href="BibOpalicaManual/Subsystem_Java.html">documentation</a>)
(prototype!)

<LI> <code>$(OPAL_BASE)</code> - the Opal standard library comprising
a large collection of types and functions:
<a href="BibOpalicaManual/BibOpalicaManual.html" target =
"OPAL_index_body">Bibliotheca Opalica</a>

</UL> 

<hr>
<address><a href="mailto:opal@cs.tu-berlin.de">The Opal Group</a></address>
<!-- Created: Fri Oct 10 21:50:37 MET DST 1997 -->
<!-- hhmts start -->
Last modified: Thu Sep 16 21:34:16 MEST 1999
<!-- hhmts end -->

</body>
</html>
