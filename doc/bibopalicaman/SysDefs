# Definitions for:
#
# $Header: /home/florenz/opal/home_uebb_CVS/CVS/ocs/doc/bibopalicaman/SysDefs,v 1.3 1999-03-09 11:44:42 kd Exp $


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Fundamental system definitions (please fill out)


# Name of the system 

NODENAME = bibopalicaman
DOCNAME = BibOpalicaManual

# The names of the direct subdirectories of this node 
# also to be built. NOTE that these are not the OCS subsystems 
# but rather reflect the hierarchy of the project tree. 

SUBNODES  = 


# Sources of the system included into a release

SOURCES = SysDefs doc.tar.gz


# Manuals attached to this system included into a release

MANUALS = 


# All components of this system. Add here auxiliary
# files which shall not be included into a release.

COMPONENTS = $(SOURCES) $(MANUALS) README DOSFOP.tar.gz adapt
# Include this statement to deactivate the derived object cache. 
#.BPOOL:


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Fundamental system rules (please fill out)


# The default target

_default: all


# The action on this node associated with 'all'

_all: 
	

# The action on this node associated with 'check'


_check:
	

# The action on this node associated with 'clean'

_clean: DOSFOP.tar.gz doc.tar.gz
	@$(RM) -f DOSFOP/*
	@$(RM) -f doc/*
	@if [ -d DOSFOP ]; then rmdir DOSFOP; fi
	@if [ -d doc ]; then rmdir doc; fi


# The action associated with 'install' */

_install: doc.tar.gz
	@if [ -z $(INSTALLDOCPATH) ] ; \
	then $(ECHO) "You must define the variable INSTALLDOCPATH and INSTALLDOCFLAGS."; \
	else $(ECHO) "Installing document $(DOCNAME).html in $(INSTALLDOCPATH)/html/$(DOCNAME) ..."; \
	     $(OCSOM)/etc/xinstall $(INSTALLDOCFLAGS)  \
                  doc.tar.gz $(INSTALLDOCPATH)/html/$(DOCNAME)  || exit 1; \
	     (cd $(INSTALLDOCPATH)/html/$(DOCNAME); \
	      $(UNCOMPRESS) doc.tar.gz; \
	      $(TAR) xf doc.tar; \
	      $(RM) -f doc.tar) \
        fi

# Some rules for easier packing and unpacking

packN: DOSFOP.tar.gz doc.tar.gz

DOSFOP.tar.gz:
	@if [ -f DOSFOP/Toplevel.config ]; then $(TAR) cf DOSFOP.tar DOSFOP/* ; $(RM) -f DOSFOP.tar.gz; $(COMPRESS) DOSFOP.tar; fi

doc.tar.gz:
	@if [ -f doc/BibOpalicaManual.html ]; then (cd doc; $(TAR) cf ../doc.tar *; cd ..; $(RM) -f doc.tar.gz; $(COMPRESS) doc.tar) fi

unpackN: doc DOSFOP
	@$(UNCOMPRESS) DOSFOP.tar.gz; \
	$(UNCOMPRESS) doc.tar.gz; \
	$(TAR) xf DOSFOP.tar; \
	cd doc; cp ../doc.tar .; $(TAR) xf doc.tar; $(RM) doc.tar; cd ..

doc DOSFOP:
	@$(MKDIR) $@
	


# A definitions and rules file which shall be build and afterwards recursivly 
# included with each run of shape. If LOCALDEFS is defined, you must 
# also give a rule how to create it.

LOCALDEFS =

#include $(LOCALDEFS)
#$(LOCALDEFS):


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Release management definitions (fill out if required)

# The file which carries the `lastrelease' and `inrelease' attributes
#   If this variable is defined, the project tree starting at this
#   node is considered to be a subrelease.

VERSIONFILE =

# Additional files which shall get the attributes
# (can be located in other systems)

AUXVERSIONFILES =


# Path to this node relative to the root of the release tree

RELEASENODEPATH = doc

# Derived objects which shall be included into the release

RELEASEOBJECTS =


# Path to the boot area for this node relative to the release tree

RELEASEBOOTPATH = 

# Sources which shall be included into the boot area of a release

BOOTSOURCES =

# Derived objects which shall be included into the boot area of a release

BOOTOBJECTS =


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Release management rules (fill out if required)


# The action to derive the release objects

_releaseobjects:

# The action to derive the boot objects

_bootobjects:


# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Include generic rules (do not change)

include $(OMLIBPATH)/GlobalRules
